// API callback
related_results_labels({"version":"1.0","encoding":"UTF-8","feed":{"xmlns":"http://www.w3.org/2005/Atom","xmlns$openSearch":"http://a9.com/-/spec/opensearchrss/1.0/","xmlns$blogger":"http://schemas.google.com/blogger/2008","xmlns$georss":"http://www.georss.org/georss","xmlns$gd":"http://schemas.google.com/g/2005","xmlns$thr":"http://purl.org/syndication/thread/1.0","id":{"$t":"tag:blogger.com,1999:blog-4433261812355873863"},"updated":{"$t":"2015-09-16T10:54:08.518-07:00"},"category":[{"term":"CUDA Programming Concept"},{"term":"CUDA Basics"},{"term":"CUDA Advance"},{"term":"Optimization in CUDA"},{"term":"CUDA programs Level 1.1"},{"term":"Books on CUDA"},{"term":"Images Processing"},{"term":"CUDA programs Level 1.2"},{"term":"CUDA programs Level 2.1"},{"term":"Compilation"},{"term":"Matlab Coding"},{"term":"C program"},{"term":"Debugging"},{"term":"Installation"},{"term":"CUDA Function"},{"term":"Kepler Features"}],"title":{"type":"text","$t":"CUDA Programming"},"subtitle":{"type":"html","$t":"The Complexity of the Problem is the Simplicity of the Solution "},"link":[{"rel":"http://schemas.google.com/g/2005#feed","type":"application/atom+xml","href":"http:\/\/cuda-programming.blogspot.com\/feeds\/posts\/default"},{"rel":"self","type":"application/atom+xml","href":"http:\/\/www.blogger.com\/feeds\/4433261812355873863\/posts\/default\/-\/CUDA+programs+Level+1.2?alt=json-in-script"},{"rel":"alternate","type":"text/html","href":"http:\/\/cuda-programming.blogspot.com\/search\/label\/CUDA%20programs%20Level%201.2"},{"rel":"hub","href":"http://pubsubhubbub.appspot.com/"}],"author":[{"name":{"$t":"Nitin Gupta"},"email":{"$t":"noreply@blogger.com"},"gd$image":{"rel":"http://schemas.google.com/g/2005#thumbnail","width":"32","height":"32","src":"\/\/lh5.googleusercontent.com\/-y8J34_QMdZA\/AAAAAAAAAAI\/AAAAAAAAACk\/yRljcINNhbw\/s512-c\/photo.jpg"}}],"generator":{"version":"7.00","uri":"http://www.blogger.com","$t":"Blogger"},"openSearch$totalResults":{"$t":"4"},"openSearch$startIndex":{"$t":"1"},"openSearch$itemsPerPage":{"$t":"25"},"entry":[{"id":{"$t":"tag:blogger.com,1999:blog-4433261812355873863.post-4982689720571325385"},"published":{"$t":"2013-03-08T23:13:00.003-08:00"},"updated":{"$t":"2013-03-08T23:18:16.760-08:00"},"category":[{"scheme":"http://www.blogger.com/atom/ns#","term":"CUDA Advance"},{"scheme":"http://www.blogger.com/atom/ns#","term":"CUDA Programming Concept"},{"scheme":"http://www.blogger.com/atom/ns#","term":"CUDA programs Level 1.2"},{"scheme":"http://www.blogger.com/atom/ns#","term":"Optimization in CUDA"}],"title":{"type":"text","$t":"Optimization in  histogram CUDA code: When number of Bins not equal to max threads in a block"},"content":{"type":"html","$t":"\u003Cdiv dir=\"ltr\" style=\"text-align: left;\" trbidi=\"on\"\u003E\u003Cdiv style=\"text-align: center;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cdiv style=\"text-align: center;\"\u003E\u003Cspan style=\"font-size: 12.0pt; mso-bidi-font-family: Calibri; mso-bidi-theme-font: minor-latin;\"\u003EContinuing from \u003C\/span\u003E\u003Cb\u003E\u003Ci\u003E\u003Cspan style=\"color: #00b050; font-size: 16.0pt; mso-bidi-font-family: Calibri; mso-bidi-theme-font: minor-latin;\"\u003E\u003Ca href=\"http:\/\/cuda-programming.blogspot.in\/2013\/03\/further-optimization-in-histogram-cuda.html\"\u003EPart3\u003C\/a\u003E\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/i\u003E\u003C\/b\u003E\u003C\/div\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cdiv style=\"text-align: center;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cdiv style=\"text-align: center;\"\u003E\u003Cb\u003E\u003Ci\u003E\u003Cspan style=\"color: #00b050; font-size: 16.0pt; mso-bidi-font-family: Calibri; mso-bidi-theme-font: minor-latin;\"\u003E\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u003Cu\u003EPart4\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/u\u003E\u003C\/span\u003E\u003C\/i\u003E\u003C\/b\u003E\u003C\/div\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt; text-align: center;\"\u003E\u003Cb\u003E\u003Ci\u003E\u003Cu\u003E\u003Cspan style=\"color: #00b050; font-size: 16.0pt; mso-bidi-font-family: Calibri; mso-bidi-theme-font: minor-latin;\"\u003EOptimization in \u0026nbsp;histogram CUDA code \u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/u\u003E\u003C\/i\u003E\u003C\/b\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cdiv style=\"text-align: center;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cdiv style=\"text-align: center;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt; text-align: center;\"\u003E\u003Cb\u003E\u003Ci\u003E\u003Cu\u003E\u003Cspan style=\"color: #00b050; font-size: 16.0pt; mso-bidi-font-family: Calibri; mso-bidi-theme-font: minor-latin;\"\u003EWhen number of Bins not equal to max threads in a block \u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/u\u003E\u003C\/i\u003E\u003C\/b\u003E\u003Cbr \/\u003E\u003Cb\u003E\u003Ci\u003E\u003Cu\u003E\u003Cspan style=\"color: #00b050; font-size: 16.0pt; mso-bidi-font-family: Calibri; mso-bidi-theme-font: minor-latin;\"\u003E\u003Cbr \/\u003E\u003C\/span\u003E\u003C\/u\u003E\u003C\/i\u003E\u003C\/b\u003E\u003Cb\u003E\u003Ci\u003E\u003Cu\u003E\u003Cspan style=\"color: #00b050; font-size: 16.0pt; mso-bidi-font-family: Calibri; mso-bidi-theme-font: minor-latin;\"\u003E\u003Cbr \/\u003E\u003C\/span\u003E\u003C\/u\u003E\u003C\/i\u003E\u003C\/b\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"background: white; line-height: 14.25pt;\"\u003E\u003Cdiv style=\"text-align: center;\"\u003E\u003Cimg height=\"320\" src=\"http:\/\/occuprint.org\/wiki\/uploads\/Posters\/NotEqual.png\" width=\"247\" \/\u003E\u003C\/div\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"background: white; line-height: 14.25pt;\"\u003E\u003Cspan style=\"font-size: 12.0pt; mso-bidi-font-family: Calibri; mso-bidi-theme-font: minor-latin;\"\u003EAs I already mentioned at last section of Part3 that when the number of bins not equal to the maximum number of thread in a block, than problem become more complicated to solve. In this part of the article we’ll concentrate how to solve this problem efficiently. \u003Cbr \/\u003EIn order to solve this problem, it is very necessary to understand how we wrote our kernel where number of bins is equal to no. of threads in a block. So let examine them. \u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"background: white; line-height: 14.25pt;\"\u003E\u003Cspan style=\"font-size: 12.0pt; mso-bidi-font-family: Calibri; mso-bidi-theme-font: minor-latin;\"\u003EOur previous kernel is look like this; \u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Ctable border=\"1\" cellpadding=\"0\" cellspacing=\"0\" class=\"MsoTableGrid\" style=\"border-collapse: collapse; border: none; mso-border-alt: solid windowtext .5pt; mso-padding-alt: 0in 5.4pt 0in 5.4pt; mso-yfti-tbllook: 1184;\"\u003E \u003Ctbody\u003E\u003Ctr\u003E  \u003Ctd style=\"background: #92D050; border: solid windowtext 1.0pt; mso-border-alt: solid windowtext .5pt; padding: 0in 5.4pt 0in 5.4pt; width: 6.65in;\" valign=\"top\" width=\"638\"\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"font-family: \u0026quot;Courier New\u0026quot;; font-size: 10.0pt; mso-no-proof: yes;\"\u003E__global__   \u003Cspan style=\"color: blue;\"\u003Evoid\u003C\/span\u003E histo_kernel_optimized5\u003Cspan style=\"color: green;\"\u003E(\u003C\/span\u003E \u003Cspan style=\"color: blue;\"\u003Eunsigned\u003C\/span\u003E \u003Cspan style=\"color: blue;\"\u003Echar\u003C\/span\u003E \u003Cspan style=\"color: green;\"\u003E*\u003C\/span\u003Ebuffer\u003Cspan style=\"color: green;\"\u003E, \u003C\/span\u003E\u003Cspan style=\"color: blue;\"\u003Elong\u003C\/span\u003E size\u003Cspan style=\"color: green;\"\u003E, \u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"color: blue; font-family: \u0026quot;Courier New\u0026quot;; font-size: 10.0pt; mso-no-proof: yes;\"\u003E\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;   unsigned\u003C\/span\u003E\u003Cspan style=\"font-family: \u0026quot;Courier New\u0026quot;; font-size: 10.0pt; mso-no-proof: yes;\"\u003E \u003Cspan style=\"color: blue;\"\u003Eint\u003C\/span\u003E \u003Cspan style=\"color: green;\"\u003E*\u003C\/span\u003Ehisto \u003Cspan style=\"color: green;\"\u003E)\u003C\/span\u003E \u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"color: green; font-family: \u0026quot;Courier New\u0026quot;; font-size: 10.0pt; mso-no-proof: yes;\"\u003E{\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"color: red; font-family: \u0026quot;Courier New\u0026quot;; font-size: 10.0pt; mso-no-proof: yes;\"\u003ELine 1:\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; \u003C\/span\u003E\u003Cspan style=\"font-family: \u0026quot;Courier New\u0026quot;; font-size: 10.0pt; mso-no-proof: yes;\"\u003E__shared__   \u003Cspan style=\"color: blue;\"\u003Eunsigned\u003C\/span\u003E \u003Cspan style=\"color: blue;\"\u003Eint\u003C\/span\u003E  temp\u003Cspan style=\"color: green;\"\u003E[\u003C\/span\u003E256\u003Cspan style=\"color: green;\"\u003E];\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"color: red; font-family: \u0026quot;Courier New\u0026quot;; font-size: 10.0pt; mso-no-proof: yes;\"\u003ELine 2:\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; \u003C\/span\u003E\u003Cspan style=\"font-family: \u0026quot;Courier New\u0026quot;; font-size: 10.0pt; mso-no-proof: yes;\"\u003Etemp\u003Cspan style=\"color: green;\"\u003E[\u003C\/span\u003EthreadIdx\u003Cspan style=\"color: green;\"\u003E.\u003C\/span\u003Ex\u003Cspan style=\"color: green;\"\u003E]\u003C\/span\u003E \u003Cspan style=\"color: green;\"\u003E=\u003C\/span\u003E 0\u003Cspan style=\"color: green;\"\u003E; \u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"color: red; font-family: \u0026quot;Courier New\u0026quot;; font-size: 10.0pt; mso-no-proof: yes;\"\u003ELine 3:\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; \u003C\/span\u003E\u003Cspan style=\"font-family: \u0026quot;Courier New\u0026quot;; font-size: 10.0pt; mso-no-proof: yes;\"\u003E__syncthreads\u003Cspan style=\"color: green;\"\u003E();\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"color: red; font-family: \u0026quot;Courier New\u0026quot;; font-size: 10.0pt; mso-no-proof: yes;\"\u003ELine 4:\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; \u003C\/span\u003E\u003Cspan style=\"color: blue; font-family: \u0026quot;Courier New\u0026quot;; font-size: 10.0pt; mso-no-proof: yes;\"\u003Eint\u003C\/span\u003E\u003Cspan style=\"font-family: \u0026quot;Courier New\u0026quot;; font-size: 10.0pt; mso-no-proof: yes;\"\u003E i \u003Cspan style=\"color: green;\"\u003E=\u003C\/span\u003E threadIdx\u003Cspan style=\"color: green;\"\u003E.\u003C\/span\u003Ex \u003Cspan style=\"color: green;\"\u003E+\u003C\/span\u003E blockIdx\u003Cspan style=\"color: green;\"\u003E.\u003C\/span\u003Ex \u003Cspan style=\"color: green;\"\u003E*\u003C\/span\u003E blockDim\u003Cspan style=\"color: green;\"\u003E.\u003C\/span\u003Ex\u003Cspan style=\"color: green;\"\u003E;\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"color: red; font-family: \u0026quot;Courier New\u0026quot;; font-size: 10.0pt; mso-no-proof: yes;\"\u003ELine 5:\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; \u003C\/span\u003E\u003Cspan style=\"color: blue; font-family: \u0026quot;Courier New\u0026quot;; font-size: 10.0pt; mso-no-proof: yes;\"\u003Eint\u003C\/span\u003E\u003Cspan style=\"font-family: \u0026quot;Courier New\u0026quot;; font-size: 10.0pt; mso-no-proof: yes;\"\u003E offset \u003Cspan style=\"color: green;\"\u003E=\u003C\/span\u003E blockDim\u003Cspan style=\"color: green;\"\u003E.\u003C\/span\u003Ex \u003Cspan style=\"color: green;\"\u003E*\u003C\/span\u003E gridDim\u003Cspan style=\"color: green;\"\u003E.\u003C\/span\u003Ex\u003Cspan style=\"color: green;\"\u003E;\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"color: red; font-family: \u0026quot;Courier New\u0026quot;; font-size: 10.0pt; mso-no-proof: yes;\"\u003ELine 6:\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; \u003C\/span\u003E\u003Cspan style=\"color: blue; font-family: \u0026quot;Courier New\u0026quot;; font-size: 10.0pt; mso-no-proof: yes;\"\u003Ewhile\u003C\/span\u003E\u003Cspan style=\"font-family: \u0026quot;Courier New\u0026quot;; font-size: 10.0pt; mso-no-proof: yes;\"\u003E \u003Cspan style=\"color: green;\"\u003E(\u003C\/span\u003Ei \u003Cspan style=\"color: green;\"\u003E\u0026lt;\u003C\/span\u003E size\u003Cspan style=\"color: green;\"\u003E)\u003C\/span\u003E \u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"color: green; font-family: \u0026quot;Courier New\u0026quot;; font-size: 10.0pt; mso-no-proof: yes;\"\u003E\u0026nbsp; \u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;{\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"color: red; font-family: \u0026quot;Courier New\u0026quot;; font-size: 10.0pt; mso-no-proof: yes;\"\u003ELine 7:\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; \u003C\/span\u003E\u003Cspan style=\"font-family: \u0026quot;Courier New\u0026quot;; font-size: 10.0pt; mso-no-proof: yes;\"\u003EatomicAdd\u003Cspan style=\"color: green;\"\u003E(\u003C\/span\u003E \u003Cspan style=\"color: green;\"\u003E\u0026amp;\u003C\/span\u003Etemp\u003Cspan style=\"color: green;\"\u003E[\u003C\/span\u003Ebuffer\u003Cspan style=\"color: green;\"\u003E[\u003C\/span\u003Ei\u003Cspan style=\"color: green;\"\u003E]],\u003C\/span\u003E 1\u003Cspan style=\"color: green;\"\u003E);\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"color: red; font-family: \u0026quot;Courier New\u0026quot;; font-size: 10.0pt; mso-no-proof: yes;\"\u003ELine 8:\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; \u003C\/span\u003E\u003Cspan style=\"font-family: \u0026quot;Courier New\u0026quot;; font-size: 10.0pt; mso-no-proof: yes;\"\u003Ei \u003Cspan style=\"color: green;\"\u003E+=\u003C\/span\u003E offset\u003Cspan style=\"color: green;\"\u003E;\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"color: green; font-family: \u0026quot;Courier New\u0026quot;; font-size: 10.0pt; mso-no-proof: yes;\"\u003E\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; }\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"color: red; font-family: \u0026quot;Courier New\u0026quot;; font-size: 10.0pt; mso-no-proof: yes;\"\u003ELine 9:\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; \u003C\/span\u003E\u003Cspan style=\"font-family: \u0026quot;Courier New\u0026quot;; font-size: 10.0pt; mso-no-proof: yes;\"\u003E__syncthreads\u003Cspan style=\"color: green;\"\u003E();\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"color: red; font-family: \u0026quot;Courier New\u0026quot;; font-size: 10.0pt; mso-no-proof: yes;\"\u003ELine 10:\u0026nbsp;\u0026nbsp;\u0026nbsp; \u003C\/span\u003E\u003Cspan style=\"font-family: \u0026quot;Courier New\u0026quot;; font-size: 10.0pt; mso-no-proof: yes;\"\u003EatomicAdd\u003Cspan style=\"color: green;\"\u003E(\u003C\/span\u003E \u003Cspan style=\"color: green;\"\u003E\u0026amp;(\u003C\/span\u003Ehisto\u003Cspan style=\"color: green;\"\u003E[\u003C\/span\u003EthreadIdx\u003Cspan style=\"color: green;\"\u003E.\u003C\/span\u003Ex\u003Cspan style=\"color: green;\"\u003E]),\u003C\/span\u003E temp\u003Cspan style=\"color: green;\"\u003E[\u003C\/span\u003EthreadIdx\u003Cspan style=\"color: green;\"\u003E.\u003C\/span\u003Ex\u003Cspan style=\"color: green;\"\u003E]\u003C\/span\u003E \u003Cspan style=\"color: green;\"\u003E);\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"color: green; font-family: \u0026quot;Courier New\u0026quot;; font-size: 10.0pt; mso-no-proof: yes;\"\u003E}\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003C\/td\u003E \u003C\/tr\u003E\u003C\/tbody\u003E\u003C\/table\u003E\u003Cdiv class=\"MsoNormal\" style=\"background: white; line-height: 14.25pt;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"background: white; line-height: 14.25pt;\"\u003E\u003Cspan style=\"font-size: 12.0pt; mso-bidi-font-family: Calibri; mso-bidi-theme-font: minor-latin;\"\u003EAnd kernel invocation was like this;\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Ctable border=\"1\" cellpadding=\"0\" cellspacing=\"0\" class=\"MsoTableGrid\" style=\"border-collapse: collapse; border: none; mso-border-alt: solid windowtext .5pt; mso-padding-alt: 0in 5.4pt 0in 5.4pt; mso-yfti-tbllook: 1184;\"\u003E \u003Ctbody\u003E\u003Ctr\u003E  \u003Ctd style=\"background: #92D050; border: solid windowtext 1.0pt; mso-border-alt: solid windowtext .5pt; padding: 0in 5.4pt 0in 5.4pt; width: 6.65in;\" valign=\"top\" width=\"638\"\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"font-family: \u0026quot;Courier New\u0026quot;; font-size: 10.0pt; mso-no-proof: yes;\"\u003Ehisto_kernel_optimized\u003Cspan style=\"color: green;\"\u003E \u0026lt;\u0026lt;\u0026lt;\u003C\/span\u003Eblocks\u003Cspan style=\"color: green;\"\u003E*\u003C\/span\u003E2\u003Cspan style=\"color: green;\"\u003E,\u003C\/span\u003E256\u003Cspan style=\"color: green;\"\u003E\u0026gt;\u0026gt;\u0026gt;(\u003C\/span\u003E  dev_buffer\u003Cspan style=\"color: green;\"\u003E,\u003C\/span\u003E SIZE\u003Cspan style=\"color: green;\"\u003E,\u003C\/span\u003E  dev_histo \u003Cspan style=\"color: green;\"\u003E);\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"line-height: 14.25pt; margin-bottom: .0001pt; margin-bottom: 0in;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003C\/td\u003E \u003C\/tr\u003E\u003C\/tbody\u003E\u003C\/table\u003E\u003Cdiv class=\"MsoNormal\" style=\"background: white; line-height: 14.25pt;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"background: white; line-height: 14.25pt;\"\u003E\u003Cspan style=\"font-size: 12.0pt; mso-bidi-font-family: Calibri; mso-bidi-theme-font: minor-latin;\"\u003ESo in kernel; at \u003Cb\u003ELine 1:\u003C\/b\u003E we are allocating memory in shared memory refere as \u003Cb\u003Etemp; \u003C\/b\u003Ethe memory size is equal to number of bins (256).\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"background: white; line-height: 14.25pt;\"\u003E\u003Cspan style=\"font-size: 12.0pt; mso-bidi-font-family: Calibri; mso-bidi-theme-font: minor-latin;\"\u003EAt \u003Cb\u003ELine 2: \u003C\/b\u003EWe fill the \u003Cb\u003Etemp\u003C\/b\u003E array with zero, so effectively we are filling 256 elements as 0 in shared memory. \u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"background: white; line-height: 14.25pt;\"\u003E\u003Cspan style=\"font-size: 12.0pt; mso-bidi-font-family: Calibri; mso-bidi-theme-font: minor-latin;\"\u003EAt \u003Cb\u003ELine 3:\u003C\/b\u003E all threads wait for Line 2 task.\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"background: white; line-height: 14.25pt;\"\u003E\u003Cb\u003E\u003Cspan style=\"font-size: 12.0pt; mso-bidi-font-family: Calibri; mso-bidi-theme-font: minor-latin;\"\u003ELine 4 and 5: \u003C\/span\u003E\u003C\/b\u003E\u003Cspan style=\"font-size: 12.0pt; mso-bidi-font-family: Calibri; mso-bidi-theme-font: minor-latin;\"\u003EThese lines are trivial we are calculating absolute id and offset according to 256 threads (which is equal to number of bins).\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"background: white; line-height: 14.25pt;\"\u003E\u003Cb\u003E\u003Cspan style=\"font-size: 12.0pt; mso-bidi-font-family: Calibri; mso-bidi-theme-font: minor-latin;\"\u003ELine 6:\u003C\/span\u003E\u003C\/b\u003E\u003Cspan style=\"font-size: 12.0pt; mso-bidi-font-family: Calibri; mso-bidi-theme-font: minor-latin;\"\u003EIn line 6 we loop over all the element of buffer till our absolute id touch Size value.\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"background: white; line-height: 14.25pt;\"\u003E\u003Cb\u003E\u003Cspan style=\"font-size: 12.0pt; mso-bidi-font-family: Calibri; mso-bidi-theme-font: minor-latin;\"\u003ELine 7:\u003C\/span\u003E\u003C\/b\u003E\u003Cspan style=\"font-size: 12.0pt; mso-bidi-font-family: Calibri; mso-bidi-theme-font: minor-latin;\"\u003EWe are extracting the value located in buffer and increment the count in shared memory array temp.\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"background: white; line-height: 14.25pt;\"\u003E\u003Cb\u003E\u003Cspan style=\"font-size: 12.0pt; mso-bidi-font-family: Calibri; mso-bidi-theme-font: minor-latin;\"\u003ELine 8:\u003C\/span\u003E\u003C\/b\u003E\u003Cspan style=\"font-size: 12.0pt; mso-bidi-font-family: Calibri; mso-bidi-theme-font: minor-latin;\"\u003EIncrementing absolute id by offset\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"background: white; line-height: 14.25pt;\"\u003E\u003Cb\u003E\u003Cspan style=\"font-size: 12.0pt; mso-bidi-font-family: Calibri; mso-bidi-theme-font: minor-latin;\"\u003ELine 9:\u003C\/span\u003E\u003C\/b\u003E\u003Cspan style=\"font-size: 12.0pt; mso-bidi-font-family: Calibri; mso-bidi-theme-font: minor-latin;\"\u003Ethreads wait for all other thread In a block.\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"background: white; line-height: 14.25pt;\"\u003E\u003Cb\u003E\u003Cspan style=\"font-size: 12.0pt; mso-bidi-font-family: Calibri; mso-bidi-theme-font: minor-latin;\"\u003ELine 10\u003C\/span\u003E\u003C\/b\u003E\u003Cspan style=\"font-size: 12.0pt; mso-bidi-font-family: Calibri; mso-bidi-theme-font: minor-latin;\"\u003E: finally we update our final result. \u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNoSpacing\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNoSpacing\"\u003ENow In order to change the above code for Bincount = 1024 (say), we need to care that each element will touch once. Since, at the kernel invocation we are lunching 256 threads in a block and our number of bins is 1024 then shared memory size should be equal to number bins, so it should be 1024, it implies that\u003Cb\u003E line 1 will change as below\u003C\/b\u003E.\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNoSpacing\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Ctable border=\"1\" cellpadding=\"0\" cellspacing=\"0\" class=\"MsoTableGrid\" style=\"border-collapse: collapse; border: none; mso-border-alt: solid windowtext .5pt; mso-padding-alt: 0in 5.4pt 0in 5.4pt; mso-yfti-tbllook: 1184;\"\u003E \u003Ctbody\u003E\u003Ctr\u003E  \u003Ctd style=\"background: #92D050; border: solid windowtext 1.0pt; mso-border-alt: solid windowtext .5pt; padding: 0in 5.4pt 0in 5.4pt; width: 6.65in;\" valign=\"top\" width=\"638\"\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"color: red; font-family: \u0026quot;Courier New\u0026quot;; font-size: 10.0pt; mso-no-proof: yes;\"\u003ELine 1:\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; \u003C\/span\u003E\u003Cspan style=\"font-family: \u0026quot;Courier New\u0026quot;; font-size: 10.0pt; mso-no-proof: yes;\"\u003E__shared__   \u003Cspan style=\"color: blue;\"\u003Eunsigned\u003C\/span\u003E \u003Cspan style=\"color: blue;\"\u003Eint\u003C\/span\u003E  temp\u003Cspan style=\"color: green;\"\u003E[\u003C\/span\u003E1024\u003Cspan style=\"color: green;\"\u003E];\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNoSpacing\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003C\/td\u003E \u003C\/tr\u003E\u003C\/tbody\u003E\u003C\/table\u003E\u003Cdiv class=\"MsoNoSpacing\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNoSpacing\"\u003E\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; What about the Line 2; if threads = 256 then only 256 element will affect but our bins count was 1024 then all should be initialize by 0. Then how we achieve this? \u003Co:p\u003E\u003C\/o:p\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNoSpacing\"\u003ESince our memory pattern was look like this;\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/div\u003E\u003Ctable border=\"1\" cellpadding=\"0\" cellspacing=\"0\" class=\"MsoTableGrid\" style=\"border-collapse: collapse; border: none; mso-border-alt: solid windowtext .5pt; mso-padding-alt: 0in 5.4pt 0in 5.4pt; mso-yfti-tbllook: 1184;\"\u003E \u003Ctbody\u003E\u003Ctr\u003E  \u003Ctd style=\"background: #00B0F0; border: solid windowtext 1.0pt; mso-border-alt: solid windowtext .5pt; padding: 0in 5.4pt 0in 5.4pt; width: 6.65in;\" valign=\"top\" width=\"638\"\u003E\u003Cdiv align=\"center\" class=\"MsoNoSpacing\" style=\"text-align: center;\"\u003EThread_Id\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; update at location\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/div\u003E\u003Cdiv align=\"center\" class=\"MsoNoSpacing\" style=\"text-align: center;\"\u003E0\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; 0\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/div\u003E\u003Cdiv align=\"center\" class=\"MsoNoSpacing\" style=\"text-align: center;\"\u003E1\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; 1\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/div\u003E\u003Cdiv align=\"center\" class=\"MsoNoSpacing\" style=\"text-align: center;\"\u003E2\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; 2\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/div\u003E\u003Cdiv align=\"center\" class=\"MsoNoSpacing\" style=\"text-align: center;\"\u003E.\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/div\u003E\u003Cdiv align=\"center\" class=\"MsoNoSpacing\" style=\"text-align: center;\"\u003E.\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/div\u003E\u003Cdiv align=\"center\" class=\"MsoNoSpacing\" style=\"text-align: center;\"\u003E255\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; 255\u003Cspan style=\"font-size: 12.0pt; mso-bidi-font-family: Calibri; mso-bidi-theme-font: minor-latin;\"\u003E\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/div\u003E\u003C\/td\u003E \u003C\/tr\u003E\u003C\/tbody\u003E\u003C\/table\u003E\u003Cdiv class=\"MsoNormal\" style=\"background: white; line-height: 14.25pt;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"background: white; line-height: 14.25pt;\"\u003E\u003Cspan style=\"font-size: 12.0pt; mso-bidi-font-family: Calibri; mso-bidi-theme-font: minor-latin;\"\u003EThe entire element followed by 255 means from 256 to 1023 was not affect at all. One method is to allow only last thread to update from 255 to 1023 but by doing this we are forcing last threads to does more work than other threads. So we can take advantage of other threads. One way to do this, let say last thread fill 1023 location then second last thread should update 1022 location and so on then pattern will look like this;\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Ctable border=\"1\" cellpadding=\"0\" cellspacing=\"0\" class=\"MsoTableGrid\" style=\"border-collapse: collapse; border: none; mso-border-alt: solid windowtext .5pt; mso-padding-alt: 0in 5.4pt 0in 5.4pt; mso-yfti-tbllook: 1184;\"\u003E \u003Ctbody\u003E\u003Ctr\u003E  \u003Ctd style=\"background: #00B0F0; border: solid windowtext 1.0pt; mso-border-alt: solid windowtext .5pt; padding: 0in 5.4pt 0in 5.4pt; width: 6.65in;\" valign=\"top\" width=\"638\"\u003E\u003Cdiv align=\"center\" class=\"MsoNoSpacing\" style=\"text-align: center;\"\u003EThread_Id\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; \u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;update at location\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/div\u003E\u003Cdiv align=\"center\" class=\"MsoNoSpacing\" style=\"text-align: center;\"\u003E0\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; 0,256,512,768\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/div\u003E\u003Cdiv align=\"center\" class=\"MsoNoSpacing\" style=\"text-align: center;\"\u003E1\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; 1,257,513,769\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/div\u003E\u003Cdiv align=\"center\" class=\"MsoNoSpacing\" style=\"text-align: center;\"\u003E2\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; 2,258,514,770\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/div\u003E\u003Cdiv align=\"center\" class=\"MsoNoSpacing\" style=\"text-align: center;\"\u003E.\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/div\u003E\u003Cdiv align=\"center\" class=\"MsoNoSpacing\" style=\"text-align: center;\"\u003E.\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/div\u003E\u003Cdiv align=\"center\" class=\"MsoNoSpacing\" style=\"text-align: center;\"\u003E255\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; 255,511,767,1023\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"line-height: 14.25pt; margin-bottom: .0001pt; margin-bottom: 0in;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003C\/td\u003E \u003C\/tr\u003E\u003C\/tbody\u003E\u003C\/table\u003E\u003Cdiv class=\"MsoNormal\" style=\"background: white; line-height: 14.25pt;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"background: white; line-height: 14.25pt;\"\u003E\u003Cspan style=\"font-size: 12.0pt; mso-bidi-font-family: Calibri; mso-bidi-theme-font: minor-latin;\"\u003ESo, Line 2 will change and look like this.\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Ctable border=\"1\" cellpadding=\"0\" cellspacing=\"0\" class=\"MsoTableGrid\" style=\"border-collapse: collapse; border: none; mso-border-alt: solid windowtext .5pt; mso-padding-alt: 0in 5.4pt 0in 5.4pt; mso-yfti-tbllook: 1184;\"\u003E \u003Ctbody\u003E\u003Ctr\u003E  \u003Ctd style=\"background: #92D050; border: solid windowtext 1.0pt; mso-border-alt: solid windowtext .5pt; padding: 0in 5.4pt 0in 5.4pt; width: 6.65in;\" valign=\"top\" width=\"638\"\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"font-family: \u0026quot;Courier New\u0026quot;; font-size: 10.0pt; mso-no-proof: yes;\"\u003Etemp\u003Cspan style=\"color: green;\"\u003E[\u003C\/span\u003EthreadIdx\u003Cspan style=\"color: green;\"\u003E.\u003C\/span\u003Ex + 0\u003Cspan style=\"color: green;\"\u003E]\u003C\/span\u003E \u003Cspan style=\"color: green;\"\u003E=\u003C\/span\u003E 0\u003Cspan style=\"color: green;\"\u003E; \u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"font-family: \u0026quot;Courier New\u0026quot;; font-size: 10.0pt; mso-no-proof: yes;\"\u003Etemp\u003Cspan style=\"color: green;\"\u003E[\u003C\/span\u003EthreadIdx\u003Cspan style=\"color: green;\"\u003E.\u003C\/span\u003Ex + 256\u003Cspan style=\"color: green;\"\u003E]\u003C\/span\u003E \u003Cspan style=\"color: green;\"\u003E=\u003C\/span\u003E 0\u003Cspan style=\"color: green;\"\u003E; \u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"font-family: \u0026quot;Courier New\u0026quot;; font-size: 10.0pt; mso-no-proof: yes;\"\u003Etemp\u003Cspan style=\"color: green;\"\u003E[\u003C\/span\u003EthreadIdx\u003Cspan style=\"color: green;\"\u003E.\u003C\/span\u003Ex +   512\u003Cspan style=\"color: green;\"\u003E]\u003C\/span\u003E \u003Cspan style=\"color: green;\"\u003E=\u003C\/span\u003E 0\u003Cspan style=\"color: green;\"\u003E; \u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"font-family: \u0026quot;Courier New\u0026quot;; font-size: 10.0pt; mso-no-proof: yes;\"\u003Etemp\u003Cspan style=\"color: green;\"\u003E[\u003C\/span\u003EthreadIdx\u003Cspan style=\"color: green;\"\u003E.\u003C\/span\u003Ex +   768\u003Cspan style=\"color: green;\"\u003E]\u003C\/span\u003E \u003Cspan style=\"color: green;\"\u003E=\u003C\/span\u003E 0\u003Cspan style=\"color: green;\"\u003E; \u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"line-height: 14.25pt; margin-bottom: .0001pt; margin-bottom: 0in;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003C\/td\u003E \u003C\/tr\u003E\u003C\/tbody\u003E\u003C\/table\u003E\u003Cdiv class=\"MsoNormal\" style=\"background: white; line-height: 14.25pt;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"background: white; line-height: 14.25pt;\"\u003E\u003Cspan style=\"font-size: 12.0pt; mso-bidi-font-family: Calibri; mso-bidi-theme-font: minor-latin;\"\u003ENow what about the line from 3 to 9, does anything will change? No, Since loop is working fine and it will update accordingly. For example let say at absolute id = 10, if the buffer value is 678 then corresponding value will update. \u0026nbsp;\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"background: white; line-height: 14.25pt;\"\u003E\u003Cspan style=\"font-size: 12.0pt; mso-bidi-font-family: Calibri; mso-bidi-theme-font: minor-latin;\"\u003EAnd the line 10 has to be change accordingly as line 2 changed;\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Ctable border=\"1\" cellpadding=\"0\" cellspacing=\"0\" class=\"MsoTableGrid\" style=\"border-collapse: collapse; border: none; mso-border-alt: solid windowtext .5pt; mso-padding-alt: 0in 5.4pt 0in 5.4pt; mso-yfti-tbllook: 1184;\"\u003E \u003Ctbody\u003E\u003Ctr\u003E  \u003Ctd style=\"background: #92D050; border: solid windowtext 1.0pt; mso-border-alt: solid windowtext .5pt; padding: 0in 5.4pt 0in 5.4pt; width: 6.65in;\" valign=\"top\" width=\"638\"\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"line-height: 14.25pt; margin-bottom: .0001pt; margin-bottom: 0in;\"\u003E\u003Cspan style=\"font-family: \u0026quot;Courier New\u0026quot;; font-size: 10.0pt; mso-no-proof: yes;\"\u003EatomicAdd\u003Cspan style=\"color: green;\"\u003E(\u003C\/span\u003E \u003Cspan style=\"color: green;\"\u003E\u0026amp;(\u003C\/span\u003Ehisto\u003Cspan style=\"color: green;\"\u003E[\u003C\/span\u003EthreadIdx\u003Cspan style=\"color: green;\"\u003E.\u003C\/span\u003Ex + 0\u003Cspan style=\"color: green;\"\u003E]),\u003C\/span\u003E temp\u003Cspan style=\"color: green;\"\u003E[\u003C\/span\u003EthreadIdx\u003Cspan style=\"color: green;\"\u003E.\u003C\/span\u003Ex + 0\u003Cspan style=\"color: green;\"\u003E]\u003C\/span\u003E \u003Cspan style=\"color: green;\"\u003E);\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"line-height: 14.25pt; margin-bottom: .0001pt; margin-bottom: 0in;\"\u003E\u003Cspan style=\"font-family: \u0026quot;Courier New\u0026quot;; font-size: 10.0pt; mso-no-proof: yes;\"\u003EatomicAdd\u003Cspan style=\"color: green;\"\u003E(\u003C\/span\u003E \u003Cspan style=\"color: green;\"\u003E\u0026amp;(\u003C\/span\u003Ehisto\u003Cspan style=\"color: green;\"\u003E[\u003C\/span\u003EthreadIdx\u003Cspan style=\"color: green;\"\u003E.\u003C\/span\u003Ex +   256\u003Cspan style=\"color: green;\"\u003E]),\u003C\/span\u003E temp\u003Cspan style=\"color: green;\"\u003E[\u003C\/span\u003EthreadIdx\u003Cspan style=\"color: green;\"\u003E.\u003C\/span\u003Ex + 256\u003Cspan style=\"color: green;\"\u003E]\u003C\/span\u003E \u003Cspan style=\"color: green;\"\u003E);\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"line-height: 14.25pt; margin-bottom: .0001pt; margin-bottom: 0in;\"\u003E\u003Cspan style=\"font-family: \u0026quot;Courier New\u0026quot;; font-size: 10.0pt; mso-no-proof: yes;\"\u003EatomicAdd\u003Cspan style=\"color: green;\"\u003E(\u003C\/span\u003E \u003Cspan style=\"color: green;\"\u003E\u0026amp;(\u003C\/span\u003Ehisto\u003Cspan style=\"color: green;\"\u003E[\u003C\/span\u003EthreadIdx\u003Cspan style=\"color: green;\"\u003E.\u003C\/span\u003Ex +   512\u003Cspan style=\"color: green;\"\u003E]),\u003C\/span\u003E temp\u003Cspan style=\"color: green;\"\u003E[\u003C\/span\u003EthreadIdx\u003Cspan style=\"color: green;\"\u003E.\u003C\/span\u003Ex + 512\u003Cspan style=\"color: green;\"\u003E]\u003C\/span\u003E \u003Cspan style=\"color: green;\"\u003E);\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"line-height: 14.25pt; margin-bottom: .0001pt; margin-bottom: 0in;\"\u003E\u003Cspan style=\"font-family: \u0026quot;Courier New\u0026quot;; font-size: 10.0pt; mso-no-proof: yes;\"\u003EatomicAdd\u003Cspan style=\"color: green;\"\u003E(\u003C\/span\u003E \u003Cspan style=\"color: green;\"\u003E\u0026amp;(\u003C\/span\u003Ehisto\u003Cspan style=\"color: green;\"\u003E[\u003C\/span\u003EthreadIdx\u003Cspan style=\"color: green;\"\u003E.\u003C\/span\u003Ex +   768\u003Cspan style=\"color: green;\"\u003E]),\u003C\/span\u003E temp\u003Cspan style=\"color: green;\"\u003E[\u003C\/span\u003EthreadIdx\u003Cspan style=\"color: green;\"\u003E.\u003C\/span\u003Ex + 768\u003Cspan style=\"color: green;\"\u003E]\u003C\/span\u003E \u003Cspan style=\"color: green;\"\u003E);\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"line-height: 14.25pt; margin-bottom: .0001pt; margin-bottom: 0in;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003C\/td\u003E \u003C\/tr\u003E\u003C\/tbody\u003E\u003C\/table\u003E\u003Cdiv class=\"MsoNormal\" style=\"background: white; line-height: 14.25pt;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"background: white; line-height: 14.25pt;\"\u003E\u003Cspan style=\"font-size: 12.0pt; mso-bidi-font-family: Calibri; mso-bidi-theme-font: minor-latin;\"\u003EHence our final kernel will look like this; \u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Ctable border=\"1\" cellpadding=\"0\" cellspacing=\"0\" class=\"MsoTableGrid\" style=\"border-collapse: collapse; border: none; mso-border-alt: solid windowtext .5pt; mso-padding-alt: 0in 5.4pt 0in 5.4pt; mso-yfti-tbllook: 1184;\"\u003E \u003Ctbody\u003E\u003Ctr\u003E  \u003Ctd style=\"background: #92D050; border: solid windowtext 1.0pt; mso-border-alt: solid windowtext .5pt; padding: 0in 5.4pt 0in 5.4pt; width: 6.65in;\" valign=\"top\" width=\"638\"\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"font-family: \u0026quot;Courier New\u0026quot;; font-size: 10.0pt; mso-no-proof: yes;\"\u003E__global__   \u003Cspan style=\"color: blue;\"\u003Evoid\u003C\/span\u003E histo_kernel_optimized5\u003Cspan style=\"color: green;\"\u003E(\u003C\/span\u003E \u003Cspan style=\"color: blue;\"\u003Eunsigned\u003C\/span\u003E \u003Cspan style=\"color: blue;\"\u003Echar\u003C\/span\u003E \u003Cspan style=\"color: green;\"\u003E*\u003C\/span\u003Ebuffer\u003Cspan style=\"color: green;\"\u003E, \u003C\/span\u003E\u003Cspan style=\"color: blue;\"\u003Elong\u003C\/span\u003E size\u003Cspan style=\"color: green;\"\u003E, \u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"color: blue; font-family: \u0026quot;Courier New\u0026quot;; font-size: 10.0pt; mso-no-proof: yes;\"\u003E\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;   unsigned\u003C\/span\u003E\u003Cspan style=\"font-family: \u0026quot;Courier New\u0026quot;; font-size: 10.0pt; mso-no-proof: yes;\"\u003E \u003Cspan style=\"color: blue;\"\u003Eint\u003C\/span\u003E \u003Cspan style=\"color: green;\"\u003E*\u003C\/span\u003Ehisto \u003Cspan style=\"color: green;\"\u003E)\u003C\/span\u003E \u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"color: green; font-family: \u0026quot;Courier New\u0026quot;; font-size: 10.0pt; mso-no-proof: yes;\"\u003E{\u003C\/span\u003E\u003Cspan style=\"font-family: \u0026quot;Courier New\u0026quot;; font-size: 10.0pt; mso-no-proof: yes;\"\u003E\u0026nbsp;\u0026nbsp;\u0026nbsp; \u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"font-family: \u0026quot;Courier New\u0026quot;; font-size: 10.0pt; mso-no-proof: yes;\"\u003E\u0026nbsp;\u0026nbsp; \u0026nbsp;__shared__ \u003Cspan style=\"color: blue;\"\u003Eunsigned\u003C\/span\u003E  \u003Cspan style=\"color: blue;\"\u003Eint\u003C\/span\u003E temp\u003Cspan style=\"color: green;\"\u003E[\u003C\/span\u003E\u003Cspan style=\"color: red;\"\u003E1024\u003C\/span\u003E\u003Cspan style=\"color: green;\"\u003E];\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"font-family: \u0026quot;Courier New\u0026quot;; font-size: 10.0pt; mso-no-proof: yes;\"\u003E\u0026nbsp;\u0026nbsp; \u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"font-family: \u0026quot;Courier New\u0026quot;; font-size: 10.0pt; mso-no-proof: yes;\"\u003E\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; temp\u003Cspan style=\"color: green;\"\u003E[\u003C\/span\u003EthreadIdx\u003Cspan style=\"color: green;\"\u003E.\u003C\/span\u003Ex + 0\u003Cspan style=\"color: green;\"\u003E]\u003C\/span\u003E \u003Cspan style=\"color: green;\"\u003E=\u003C\/span\u003E 0\u003Cspan style=\"color: green;\"\u003E; \u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"font-family: \u0026quot;Courier New\u0026quot;; font-size: 10.0pt; mso-no-proof: yes;\"\u003E\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; \u003Cspan style=\"color: red;\"\u003Etemp[threadIdx.x   + 256] = 0; \u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"color: red; font-family: \u0026quot;Courier New\u0026quot;; font-size: 10.0pt; mso-no-proof: yes;\"\u003E\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; temp[threadIdx.x + 512] = 0; \u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"color: red; font-family: \u0026quot;Courier New\u0026quot;; font-size: 10.0pt; mso-no-proof: yes;\"\u003E\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; temp[threadIdx.x + 768] = 0; \u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"font-family: \u0026quot;Courier New\u0026quot;; font-size: 10.0pt; mso-no-proof: yes;\"\u003E\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; __syncthreads\u003Cspan style=\"color: green;\"\u003E();\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"color: blue; font-family: \u0026quot;Courier New\u0026quot;; font-size: 10.0pt; mso-no-proof: yes;\"\u003E\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; int\u003C\/span\u003E\u003Cspan style=\"font-family: \u0026quot;Courier New\u0026quot;; font-size: 10.0pt; mso-no-proof: yes;\"\u003E i \u003Cspan style=\"color: green;\"\u003E=\u003C\/span\u003E threadIdx\u003Cspan style=\"color: green;\"\u003E.\u003C\/span\u003Ex \u003Cspan style=\"color: green;\"\u003E+\u003C\/span\u003E blockIdx\u003Cspan style=\"color: green;\"\u003E.\u003C\/span\u003Ex \u003Cspan style=\"color: green;\"\u003E*\u003C\/span\u003E blockDim\u003Cspan style=\"color: green;\"\u003E.\u003C\/span\u003Ex\u003Cspan style=\"color: green;\"\u003E;\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"color: blue; font-family: \u0026quot;Courier New\u0026quot;; font-size: 10.0pt; mso-no-proof: yes;\"\u003E\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; int\u003C\/span\u003E\u003Cspan style=\"font-family: \u0026quot;Courier New\u0026quot;; font-size: 10.0pt; mso-no-proof: yes;\"\u003E offset \u003Cspan style=\"color: green;\"\u003E=\u003C\/span\u003E blockDim\u003Cspan style=\"color: green;\"\u003E.\u003C\/span\u003Ex \u003Cspan style=\"color: green;\"\u003E*\u003C\/span\u003E gridDim\u003Cspan style=\"color: green;\"\u003E.\u003C\/span\u003Ex\u003Cspan style=\"color: green;\"\u003E;\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"color: blue; font-family: \u0026quot;Courier New\u0026quot;; font-size: 10.0pt; mso-no-proof: yes;\"\u003E\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; while\u003C\/span\u003E\u003Cspan style=\"font-family: \u0026quot;Courier New\u0026quot;; font-size: 10.0pt; mso-no-proof: yes;\"\u003E \u003Cspan style=\"color: green;\"\u003E(\u003C\/span\u003Ei \u003Cspan style=\"color: green;\"\u003E\u0026lt;\u003C\/span\u003E size\u003Cspan style=\"color: green;\"\u003E)\u003C\/span\u003E \u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"color: green; font-family: \u0026quot;Courier New\u0026quot;; font-size: 10.0pt; mso-no-proof: yes;\"\u003E\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; {\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"font-family: \u0026quot;Courier New\u0026quot;; font-size: 10.0pt; mso-no-proof: yes;\"\u003E\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; atomicAdd\u003Cspan style=\"color: green;\"\u003E(\u003C\/span\u003E \u003Cspan style=\"color: green;\"\u003E\u0026amp;\u003C\/span\u003Etemp\u003Cspan style=\"color: green;\"\u003E[\u003C\/span\u003Ebuffer\u003Cspan style=\"color: green;\"\u003E[\u003C\/span\u003Ei\u003Cspan style=\"color: green;\"\u003E]],\u003C\/span\u003E 1\u003Cspan style=\"color: green;\"\u003E);\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"font-family: \u0026quot;Courier New\u0026quot;; font-size: 10.0pt; mso-no-proof: yes;\"\u003E\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; i \u003Cspan style=\"color: green;\"\u003E+=\u003C\/span\u003E  offset\u003Cspan style=\"color: green;\"\u003E;\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"color: green; font-family: \u0026quot;Courier New\u0026quot;; font-size: 10.0pt; mso-no-proof: yes;\"\u003E\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; }\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"font-family: \u0026quot;Courier New\u0026quot;; font-size: 10.0pt; mso-no-proof: yes;\"\u003E\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; __syncthreads\u003Cspan style=\"color: green;\"\u003E();\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"font-family: \u0026quot;Courier New\u0026quot;; font-size: 10.0pt; mso-no-proof: yes;\"\u003E\u0026nbsp;\u0026nbsp; \u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"line-height: 14.25pt; margin-bottom: .0001pt; margin-bottom: 0in;\"\u003E\u003Cspan style=\"font-family: \u0026quot;Courier New\u0026quot;; font-size: 10.0pt; mso-no-proof: yes;\"\u003E\u0026nbsp;\u0026nbsp;\u0026nbsp; \u003Cspan style=\"color: red;\"\u003EatomicAdd(   \u0026amp;(histo[threadIdx.x + 0]), temp[threadIdx.x + 0] );\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"line-height: 14.25pt; margin-bottom: .0001pt; margin-bottom: 0in;\"\u003E\u003Cspan style=\"color: red; font-family: \u0026quot;Courier New\u0026quot;; font-size: 10.0pt; mso-no-proof: yes;\"\u003E\u0026nbsp;\u0026nbsp;\u0026nbsp; atomicAdd( \u0026amp;(histo[threadIdx.x   + 256]), temp[threadIdx.x + 256] );\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"line-height: 14.25pt; margin-bottom: .0001pt; margin-bottom: 0in;\"\u003E\u003Cspan style=\"color: red; font-family: \u0026quot;Courier New\u0026quot;; font-size: 10.0pt; mso-no-proof: yes;\"\u003E\u0026nbsp;\u0026nbsp;\u0026nbsp; atomicAdd( \u0026amp;(histo[threadIdx.x   + 512]), temp[threadIdx.x + 512] );\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"line-height: 14.25pt; margin-bottom: .0001pt; margin-bottom: 0in;\"\u003E\u003Cspan style=\"color: red; font-family: \u0026quot;Courier New\u0026quot;; font-size: 10.0pt; mso-no-proof: yes;\"\u003E\u0026nbsp;\u0026nbsp;\u0026nbsp; atomicAdd( \u0026amp;(histo[threadIdx.x   + 768]), temp[threadIdx.x + 768] );\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"color: green; font-family: \u0026quot;Courier New\u0026quot;; font-size: 10.0pt; mso-no-proof: yes;\"\u003E}\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003C\/td\u003E \u003C\/tr\u003E\u003C\/tbody\u003E\u003C\/table\u003E\u003Cdiv class=\"MsoNormal\" style=\"background: white; line-height: 14.25pt;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"background: white; line-height: 14.25pt;\"\u003E\u003Cspan style=\"font-size: 12.0pt; mso-bidi-font-family: Calibri; mso-bidi-theme-font: minor-latin;\"\u003EAll the updated lines are colored red in above code and we are done, our kernel invocation does not change. \u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"background: white; line-height: 14.25pt;\"\u003E\u003Cspan style=\"font-size: 12.0pt; mso-bidi-font-family: Calibri; mso-bidi-theme-font: minor-latin;\"\u003ENow time for quiz, if you’ll run your CUDA code in GPU GTX 280 with CC = 1.3 having 30 multiprocessor. Then how many element per thread in above code you are operating? You can answer in comment box.\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"background: white; line-height: 14.25pt;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"background: white; line-height: 14.25pt;\"\u003E\u003Cb\u003E\u003Cspan style=\"font-size: 12.0pt; mso-bidi-font-family: Calibri; mso-bidi-theme-font: minor-latin;\"\u003EHint:\u003C\/span\u003E\u003C\/b\u003E\u003Cspan style=\"font-size: 12.0pt; mso-bidi-font-family: Calibri; mso-bidi-theme-font: minor-latin;\"\u003EBlocks = 2*30 = 60 and threads= 256 in a block so total threads = blocks*threads; \u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"background: white; line-height: 14.25pt;\"\u003E\u003Cspan style=\"background-position: initial initial; background-repeat: initial initial; border: 1pt none windowtext; color: #0070c0; font-family: Arial, sans-serif; padding: 0in;\"\u003EI hope you must like this article and have learned\u003Cspan class=\"apple-converted-space\"\u003E\u0026nbsp;histogram computation with GPU using CUDA.\u003C\/span\u003E\u003C\/span\u003E\u003Cspan style=\"color: #7a7575; font-family: \u0026quot;Arial\u0026quot;,\u0026quot;sans-serif\u0026quot;; font-size: 10.0pt;\"\u003E\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"background: white; line-height: 14.25pt;\"\u003E\u003Cspan style=\"border: none windowtext 1.0pt; color: #7a7575; font-family: \u0026quot;Arial\u0026quot;,\u0026quot;sans-serif\u0026quot;; font-size: 13.5pt; mso-border-alt: none windowtext 0in; padding: 0in;\"\u003EGot Questions?\u003C\/span\u003E\u003Cspan style=\"color: #7a7575; font-family: \u0026quot;Arial\u0026quot;,\u0026quot;sans-serif\u0026quot;; font-size: 10.0pt;\"\u003E\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"background: white; line-height: 14.25pt;\"\u003E\u003Cspan style=\"border: none windowtext 1.0pt; color: #7a7575; font-family: \u0026quot;Arial\u0026quot;,\u0026quot;sans-serif\u0026quot;; font-size: 13.5pt; mso-border-alt: none windowtext 0in; padding: 0in;\"\u003EFeel free to ask me any question by commenting below because I'd be happy to walk you through step by step!\u003Cspan class=\"apple-converted-space\"\u003E\u0026nbsp;\u003C\/span\u003E\u003C\/span\u003E\u003Cspan style=\"color: #7a7575; font-family: \u0026quot;Arial\u0026quot;,\u0026quot;sans-serif\u0026quot;; font-size: 10.0pt;\"\u003E\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"background: white; line-height: 14.25pt;\"\u003E\u003Cspan style=\"border: none windowtext 1.0pt; color: #7a7575; font-family: \u0026quot;Arial\u0026quot;,\u0026quot;sans-serif\u0026quot;; font-size: 13.5pt; mso-border-alt: none windowtext 0in; padding: 0in;\"\u003EWant to Contact us?\u003Cspan class=\"apple-converted-space\"\u003E\u0026nbsp;\u003C\/span\u003E\u003C\/span\u003E\u003Ca href=\"http:\/\/cuda-programming.blogspot.in\/p\/contact-us.html\"\u003E\u003Cspan style=\"border: none windowtext 1.0pt; color: #00b7f3; font-family: \u0026quot;Arial\u0026quot;,\u0026quot;sans-serif\u0026quot;; font-size: 13.5pt; mso-border-alt: none windowtext 0in; padding: 0in;\"\u003EClick here\u003C\/span\u003E\u003C\/a\u003E\u003Cspan style=\"color: #7a7575; font-family: \u0026quot;Arial\u0026quot;,\u0026quot;sans-serif\u0026quot;; font-size: 10.0pt;\"\u003E\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003C\/div\u003E"},"link":[{"rel":"replies","type":"application/atom+xml","href":"http:\/\/cuda-programming.blogspot.com\/feeds\/4982689720571325385\/comments\/default","title":"Post Comments"},{"rel":"replies","type":"text/html","href":"http:\/\/cuda-programming.blogspot.com\/2013\/03\/optimization-in-histogram-cuda-code.html#comment-form","title":"9 Comments"},{"rel":"edit","type":"application/atom+xml","href":"http:\/\/www.blogger.com\/feeds\/4433261812355873863\/posts\/default\/4982689720571325385"},{"rel":"self","type":"application/atom+xml","href":"http:\/\/www.blogger.com\/feeds\/4433261812355873863\/posts\/default\/4982689720571325385"},{"rel":"alternate","type":"text/html","href":"http:\/\/cuda-programming.blogspot.com\/2013\/03\/optimization-in-histogram-cuda-code.html","title":"Optimization in  histogram CUDA code: When number of Bins not equal to max threads in a block"}],"author":[{"name":{"$t":"Nitin Gupta"},"uri":{"$t":"https:\/\/plus.google.com\/111983044603362831032"},"email":{"$t":"noreply@blogger.com"},"gd$image":{"rel":"http://schemas.google.com/g/2005#thumbnail","width":"32","height":"32","src":"\/\/lh5.googleusercontent.com\/-y8J34_QMdZA\/AAAAAAAAAAI\/AAAAAAAAACk\/yRljcINNhbw\/s512-c\/photo.jpg"}}],"thr$total":{"$t":"9"}},{"id":{"$t":"tag:blogger.com,1999:blog-4433261812355873863.post-1672655400869719684"},"published":{"$t":"2013-03-08T07:49:00.003-08:00"},"updated":{"$t":"2013-03-08T08:06:56.552-08:00"},"category":[{"scheme":"http://www.blogger.com/atom/ns#","term":"CUDA Advance"},{"scheme":"http://www.blogger.com/atom/ns#","term":"CUDA Programming Concept"},{"scheme":"http://www.blogger.com/atom/ns#","term":"CUDA programs Level 1.2"},{"scheme":"http://www.blogger.com/atom/ns#","term":"Optimization in CUDA"}],"title":{"type":"text","$t":" Optimizing histogram CUDA code | Optimization in histogram in CUDA  "},"content":{"type":"html","$t":"\u003Cdiv dir=\"ltr\" style=\"text-align: left;\" trbidi=\"on\"\u003E\u003Cbr \/\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"font-size: 12.0pt; mso-bidi-font-family: Calibri; mso-bidi-theme-font: minor-latin;\"\u003EContinuing from \u003C\/span\u003E\u003Cb\u003E\u003Ci\u003E\u003Cspan style=\"color: #00b050; font-size: 16.0pt; mso-bidi-font-family: Calibri; mso-bidi-theme-font: minor-latin;\"\u003E\u003Ca href=\"http:\/\/cuda-programming.blogspot.in\/2013\/03\/computing-histogram-on-cuda-cuda-code_8.html\"\u003EPart1\u003C\/a\u003E\u003C\/span\u003E\u003C\/i\u003E\u003C\/b\u003E\u003Cb\u003E\u003Ci\u003E\u003Cspan style=\"color: #00b050; font-size: 16.0pt; mso-bidi-font-family: Calibri; mso-bidi-theme-font: minor-latin;\"\u003E\u0026nbsp;\u003C\/span\u003E\u003C\/i\u003E\u003C\/b\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cb\u003E\u003Ci\u003E\u003Cspan style=\"color: #00b050; font-size: 16.0pt; mso-bidi-font-family: Calibri; mso-bidi-theme-font: minor-latin;\"\u003E\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; \u003Cu\u003E\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; Part2\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/u\u003E\u003C\/span\u003E\u003C\/i\u003E\u003C\/b\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv align=\"center\" class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt; text-align: center;\"\u003E\u003Cb\u003E\u003Ci\u003E\u003Cu\u003E\u003Cspan style=\"color: #00b050; font-size: 16.0pt; mso-bidi-font-family: Calibri; mso-bidi-theme-font: minor-latin;\"\u003EOptimizing histogram CUDA code | Optimization in histogram in CUDA\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/u\u003E\u003C\/i\u003E\u003C\/b\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cdiv class=\"separator\" style=\"clear: both; text-align: center;\"\u003E\u003C\/div\u003E\u003Cdiv class=\"separator\" style=\"clear: both; text-align: center;\"\u003E\u003Ca href=\"http:\/\/2.bp.blogspot.com\/-K2-3ak_KfOo\/UToKYZZtfrI\/AAAAAAAAAFg\/mucge7bISIA\/s1600\/Histogram_TH_article_size_20060127.png\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"\u003E\u003Cimg border=\"0\" src=\"http:\/\/2.bp.blogspot.com\/-K2-3ak_KfOo\/UToKYZZtfrI\/AAAAAAAAAFg\/mucge7bISIA\/s1600\/Histogram_TH_article_size_20060127.png\" height=\"254\" width=\"320\" \/\u003E\u003C\/a\u003E\u003C\/div\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"font-size: 12.0pt; mso-bidi-font-family: Calibri; mso-bidi-theme-font: minor-latin;\"\u003EWe would like to adapt the histogram computation example to run on the GPU. If our input array is large enough, it might save a considerable amount of time to have different threads examining different parts of the buffer. Having different threads read different parts of the input should be easy enough. After all, it’s very similar to things we have seen in many previous posts. The problem with computing a histogram from the input data arises from the fact that multiple threads may want to increment the same bin of the output histogram at the same time. In this situation, we will need to use atomic increments to avoid this situation.\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"font-size: 12.0pt; mso-bidi-font-family: Calibri; mso-bidi-theme-font: minor-latin;\"\u003EI’ll assume you know about \u003Cb\u003E\u003Cspan style=\"color: red;\"\u003EatomicAdd ()\u003C\/span\u003E\u003C\/b\u003E function, so I’ll not describe this in this post. \u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"font-size: 12.0pt; mso-bidi-font-family: Calibri; mso-bidi-theme-font: minor-latin;\"\u003EOur main() routine looks very similar to the CPU version, although we will need to add some of the CUDA C plumbing in order to get input to the GPU and results from the GPU. However, we start exactly as we did on the CPU:\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Ctable border=\"1\" cellpadding=\"0\" cellspacing=\"0\" class=\"MsoTableGrid\" style=\"border-collapse: collapse; border: none; mso-border-alt: solid windowtext .5pt; mso-padding-alt: 0in 5.4pt 0in 5.4pt; mso-yfti-tbllook: 1184;\"\u003E \u003Ctbody\u003E\u003Ctr\u003E  \u003Ctd style=\"background: #92D050; border: solid windowtext 1.0pt; mso-border-alt: solid windowtext .5pt; padding: 0in 5.4pt 0in 5.4pt; width: 6.65in;\" valign=\"top\" width=\"638\"\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"color: blue; font-family: \u0026quot;Courier New\u0026quot;; font-size: 10.0pt; mso-no-proof: yes;\"\u003E#define\u003C\/span\u003E\u003Cspan style=\"font-family: \u0026quot;Courier New\u0026quot;; font-size: 10.0pt; mso-no-proof: yes;\"\u003E SIZE \u003Cspan style=\"color: green;\"\u003E(\u003C\/span\u003E100\u003Cspan style=\"color: green;\"\u003E*\u003C\/span\u003E1024\u003Cspan style=\"color: green;\"\u003E*\u003C\/span\u003E1024\u003Cspan style=\"color: green;\"\u003E) \/\/ 100 MB\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"color: blue; font-family: \u0026quot;Courier New\u0026quot;; font-size: 10.0pt; mso-no-proof: yes;\"\u003Eint\u003C\/span\u003E\u003Cspan style=\"font-family: \u0026quot;Courier New\u0026quot;; font-size: 10.0pt; mso-no-proof: yes;\"\u003E main\u003Cspan style=\"color: green;\"\u003E(\u003C\/span\u003E \u003Cspan style=\"color: blue;\"\u003Evoid\u003C\/span\u003E \u003Cspan style=\"color: green;\"\u003E)\u003C\/span\u003E \u003Cspan style=\"color: green;\"\u003E{\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"color: blue; font-family: \u0026quot;Courier New\u0026quot;; font-size: 10.0pt; mso-no-proof: yes;\"\u003Eunsigned\u003C\/span\u003E\u003Cspan style=\"font-family: \u0026quot;Courier New\u0026quot;; font-size: 10.0pt; mso-no-proof: yes;\"\u003E \u003Cspan style=\"color: blue;\"\u003Echar\u003C\/span\u003E \u003Cspan style=\"color: green;\"\u003E*\u003C\/span\u003Ebuffer \u003Cspan style=\"color: green;\"\u003E=\u003C\/span\u003E \u003Cspan style=\"color: green;\"\u003E(\u003C\/span\u003E\u003Cspan style=\"color: blue;\"\u003Eunsigned\u003C\/span\u003E \u003Cspan style=\"color: blue;\"\u003Echar\u003C\/span\u003E\u003Cspan style=\"color: green;\"\u003E*)\u003C\/span\u003Ebig_random_block\u003Cspan style=\"color: green;\"\u003E(\u003C\/span\u003E SIZE \u003Cspan style=\"color: green;\"\u003E);\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003C\/td\u003E \u003C\/tr\u003E\u003C\/tbody\u003E\u003C\/table\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"font-size: 12.0pt; mso-bidi-font-family: Calibri; mso-bidi-theme-font: minor-latin;\"\u003EWe will be interested in measuring how our code performs, so we initialize events for timing exactly like we always have.\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Ctable border=\"1\" cellpadding=\"0\" cellspacing=\"0\" class=\"MsoTableGrid\" style=\"border-collapse: collapse; border: none; mso-border-alt: solid windowtext .5pt; mso-padding-alt: 0in 5.4pt 0in 5.4pt; mso-yfti-tbllook: 1184;\"\u003E \u003Ctbody\u003E\u003Ctr\u003E  \u003Ctd style=\"background: #92D050; border: solid windowtext 1.0pt; mso-border-alt: solid windowtext .5pt; padding: 0in 5.4pt 0in 5.4pt; width: 6.65in;\" valign=\"top\" width=\"638\"\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"font-family: \u0026quot;Courier New\u0026quot;; font-size: 10.0pt; mso-no-proof: yes;\"\u003EcudaEvent_t   start\u003Cspan style=\"color: green;\"\u003E,\u003C\/span\u003E stop\u003Cspan style=\"color: green;\"\u003E;\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"font-family: \u0026quot;Courier New\u0026quot;; font-size: 10.0pt; mso-no-proof: yes;\"\u003EcheckCudaErrors\u003Cspan style=\"color: green;\"\u003E(\u003C\/span\u003E cudaEventCreate\u003Cspan style=\"color: green;\"\u003E(\u003C\/span\u003E  \u003Cspan style=\"color: green;\"\u003E\u0026amp;\u003C\/span\u003Estart \u003Cspan style=\"color: green;\"\u003E)\u003C\/span\u003E  \u003Cspan style=\"color: green;\"\u003E);\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"font-family: \u0026quot;Courier New\u0026quot;; font-size: 10.0pt; mso-no-proof: yes;\"\u003EcheckCudaErrors\u003Cspan style=\"color: green;\"\u003E (\u003C\/span\u003E cudaEventCreate\u003Cspan style=\"color: green;\"\u003E(\u003C\/span\u003E  \u003Cspan style=\"color: green;\"\u003E\u0026amp;\u003C\/span\u003Estop \u003Cspan style=\"color: green;\"\u003E)\u003C\/span\u003E  \u003Cspan style=\"color: green;\"\u003E);\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"font-family: \u0026quot;Courier New\u0026quot;; font-size: 10.0pt; mso-no-proof: yes;\"\u003EcheckCudaErrors\u003Cspan style=\"color: green;\"\u003E (\u003C\/span\u003E cudaEventRecord\u003Cspan style=\"color: green;\"\u003E(\u003C\/span\u003E  start\u003Cspan style=\"color: green;\"\u003E,\u003C\/span\u003E 0 \u003Cspan style=\"color: green;\"\u003E)\u003C\/span\u003E \u003Cspan style=\"color: green;\"\u003E);\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003C\/td\u003E \u003C\/tr\u003E\u003C\/tbody\u003E\u003C\/table\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"font-size: 12.0pt; mso-bidi-font-family: Calibri; mso-bidi-theme-font: minor-latin;\"\u003EAfter setting up our input data and events, we look to GPU memory. We will need to allocate space for our random input data and our output histogram. After allocating the input buffer, we copy the array we generated with \u003Cb\u003Ebig_random_block()\u003C\/b\u003E to the GPU. Likewise, after allocating the histogram, we initialize it to zero just like we did in the CPU version.\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Ctable border=\"1\" cellpadding=\"0\" cellspacing=\"0\" class=\"MsoTableGrid\" style=\"border-collapse: collapse; border: none; mso-border-alt: solid windowtext .5pt; mso-padding-alt: 0in 5.4pt 0in 5.4pt; mso-yfti-tbllook: 1184;\"\u003E \u003Ctbody\u003E\u003Ctr\u003E  \u003Ctd style=\"background: #92D050; border: solid windowtext 1.0pt; mso-border-alt: solid windowtext .5pt; padding: 0in 5.4pt 0in 5.4pt; width: 6.65in;\" valign=\"top\" width=\"638\"\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"color: green; font-family: \u0026quot;Courier New\u0026quot;; font-size: 10.0pt; mso-no-proof: yes;\"\u003E\/\/ allocate memory on the GPU for the file's data\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"color: blue; font-family: \u0026quot;Courier New\u0026quot;; font-size: 10.0pt; mso-no-proof: yes;\"\u003Eunsigned\u003C\/span\u003E\u003Cspan style=\"font-family: \u0026quot;Courier New\u0026quot;; font-size: 10.0pt; mso-no-proof: yes;\"\u003E \u003Cspan style=\"color: blue;\"\u003Echar\u003C\/span\u003E \u003Cspan style=\"color: green;\"\u003E*\u003C\/span\u003Edev_buffer\u003Cspan style=\"color: green;\"\u003E;\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"color: blue; font-family: \u0026quot;Courier New\u0026quot;; font-size: 10.0pt; mso-no-proof: yes;\"\u003Eunsigned\u003C\/span\u003E\u003Cspan style=\"font-family: \u0026quot;Courier New\u0026quot;; font-size: 10.0pt; mso-no-proof: yes;\"\u003E \u003Cspan style=\"color: blue;\"\u003Eint\u003C\/span\u003E \u003Cspan style=\"color: green;\"\u003E*\u003C\/span\u003Edev_histo\u003Cspan style=\"color: green;\"\u003E;\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"font-family: \u0026quot;Courier New\u0026quot;; font-size: 10.0pt; mso-no-proof: yes;\"\u003EcheckCudaErrors\u003Cspan style=\"color: green;\"\u003E(\u003C\/span\u003E cudaMalloc\u003Cspan style=\"color: green;\"\u003E(\u003C\/span\u003E \u003Cspan style=\"color: green;\"\u003E(\u003C\/span\u003E\u003Cspan style=\"color: blue;\"\u003Evoid\u003C\/span\u003E\u003Cspan style=\"color: green;\"\u003E**)\u0026amp;\u003C\/span\u003Edev_buffer\u003Cspan style=\"color: green;\"\u003E,\u003C\/span\u003E  SIZE \u003Cspan style=\"color: green;\"\u003E)\u003C\/span\u003E \u003Cspan style=\"color: green;\"\u003E);\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"font-family: \u0026quot;Courier New\u0026quot;; font-size: 10.0pt; mso-no-proof: yes;\"\u003EcheckCudaErrors\u003Cspan style=\"color: green;\"\u003E(\u003C\/span\u003E cudaMemcpy\u003Cspan style=\"color: green;\"\u003E(\u003C\/span\u003E  dev_buffer\u003Cspan style=\"color: green;\"\u003E,\u003C\/span\u003E buffer\u003Cspan style=\"color: green;\"\u003E,\u003C\/span\u003E  SIZE\u003Cspan style=\"color: green;\"\u003E,\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"font-family: \u0026quot;Courier New\u0026quot;; font-size: 10.0pt; mso-no-proof: yes;\"\u003EcudaMemcpyHostToDevice   \u003Cspan style=\"color: green;\"\u003E)\u003C\/span\u003E \u003Cspan style=\"color: green;\"\u003E);\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"font-family: \u0026quot;Courier New\u0026quot;; font-size: 10.0pt; mso-no-proof: yes;\"\u003EcheckCudaErrors\u003Cspan style=\"color: green;\"\u003E(\u003C\/span\u003E cudaMalloc\u003Cspan style=\"color: green;\"\u003E(\u003C\/span\u003E \u003Cspan style=\"color: green;\"\u003E(\u003C\/span\u003E\u003Cspan style=\"color: blue;\"\u003Evoid\u003C\/span\u003E\u003Cspan style=\"color: green;\"\u003E**)\u0026amp;\u003C\/span\u003Edev_histo\u003Cspan style=\"color: green;\"\u003E,\u003C\/span\u003E256   \u003Cspan style=\"color: green;\"\u003E*\u003C\/span\u003E \u003Cspan style=\"color: blue;\"\u003Esizeof\u003C\/span\u003E\u003Cspan style=\"color: green;\"\u003E(\u003C\/span\u003E \u003Cspan style=\"color: blue;\"\u003Elong\u003C\/span\u003E \u003Cspan style=\"color: green;\"\u003E)\u003C\/span\u003E \u003Cspan style=\"color: green;\"\u003E)\u003C\/span\u003E \u003Cspan style=\"color: green;\"\u003E);\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"font-family: \u0026quot;Courier New\u0026quot;; font-size: 10.0pt; mso-no-proof: yes;\"\u003EcheckCudaErrors\u003Cspan style=\"color: green;\"\u003E(\u003C\/span\u003E cudaMemset\u003Cspan style=\"color: green;\"\u003E(\u003C\/span\u003E  dev_histo\u003Cspan style=\"color: green;\"\u003E,\u003C\/span\u003E 0\u003Cspan style=\"color: green;\"\u003E,\u003C\/span\u003E256   \u003Cspan style=\"color: green;\"\u003E*\u003C\/span\u003E \u003Cspan style=\"color: blue;\"\u003Esizeof\u003C\/span\u003E\u003Cspan style=\"color: green;\"\u003E(\u003C\/span\u003E \u003Cspan style=\"color: blue;\"\u003Eint\u003C\/span\u003E \u003Cspan style=\"color: green;\"\u003E)\u003C\/span\u003E \u003Cspan style=\"color: green;\"\u003E)\u003C\/span\u003E \u003Cspan style=\"color: green;\"\u003E);\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003C\/td\u003E \u003C\/tr\u003E\u003C\/tbody\u003E\u003C\/table\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"font-size: 12.0pt; mso-bidi-font-family: Calibri; mso-bidi-theme-font: minor-latin;\"\u003EYou may notice that we slipped in a new CUDA runtime function, \u003C\/span\u003E\u003Ca href=\"http:\/\/www.clear.rice.edu\/comp422\/resources\/cuda\/html\/group__CUDART__MEMORY_ge07c97b96efd09abaeb3ca3b5f8da4ee.html\"\u003E\u003Cspan style=\"font-size: 12.0pt; mso-bidi-font-family: Calibri; mso-bidi-theme-font: minor-latin;\"\u003EcudaMemset().\u003C\/span\u003E\u003C\/a\u003E\u003Cspan style=\"font-size: 12.0pt; mso-bidi-font-family: Calibri; mso-bidi-theme-font: minor-latin;\"\u003EThis function has a similar signature to the standard C function \u003C\/span\u003E\u003Ca href=\"http:\/\/www.cplusplus.com\/reference\/cstring\/memset\/\"\u003E\u003Cspan style=\"font-size: 12.0pt; mso-bidi-font-family: Calibri; mso-bidi-theme-font: minor-latin;\"\u003Ememset(),\u003C\/span\u003E\u003C\/a\u003E\u003Cspan style=\"font-size: 12.0pt; mso-bidi-font-family: Calibri; mso-bidi-theme-font: minor-latin;\"\u003Eand the two functions behave nearly identically. The difference in signature is between these functions is that \u003C\/span\u003E\u003Ca href=\"http:\/\/www.clear.rice.edu\/comp422\/resources\/cuda\/html\/group__CUDART__MEMORY_ge07c97b96efd09abaeb3ca3b5f8da4ee.html\"\u003E\u003Cspan style=\"font-size: 12.0pt; mso-bidi-font-family: Calibri; mso-bidi-theme-font: minor-latin;\"\u003EcudaMemset()\u003C\/span\u003E\u003C\/a\u003E\u003Cspan style=\"font-size: 12.0pt; mso-bidi-font-family: Calibri; mso-bidi-theme-font: minor-latin;\"\u003Ereturns an error code while the C library function \u003C\/span\u003E\u003Ca href=\"http:\/\/www.cplusplus.com\/reference\/cstring\/memset\/\"\u003E\u003Cspan style=\"font-size: 12.0pt; mso-bidi-font-family: Calibri; mso-bidi-theme-font: minor-latin;\"\u003Ememset()\u003C\/span\u003E\u003C\/a\u003E\u003Cspan style=\"font-size: 12.0pt; mso-bidi-font-family: Calibri; mso-bidi-theme-font: minor-latin;\"\u003Edoes not. This error code will inform the caller whether anything bad happened while attempting to set GPU memory. Aside from the error code return, the only difference is that \u003C\/span\u003E\u003Ca href=\"http:\/\/www.clear.rice.edu\/comp422\/resources\/cuda\/html\/group__CUDART__MEMORY_ge07c97b96efd09abaeb3ca3b5f8da4ee.html\"\u003E\u003Cspan style=\"font-size: 12.0pt; mso-bidi-font-family: Calibri; mso-bidi-theme-font: minor-latin;\"\u003EcudaMemset()\u003C\/span\u003E\u003C\/a\u003E\u003Cspan style=\"font-size: 12.0pt; mso-bidi-font-family: Calibri; mso-bidi-theme-font: minor-latin;\"\u003Eoperates on GPU\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"font-size: 12.0pt; mso-bidi-font-family: Calibri; mso-bidi-theme-font: minor-latin;\"\u003Ememory while \u003C\/span\u003E\u003Ca href=\"http:\/\/www.cplusplus.com\/reference\/cstring\/memset\/\"\u003E\u003Cspan style=\"font-size: 12.0pt; mso-bidi-font-family: Calibri; mso-bidi-theme-font: minor-latin;\"\u003Ememset()\u003C\/span\u003E\u003C\/a\u003E\u003Cspan style=\"font-size: 12.0pt; mso-bidi-font-family: Calibri; mso-bidi-theme-font: minor-latin;\"\u003Eoperates on host memory.\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"font-size: 12.0pt; mso-bidi-font-family: Calibri; mso-bidi-theme-font: minor-latin;\"\u003EAfter initializing the input and output buffers, we are ready to compute our histogram. You will see how we prepare and launch the histogram kernel momentarily. For the time being, assume that we have computed the histogram on the GPU. After finishing, we need to copy the histogram back to the CPU, so we allocate a 256-entry array and perform a copy from device to host. \u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Ctable border=\"1\" cellpadding=\"0\" cellspacing=\"0\" class=\"MsoTableGrid\" style=\"border-collapse: collapse; border: none; mso-border-alt: solid windowtext .5pt; mso-padding-alt: 0in 5.4pt 0in 5.4pt; mso-yfti-tbllook: 1184;\"\u003E \u003Ctbody\u003E\u003Ctr\u003E  \u003Ctd style=\"background: #92D050; border: solid windowtext 1.0pt; mso-border-alt: solid windowtext .5pt; padding: 0in 5.4pt 0in 5.4pt; width: 6.65in;\" valign=\"top\" width=\"638\"\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"color: blue; font-family: \u0026quot;Courier New\u0026quot;; font-size: 10.0pt; mso-no-proof: yes;\"\u003Eunsigned\u003C\/span\u003E\u003Cspan style=\"font-family: \u0026quot;Courier New\u0026quot;; font-size: 10.0pt; mso-no-proof: yes;\"\u003E \u003Cspan style=\"color: blue;\"\u003Eint\u003C\/span\u003E histo\u003Cspan style=\"color: green;\"\u003E[\u003C\/span\u003E256\u003Cspan style=\"color: green;\"\u003E];\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"font-family: \u0026quot;Courier New\u0026quot;; font-size: 10.0pt; mso-no-proof: yes;\"\u003EcheckCudaErrors   \u003Cspan style=\"color: green;\"\u003E(\u003C\/span\u003E cudaMemcpy\u003Cspan style=\"color: green;\"\u003E(\u003C\/span\u003E  histo\u003Cspan style=\"color: green;\"\u003E,\u003C\/span\u003E dev_histo\u003Cspan style=\"color: green;\"\u003E,\u003C\/span\u003E256   \u003Cspan style=\"color: green;\"\u003E*\u003C\/span\u003E \u003Cspan style=\"color: blue;\"\u003Esizeof\u003C\/span\u003E\u003Cspan style=\"color: green;\"\u003E(\u003C\/span\u003E \u003Cspan style=\"color: blue;\"\u003Eint\u003C\/span\u003E \u003Cspan style=\"color: green;\"\u003E),\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"font-family: \u0026quot;Courier New\u0026quot;; font-size: 10.0pt; mso-no-proof: yes;\"\u003EcudaMemcpyDeviceToHost   \u003Cspan style=\"color: green;\"\u003E)\u003C\/span\u003E \u003Cspan style=\"color: green;\"\u003E);\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003C\/td\u003E \u003C\/tr\u003E\u003C\/tbody\u003E\u003C\/table\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"font-size: 12.0pt; mso-bidi-font-family: Calibri; mso-bidi-theme-font: minor-latin;\"\u003EAt this point, we are done with the histogram computation so we can stop our timers and display the elapsed time. Just like the previous event code, this is identical to the timing code we’ve used for several previous articles.\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Ctable border=\"1\" cellpadding=\"0\" cellspacing=\"0\" class=\"MsoTableGrid\" style=\"border-collapse: collapse; border: none; mso-border-alt: solid windowtext .5pt; mso-padding-alt: 0in 5.4pt 0in 5.4pt; mso-yfti-tbllook: 1184;\"\u003E \u003Ctbody\u003E\u003Ctr\u003E  \u003Ctd style=\"background: #92D050; border: solid windowtext 1.0pt; mso-border-alt: solid windowtext .5pt; padding: 0in 5.4pt 0in 5.4pt; width: 6.65in;\" valign=\"top\" width=\"638\"\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"color: green; font-family: \u0026quot;Courier New\u0026quot;; font-size: 10.0pt; mso-no-proof: yes;\"\u003E\/\/ get stop time, and display the timing results\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"font-family: \u0026quot;Courier New\u0026quot;; font-size: 10.0pt; mso-no-proof: yes;\"\u003EcheckCudaErrors   \u003Cspan style=\"color: green;\"\u003E(\u003C\/span\u003E cudaEventRecord\u003Cspan style=\"color: green;\"\u003E(\u003C\/span\u003E  stop\u003Cspan style=\"color: green;\"\u003E,\u003C\/span\u003E 0 \u003Cspan style=\"color: green;\"\u003E)\u003C\/span\u003E \u003Cspan style=\"color: green;\"\u003E);\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"font-family: \u0026quot;Courier New\u0026quot;; font-size: 10.0pt; mso-no-proof: yes;\"\u003EcheckCudaErrors   \u003Cspan style=\"color: green;\"\u003E(\u003C\/span\u003E cudaEventSynchronize\u003Cspan style=\"color: green;\"\u003E(\u003C\/span\u003E stop \u003Cspan style=\"color: green;\"\u003E)\u003C\/span\u003E \u003Cspan style=\"color: green;\"\u003E);\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"color: blue; font-family: \u0026quot;Courier New\u0026quot;; font-size: 10.0pt; mso-no-proof: yes;\"\u003Efloat\u003C\/span\u003E\u003Cspan style=\"font-family: \u0026quot;Courier New\u0026quot;; font-size: 10.0pt; mso-no-proof: yes;\"\u003E elapsedTime\u003Cspan style=\"color: green;\"\u003E;\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"font-family: \u0026quot;Courier New\u0026quot;; font-size: 10.0pt; mso-no-proof: yes;\"\u003EcheckCudaErrors   \u003Cspan style=\"color: green;\"\u003E(\u003C\/span\u003E cudaEventElapsedTime\u003Cspan style=\"color: green;\"\u003E(\u003C\/span\u003E \u003Cspan style=\"color: green;\"\u003E\u0026amp;\u003C\/span\u003EelapsedTime\u003Cspan style=\"color: green;\"\u003E,\u003C\/span\u003Estart\u003Cspan style=\"color: green;\"\u003E,\u003C\/span\u003E stop \u003Cspan style=\"color: green;\"\u003E)\u003C\/span\u003E \u003Cspan style=\"color: green;\"\u003E);\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"font-family: \u0026quot;Courier New\u0026quot;; font-size: 10.0pt; mso-no-proof: yes;\"\u003Eprintf\u003Cspan style=\"color: green;\"\u003E(\u003C\/span\u003E \u003Cspan style=\"color: #a31515;\"\u003E\"Time to   generate: %3.1f ms\\n\"\u003C\/span\u003E\u003Cspan style=\"color: green;\"\u003E,\u003C\/span\u003E  elapsedTime \u003Cspan style=\"color: green;\"\u003E);\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003C\/td\u003E \u003C\/tr\u003E\u003C\/tbody\u003E\u003C\/table\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"font-size: 12.0pt; mso-bidi-font-family: Calibri; mso-bidi-theme-font: minor-latin;\"\u003EAt this point, we could pass the histogram as input to another stage in the algorithm, but since we are not using the histogram for anything else, we will simply verify that the computed GPU histogram matches what we get on the CPU. First, we verify that the histogram sum matches what we expect. This is identical to the CPU code shown here:\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Ctable border=\"1\" cellpadding=\"0\" cellspacing=\"0\" class=\"MsoTableGrid\" style=\"border-collapse: collapse; border: none; mso-border-alt: solid windowtext .5pt; mso-padding-alt: 0in 5.4pt 0in 5.4pt; mso-yfti-tbllook: 1184;\"\u003E \u003Ctbody\u003E\u003Ctr\u003E  \u003Ctd style=\"background: #92D050; border: solid windowtext 1.0pt; mso-border-alt: solid windowtext .5pt; padding: 0in 5.4pt 0in 5.4pt; width: 6.65in;\" valign=\"top\" width=\"638\"\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"color: blue; font-family: \u0026quot;Courier New\u0026quot;; font-size: 10.0pt; mso-no-proof: yes;\"\u003Elong\u003C\/span\u003E\u003Cspan style=\"font-family: \u0026quot;Courier New\u0026quot;; font-size: 10.0pt; mso-no-proof: yes;\"\u003E histoCount \u003Cspan style=\"color: green;\"\u003E=\u003C\/span\u003E 0\u003Cspan style=\"color: green;\"\u003E;\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"color: blue; font-family: \u0026quot;Courier New\u0026quot;; font-size: 10.0pt; mso-no-proof: yes;\"\u003Efor\u003C\/span\u003E\u003Cspan style=\"font-family: \u0026quot;Courier New\u0026quot;; font-size: 10.0pt; mso-no-proof: yes;\"\u003E \u003Cspan style=\"color: green;\"\u003E(\u003C\/span\u003E\u003Cspan style=\"color: blue;\"\u003Eint\u003C\/span\u003E  i\u003Cspan style=\"color: green;\"\u003E=\u003C\/span\u003E0\u003Cspan style=\"color: green;\"\u003E;\u003C\/span\u003E i\u003Cspan style=\"color: green;\"\u003E\u0026lt;\u003C\/span\u003E256\u003Cspan style=\"color: green;\"\u003E;\u003C\/span\u003E i\u003Cspan style=\"color: green;\"\u003E++)\u003C\/span\u003E \u003Cspan style=\"color: green;\"\u003E{\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"font-family: \u0026quot;Courier New\u0026quot;; font-size: 10.0pt; mso-no-proof: yes;\"\u003E\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; histoCount \u003Cspan style=\"color: green;\"\u003E+=\u003C\/span\u003E  histo\u003Cspan style=\"color: green;\"\u003E[\u003C\/span\u003Ei\u003Cspan style=\"color: green;\"\u003E];\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"color: green; font-family: \u0026quot;Courier New\u0026quot;; font-size: 10.0pt; mso-no-proof: yes;\"\u003E}\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"font-family: \u0026quot;Courier New\u0026quot;; font-size: 10.0pt; mso-no-proof: yes;\"\u003Eprintf\u003Cspan style=\"color: green;\"\u003E(\u003C\/span\u003E \u003Cspan style=\"color: #a31515;\"\u003E\"Histogram Sum:   %ld\\n\"\u003C\/span\u003E\u003Cspan style=\"color: green;\"\u003E,\u003C\/span\u003E histoCount \u003Cspan style=\"color: green;\"\u003E);\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003C\/td\u003E \u003C\/tr\u003E\u003C\/tbody\u003E\u003C\/table\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"font-family: DINPro-Regular; font-size: 10.0pt; mso-bidi-font-family: DINPro-Regular;\"\u003ETo fully verify the GPU histogram, though, we will use the CPU to compute the\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"font-size: 12.0pt; mso-bidi-font-family: Calibri; mso-bidi-theme-font: minor-latin;\"\u003ETo fully verify the GPU histogram, though, we will use the CPU to compute the same histogram. The obvious way to do this would be to allocate a new histogram array, compute a histogram from the input using the code from Part1 : CPU Histogram Computation, and, finally, ensure that each bin in the GPU and CPU version match. But rather than allocate a new histogram array, we’ll opt to start with the GPU histogram and compute the CPU histogram “in reverse.” By computing the histogram “in reverse,” we mean that rather than starting at zero and incrementing bin values when we see data elements, we will start with the GPU histogram and \u003Ci\u003Edecrement \u003C\/i\u003Ethe bin’s value when the CPU sees data elements. Therefore, the CPU has computed the same histogram as the GPU if and only if every bin has the value zero when we are finished. In some sense, we are computing the difference between these two histograms. The code will look remarkably like the CPU histogram computation but with a decrement operator instead of an increment operator.\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Ctable border=\"1\" cellpadding=\"0\" cellspacing=\"0\" class=\"MsoTableGrid\" style=\"border-collapse: collapse; border: none; mso-border-alt: solid windowtext .5pt; mso-padding-alt: 0in 5.4pt 0in 5.4pt; mso-yfti-tbllook: 1184;\"\u003E \u003Ctbody\u003E\u003Ctr\u003E  \u003Ctd style=\"background: #92D050; border: solid windowtext 1.0pt; mso-border-alt: solid windowtext .5pt; padding: 0in 5.4pt 0in 5.4pt; width: 6.65in;\" valign=\"top\" width=\"638\"\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"color: blue; font-family: \u0026quot;Courier New\u0026quot;; font-size: 10.0pt; mso-no-proof: yes;\"\u003Elong\u003C\/span\u003E\u003Cspan style=\"font-family: \u0026quot;Courier New\u0026quot;; font-size: 10.0pt; mso-no-proof: yes;\"\u003E histoCount \u003Cspan style=\"color: green;\"\u003E=\u003C\/span\u003E 0\u003Cspan style=\"color: green;\"\u003E;\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"color: blue; font-family: \u0026quot;Courier New\u0026quot;; font-size: 10.0pt; mso-no-proof: yes;\"\u003Efor\u003C\/span\u003E\u003Cspan style=\"font-family: \u0026quot;Courier New\u0026quot;; font-size: 10.0pt; mso-no-proof: yes;\"\u003E \u003Cspan style=\"color: green;\"\u003E(\u003C\/span\u003E\u003Cspan style=\"color: blue;\"\u003Eint\u003C\/span\u003E  i\u003Cspan style=\"color: green;\"\u003E=\u003C\/span\u003E0\u003Cspan style=\"color: green;\"\u003E;\u003C\/span\u003E i\u003Cspan style=\"color: green;\"\u003E\u0026lt;\u003C\/span\u003E256\u003Cspan style=\"color: green;\"\u003E;\u003C\/span\u003E i\u003Cspan style=\"color: green;\"\u003E++)\u003C\/span\u003E \u003Cspan style=\"color: green;\"\u003E{\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"font-family: \u0026quot;Courier New\u0026quot;; font-size: 10.0pt; mso-no-proof: yes;\"\u003E\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; histoCount \u003Cspan style=\"color: green;\"\u003E+=\u003C\/span\u003E histo\u003Cspan style=\"color: green;\"\u003E[\u003C\/span\u003Ei\u003Cspan style=\"color: green;\"\u003E];\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"color: green; font-family: \u0026quot;Courier New\u0026quot;; font-size: 10.0pt; mso-no-proof: yes;\"\u003E}\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"font-family: \u0026quot;Courier New\u0026quot;; font-size: 10.0pt; mso-no-proof: yes;\"\u003Eprintf\u003Cspan style=\"color: green;\"\u003E(\u003C\/span\u003E \u003Cspan style=\"color: #a31515;\"\u003E\"Histogram Sum:   %ld\\n\"\u003C\/span\u003E\u003Cspan style=\"color: green;\"\u003E,\u003C\/span\u003E histoCount \u003Cspan style=\"color: green;\"\u003E);\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003C\/td\u003E \u003C\/tr\u003E\u003C\/tbody\u003E\u003C\/table\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"font-size: 12.0pt; mso-bidi-font-family: Calibri; mso-bidi-theme-font: minor-latin;\"\u003EAs usual, the finale involves cleaning up our allocated CUDA events, GPU memory, and host memory.\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Ctable border=\"1\" cellpadding=\"0\" cellspacing=\"0\" class=\"MsoTableGrid\" style=\"border-collapse: collapse; border: none; mso-border-alt: solid windowtext .5pt; mso-padding-alt: 0in 5.4pt 0in 5.4pt; mso-yfti-tbllook: 1184;\"\u003E \u003Ctbody\u003E\u003Ctr\u003E  \u003Ctd style=\"background: #92D050; border: solid windowtext 1.0pt; mso-border-alt: solid windowtext .5pt; padding: 0in 5.4pt 0in 5.4pt; width: 6.65in;\" valign=\"top\" width=\"638\"\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"font-family: \u0026quot;Courier New\u0026quot;; font-size: 10.0pt; mso-no-proof: yes;\"\u003EcheckCudaErrors   \u003Cspan style=\"color: green;\"\u003E(\u003C\/span\u003E cudaEventDestroy\u003Cspan style=\"color: green;\"\u003E(\u003C\/span\u003E  start \u003Cspan style=\"color: green;\"\u003E)\u003C\/span\u003E \u003Cspan style=\"color: green;\"\u003E);\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"font-family: \u0026quot;Courier New\u0026quot;; font-size: 10.0pt; mso-no-proof: yes;\"\u003EcheckCudaErrors   \u003Cspan style=\"color: green;\"\u003E(\u003C\/span\u003E cudaEventDestroy\u003Cspan style=\"color: green;\"\u003E(\u003C\/span\u003E  stop \u003Cspan style=\"color: green;\"\u003E)\u003C\/span\u003E \u003Cspan style=\"color: green;\"\u003E);\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"font-family: \u0026quot;Courier New\u0026quot;; font-size: 10.0pt; mso-no-proof: yes;\"\u003EcheckCudaErrors   \u003Cspan style=\"color: green;\"\u003E(\u003C\/span\u003E cudaFree\u003Cspan style=\"color: green;\"\u003E(\u003C\/span\u003E  dev_histo \u003Cspan style=\"color: green;\"\u003E)\u003C\/span\u003E \u003Cspan style=\"color: green;\"\u003E)\u003C\/span\u003E  \u003Cspan style=\"color: green;\"\u003E;\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"font-family: \u0026quot;Courier New\u0026quot;; font-size: 10.0pt; mso-no-proof: yes;\"\u003EcheckCudaErrors   \u003Cspan style=\"color: green;\"\u003E(\u003C\/span\u003E cudaFree\u003Cspan style=\"color: green;\"\u003E(\u003C\/span\u003E  dev_buffer \u003Cspan style=\"color: green;\"\u003E)\u003C\/span\u003E \u003Cspan style=\"color: green;\"\u003E)\u003C\/span\u003E  \u003Cspan style=\"color: green;\"\u003E;\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"font-family: \u0026quot;Courier New\u0026quot;; font-size: 10.0pt; mso-no-proof: yes;\"\u003Efree\u003Cspan style=\"color: green;\"\u003E(\u003C\/span\u003E buffer \u003Cspan style=\"color: green;\"\u003E);\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"color: blue; font-family: \u0026quot;Courier New\u0026quot;; font-size: 10.0pt; mso-no-proof: yes;\"\u003Ereturn\u003C\/span\u003E\u003Cspan style=\"font-family: \u0026quot;Courier New\u0026quot;; font-size: 10.0pt; mso-no-proof: yes;\"\u003E 0\u003Cspan style=\"color: green;\"\u003E;\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"color: green; font-family: \u0026quot;Courier New\u0026quot;; font-size: 10.0pt; mso-no-proof: yes;\"\u003E}\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003C\/td\u003E \u003C\/tr\u003E\u003C\/tbody\u003E\u003C\/table\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"font-size: 12.0pt; mso-bidi-font-family: Calibri; mso-bidi-theme-font: minor-latin;\"\u003ENow, be concentrate while reading further;\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"color: #0070c0; font-size: 12.0pt; mso-bidi-font-family: Calibri; mso-bidi-theme-font: minor-latin;\"\u003EBefore, we assumed that we had launched a kernel that computed our histogram and then pressed on to discuss the aftermath. Our kernel launch is slightly more complicated than usual because of performance concerns. Because the histogram contains 256 bins, using 256 threads per block proves convenient as well as results in high performance. But we have a lot of flexibility in terms of the number of blocks we launch. \u003Cb\u003EFor example, with 100MB of data, we have 104,857,600 bytes of data. We could launch a single block and have each thread examine 409,600 data elements. Likewise, we could launch 409,600 blocks and have each thread examine a single data element.\u003C\/b\u003E \u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"color: #0070c0; font-size: 12.0pt; mso-bidi-font-family: Calibri; mso-bidi-theme-font: minor-latin;\"\u003EAs you might have guessed, the optimal solution is at a point between these two extremes. By running some performance experiments, optimal performance is achieved when the number of blocks we launch is exactly twice the number of multiprocessors our GPU contains. For example, a GeForce GTX 280 has 30 multiprocessors, so our histogram kernel happens to run fastest on a GeForce GTX 280 when launched with 60 parallel blocks.\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"font-size: 12.0pt; mso-bidi-font-family: Calibri; mso-bidi-theme-font: minor-latin;\"\u003EIn \u003C\/span\u003E\u003Ca href=\"http:\/\/cuda-programming.blogspot.in\/2013\/01\/how-to-query-device-properties-and.html\"\u003E\u003Cb\u003E\u003Cspan lang=\"EN\" style=\"background: white; border: none windowtext 1.0pt; font-size: 12.0pt; mso-ansi-language: EN; mso-border-alt: none windowtext 0in; padding: 0in;\"\u003EQuerying Device Properties\u003C\/span\u003E\u003C\/b\u003E\u003C\/a\u003E\u003Cspan style=\"font-size: 12.0pt; mso-bidi-font-family: Calibri; mso-bidi-theme-font: minor-latin;\"\u003E, we discussed a method for querying various properties of the hardware on which our program is running. We will need to use one of these device properties if we intend to dynamically size our launch based on our current hardware platform. To accomplish this, we will use the following code segment. Although you haven’t yet seen the kernel implementation, you should still be able to follow what is going on.\u003Cspan style=\"color: #0070c0;\"\u003E \u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Ctable border=\"1\" cellpadding=\"0\" cellspacing=\"0\" class=\"MsoTableGrid\" style=\"border-collapse: collapse; border: none; mso-border-alt: solid windowtext .5pt; mso-padding-alt: 0in 5.4pt 0in 5.4pt; mso-yfti-tbllook: 1184;\"\u003E \u003Ctbody\u003E\u003Ctr\u003E  \u003Ctd style=\"background: #92D050; border: solid windowtext 1.0pt; mso-border-alt: solid windowtext .5pt; padding: 0in 5.4pt 0in 5.4pt; width: 6.65in;\" valign=\"top\" width=\"638\"\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"font-family: \u0026quot;Courier New\u0026quot;; font-size: 10.0pt; mso-no-proof: yes;\"\u003EcudaDeviceProp   prop\u003Cspan style=\"color: green;\"\u003E;\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"font-family: \u0026quot;Courier New\u0026quot;; font-size: 10.0pt; mso-no-proof: yes;\"\u003EcheckCudaErrors\u003Cspan style=\"color: green;\"\u003E(\u003C\/span\u003E cudaGetDeviceProperties\u003Cspan style=\"color: green;\"\u003E(\u003C\/span\u003E  \u003Cspan style=\"color: green;\"\u003E\u0026amp;\u003C\/span\u003Eprop\u003Cspan style=\"color: green;\"\u003E,\u003C\/span\u003E  0 \u003Cspan style=\"color: green;\"\u003E)\u003C\/span\u003E \u003Cspan style=\"color: green;\"\u003E);\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"color: blue; font-family: \u0026quot;Courier New\u0026quot;; font-size: 10.0pt; mso-no-proof: yes;\"\u003Eint\u003C\/span\u003E\u003Cspan style=\"font-family: \u0026quot;Courier New\u0026quot;; font-size: 10.0pt; mso-no-proof: yes;\"\u003E blocks \u003Cspan style=\"color: green;\"\u003E=\u003C\/span\u003E prop\u003Cspan style=\"color: green;\"\u003E.\u003C\/span\u003EmultiProcessorCount\u003Cspan style=\"color: green;\"\u003E;\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"font-family: \u0026quot;Courier New\u0026quot;; font-size: 10.0pt; mso-no-proof: yes;\"\u003Ehisto_kernel_optimized\u003Cspan style=\"color: green;\"\u003E \u0026lt;\u0026lt;\u0026lt;\u003C\/span\u003Eblocks\u003Cspan style=\"color: green;\"\u003E*\u003C\/span\u003E2\u003Cspan style=\"color: green;\"\u003E,\u003C\/span\u003E256\u003Cspan style=\"color: green;\"\u003E\u0026gt;\u0026gt;\u0026gt;(\u003C\/span\u003E  dev_buffer\u003Cspan style=\"color: green;\"\u003E,\u003C\/span\u003E SIZE\u003Cspan style=\"color: green;\"\u003E,\u003C\/span\u003E  dev_histo \u003Cspan style=\"color: green;\"\u003E);\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003C\/td\u003E \u003C\/tr\u003E\u003C\/tbody\u003E\u003C\/table\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"font-size: 12.0pt; mso-bidi-font-family: Calibri; mso-bidi-theme-font: minor-latin;\"\u003ESince our walk-through of main() has been somewhat fragmented, here is the entire routine from start to finish:\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cb\u003E\u003Cu\u003E\u003Cspan style=\"font-size: 12.0pt; mso-bidi-font-family: Calibri; mso-bidi-theme-font: minor-latin;\"\u003EHistogram.cu\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/u\u003E\u003C\/b\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Ctable border=\"1\" cellpadding=\"0\" cellspacing=\"0\" class=\"MsoTableGrid\" style=\"border-collapse: collapse; border: none; mso-border-alt: solid windowtext .5pt; mso-padding-alt: 0in 5.4pt 0in 5.4pt; mso-yfti-tbllook: 1184;\"\u003E \u003Ctbody\u003E\u003Ctr\u003E  \u003Ctd style=\"background: #92D050; border: solid windowtext 1.0pt; mso-border-alt: solid windowtext .5pt; padding: 0in 5.4pt 0in 5.4pt; width: 6.65in;\" valign=\"top\" width=\"638\"\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"color: blue; font-family: \u0026quot;Courier New\u0026quot;; font-size: 10.0pt; mso-no-proof: yes;\"\u003E#define\u003C\/span\u003E\u003Cspan style=\"font-family: \u0026quot;Courier New\u0026quot;; font-size: 10.0pt; mso-no-proof: yes;\"\u003E SIZE \u003Cspan style=\"color: green;\"\u003E(\u003C\/span\u003E100\u003Cspan style=\"color: green;\"\u003E*\u003C\/span\u003E1024\u003Cspan style=\"color: green;\"\u003E*\u003C\/span\u003E1024\u003Cspan style=\"color: green;\"\u003E) \/\/ 100 MB\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"color: green; font-family: \u0026quot;Courier New\u0026quot;; font-size: 10.0pt; mso-no-proof: yes;\"\u003E\/\/ Write kernel code here \u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"color: blue; font-family: \u0026quot;Courier New\u0026quot;; font-size: 10.0pt; mso-no-proof: yes;\"\u003Eint\u003C\/span\u003E\u003Cspan style=\"font-family: \u0026quot;Courier New\u0026quot;; font-size: 10.0pt; mso-no-proof: yes;\"\u003E main\u003Cspan style=\"color: green;\"\u003E(\u003C\/span\u003E \u003Cspan style=\"color: blue;\"\u003Evoid\u003C\/span\u003E \u003Cspan style=\"color: green;\"\u003E)\u003C\/span\u003E \u003Cspan style=\"color: green;\"\u003E{\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"color: blue; font-family: \u0026quot;Courier New\u0026quot;; font-size: 10.0pt; mso-no-proof: yes;\"\u003Eunsigned\u003C\/span\u003E\u003Cspan style=\"font-family: \u0026quot;Courier New\u0026quot;; font-size: 10.0pt; mso-no-proof: yes;\"\u003E \u003Cspan style=\"color: blue;\"\u003Echar\u003C\/span\u003E \u003Cspan style=\"color: green;\"\u003E*\u003C\/span\u003Ebuffer \u003Cspan style=\"color: green;\"\u003E=\u003C\/span\u003E \u003Cspan style=\"color: green;\"\u003E(\u003C\/span\u003E\u003Cspan style=\"color: blue;\"\u003Eunsigned\u003C\/span\u003E \u003Cspan style=\"color: blue;\"\u003Echar\u003C\/span\u003E\u003Cspan style=\"color: green;\"\u003E*)\u003C\/span\u003Ebig_random_block\u003Cspan style=\"color: green;\"\u003E(\u003C\/span\u003E SIZE \u003Cspan style=\"color: green;\"\u003E);\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"font-family: \u0026quot;Courier New\u0026quot;; font-size: 10.0pt; mso-no-proof: yes;\"\u003EcudaEvent_t   start\u003Cspan style=\"color: green;\"\u003E,\u003C\/span\u003E stop\u003Cspan style=\"color: green;\"\u003E;\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"font-family: \u0026quot;Courier New\u0026quot;; font-size: 10.0pt; mso-no-proof: yes;\"\u003EcheckCudaErrors\u003Cspan style=\"color: green;\"\u003E(\u003C\/span\u003E cudaEventCreate\u003Cspan style=\"color: green;\"\u003E(\u003C\/span\u003E  \u003Cspan style=\"color: green;\"\u003E\u0026amp;\u003C\/span\u003Estart \u003Cspan style=\"color: green;\"\u003E)\u003C\/span\u003E  \u003Cspan style=\"color: green;\"\u003E);\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"font-family: \u0026quot;Courier New\u0026quot;; font-size: 10.0pt; mso-no-proof: yes;\"\u003EcheckCudaErrors\u003Cspan style=\"color: green;\"\u003E (\u003C\/span\u003E cudaEventCreate\u003Cspan style=\"color: green;\"\u003E(\u003C\/span\u003E  \u003Cspan style=\"color: green;\"\u003E\u0026amp;\u003C\/span\u003Estop \u003Cspan style=\"color: green;\"\u003E)\u003C\/span\u003E  \u003Cspan style=\"color: green;\"\u003E);\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"font-family: \u0026quot;Courier New\u0026quot;; font-size: 10.0pt; mso-no-proof: yes;\"\u003EcheckCudaErrors\u003Cspan style=\"color: green;\"\u003E (\u003C\/span\u003E cudaEventRecord\u003Cspan style=\"color: green;\"\u003E(\u003C\/span\u003E  start\u003Cspan style=\"color: green;\"\u003E,\u003C\/span\u003E 0 \u003Cspan style=\"color: green;\"\u003E)\u003C\/span\u003E \u003Cspan style=\"color: green;\"\u003E);\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"color: green; font-family: \u0026quot;Courier New\u0026quot;; font-size: 10.0pt; mso-no-proof: yes;\"\u003E\/\/ allocate memory on the GPU for the file's data\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"color: blue; font-family: \u0026quot;Courier New\u0026quot;; font-size: 10.0pt; mso-no-proof: yes;\"\u003Eunsigned\u003C\/span\u003E\u003Cspan style=\"font-family: \u0026quot;Courier New\u0026quot;; font-size: 10.0pt; mso-no-proof: yes;\"\u003E \u003Cspan style=\"color: blue;\"\u003Echar\u003C\/span\u003E \u003Cspan style=\"color: green;\"\u003E*\u003C\/span\u003Edev_buffer\u003Cspan style=\"color: green;\"\u003E;\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"color: blue; font-family: \u0026quot;Courier New\u0026quot;; font-size: 10.0pt; mso-no-proof: yes;\"\u003Eunsigned\u003C\/span\u003E\u003Cspan style=\"font-family: \u0026quot;Courier New\u0026quot;; font-size: 10.0pt; mso-no-proof: yes;\"\u003E \u003Cspan style=\"color: blue;\"\u003Eint\u003C\/span\u003E \u003Cspan style=\"color: green;\"\u003E*\u003C\/span\u003Edev_histo\u003Cspan style=\"color: green;\"\u003E;\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"font-family: \u0026quot;Courier New\u0026quot;; font-size: 10.0pt; mso-no-proof: yes;\"\u003EcheckCudaErrors\u003Cspan style=\"color: green;\"\u003E(\u003C\/span\u003E cudaMalloc\u003Cspan style=\"color: green;\"\u003E(\u003C\/span\u003E \u003Cspan style=\"color: green;\"\u003E(\u003C\/span\u003E\u003Cspan style=\"color: blue;\"\u003Evoid\u003C\/span\u003E\u003Cspan style=\"color: green;\"\u003E**)\u0026amp;\u003C\/span\u003Edev_buffer\u003Cspan style=\"color: green;\"\u003E,\u003C\/span\u003E  SIZE \u003Cspan style=\"color: green;\"\u003E)\u003C\/span\u003E \u003Cspan style=\"color: green;\"\u003E);\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"font-family: \u0026quot;Courier New\u0026quot;; font-size: 10.0pt; mso-no-proof: yes;\"\u003EcheckCudaErrors\u003Cspan style=\"color: green;\"\u003E(\u003C\/span\u003E cudaMemcpy\u003Cspan style=\"color: green;\"\u003E(\u003C\/span\u003E  dev_buffer\u003Cspan style=\"color: green;\"\u003E,\u003C\/span\u003E buffer\u003Cspan style=\"color: green;\"\u003E,\u003C\/span\u003E  SIZE\u003Cspan style=\"color: green;\"\u003E,\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"font-family: \u0026quot;Courier New\u0026quot;; font-size: 10.0pt; mso-no-proof: yes;\"\u003EcudaMemcpyHostToDevice   \u003Cspan style=\"color: green;\"\u003E)\u003C\/span\u003E \u003Cspan style=\"color: green;\"\u003E);\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"font-family: \u0026quot;Courier New\u0026quot;; font-size: 10.0pt; mso-no-proof: yes;\"\u003EcheckCudaErrors\u003Cspan style=\"color: green;\"\u003E(\u003C\/span\u003E cudaMalloc\u003Cspan style=\"color: green;\"\u003E(\u003C\/span\u003E \u003Cspan style=\"color: green;\"\u003E(\u003C\/span\u003E\u003Cspan style=\"color: blue;\"\u003Evoid\u003C\/span\u003E\u003Cspan style=\"color: green;\"\u003E**)\u0026amp;\u003C\/span\u003Edev_histo\u003Cspan style=\"color: green;\"\u003E,\u003C\/span\u003E256   \u003Cspan style=\"color: green;\"\u003E*\u003C\/span\u003E \u003Cspan style=\"color: blue;\"\u003Esizeof\u003C\/span\u003E\u003Cspan style=\"color: green;\"\u003E(\u003C\/span\u003E \u003Cspan style=\"color: blue;\"\u003Elong\u003C\/span\u003E \u003Cspan style=\"color: green;\"\u003E)\u003C\/span\u003E \u003Cspan style=\"color: green;\"\u003E)\u003C\/span\u003E \u003Cspan style=\"color: green;\"\u003E);\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"font-family: \u0026quot;Courier New\u0026quot;; font-size: 10.0pt; mso-no-proof: yes;\"\u003EcheckCudaErrors\u003Cspan style=\"color: green;\"\u003E(\u003C\/span\u003E cudaMemset\u003Cspan style=\"color: green;\"\u003E(\u003C\/span\u003E  dev_histo\u003Cspan style=\"color: green;\"\u003E,\u003C\/span\u003E 0\u003Cspan style=\"color: green;\"\u003E,\u003C\/span\u003E256   \u003Cspan style=\"color: green;\"\u003E*\u003C\/span\u003E \u003Cspan style=\"color: blue;\"\u003Esizeof\u003C\/span\u003E\u003Cspan style=\"color: green;\"\u003E(\u003C\/span\u003E \u003Cspan style=\"color: blue;\"\u003Eint\u003C\/span\u003E \u003Cspan style=\"color: green;\"\u003E)\u003C\/span\u003E \u003Cspan style=\"color: green;\"\u003E)\u003C\/span\u003E \u003Cspan style=\"color: green;\"\u003E);\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"font-family: \u0026quot;Courier New\u0026quot;; font-size: 10.0pt; mso-no-proof: yes;\"\u003EcudaDeviceProp   prop\u003Cspan style=\"color: green;\"\u003E;\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"font-family: \u0026quot;Courier New\u0026quot;; font-size: 10.0pt; mso-no-proof: yes;\"\u003EcheckCudaErrors\u003Cspan style=\"color: green;\"\u003E(\u003C\/span\u003E cudaGetDeviceProperties\u003Cspan style=\"color: green;\"\u003E(\u003C\/span\u003E  \u003Cspan style=\"color: green;\"\u003E\u0026amp;\u003C\/span\u003Eprop\u003Cspan style=\"color: green;\"\u003E,\u003C\/span\u003E  0 \u003Cspan style=\"color: green;\"\u003E)\u003C\/span\u003E \u003Cspan style=\"color: green;\"\u003E);\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"color: blue; font-family: \u0026quot;Courier New\u0026quot;; font-size: 10.0pt; mso-no-proof: yes;\"\u003Eint\u003C\/span\u003E\u003Cspan style=\"font-family: \u0026quot;Courier New\u0026quot;; font-size: 10.0pt; mso-no-proof: yes;\"\u003E blocks \u003Cspan style=\"color: green;\"\u003E=\u003C\/span\u003E prop\u003Cspan style=\"color: green;\"\u003E.\u003C\/span\u003EmultiProcessorCount\u003Cspan style=\"color: green;\"\u003E;\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"font-family: \u0026quot;Courier New\u0026quot;; font-size: 10.0pt; mso-no-proof: yes;\"\u003Ehisto_kernel_optimized\u003Cspan style=\"color: green;\"\u003E \u0026lt;\u0026lt;\u0026lt;\u003C\/span\u003Eblocks\u003Cspan style=\"color: green;\"\u003E*\u003C\/span\u003E2\u003Cspan style=\"color: green;\"\u003E,\u003C\/span\u003E256\u003Cspan style=\"color: green;\"\u003E\u0026gt;\u0026gt;\u0026gt;(\u003C\/span\u003E  dev_buffer\u003Cspan style=\"color: green;\"\u003E,\u003C\/span\u003E SIZE\u003Cspan style=\"color: green;\"\u003E,\u003C\/span\u003E  dev_histo \u003Cspan style=\"color: green;\"\u003E);\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"color: blue; font-family: \u0026quot;Courier New\u0026quot;; font-size: 10.0pt; mso-no-proof: yes;\"\u003Eunsigned\u003C\/span\u003E\u003Cspan style=\"font-family: \u0026quot;Courier New\u0026quot;; font-size: 10.0pt; mso-no-proof: yes;\"\u003E \u003Cspan style=\"color: blue;\"\u003Eint\u003C\/span\u003E histo\u003Cspan style=\"color: green;\"\u003E[\u003C\/span\u003E256\u003Cspan style=\"color: green;\"\u003E];\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"font-family: \u0026quot;Courier New\u0026quot;; font-size: 10.0pt; mso-no-proof: yes;\"\u003EcheckCudaErrors   \u003Cspan style=\"color: green;\"\u003E(\u003C\/span\u003E cudaMemcpy\u003Cspan style=\"color: green;\"\u003E(\u003C\/span\u003E  histo\u003Cspan style=\"color: green;\"\u003E,\u003C\/span\u003E dev_histo\u003Cspan style=\"color: green;\"\u003E,\u003C\/span\u003E256   \u003Cspan style=\"color: green;\"\u003E*\u003C\/span\u003E \u003Cspan style=\"color: blue;\"\u003Esizeof\u003C\/span\u003E\u003Cspan style=\"color: green;\"\u003E(\u003C\/span\u003E \u003Cspan style=\"color: blue;\"\u003Eint\u003C\/span\u003E \u003Cspan style=\"color: green;\"\u003E),\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"font-family: \u0026quot;Courier New\u0026quot;; font-size: 10.0pt; mso-no-proof: yes;\"\u003EcudaMemcpyDeviceToHost   \u003Cspan style=\"color: green;\"\u003E)\u003C\/span\u003E \u003Cspan style=\"color: green;\"\u003E);\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"color: green; font-family: \u0026quot;Courier New\u0026quot;; font-size: 10.0pt; mso-no-proof: yes;\"\u003E\/\/ get stop time, and display the timing results\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"font-family: \u0026quot;Courier New\u0026quot;; font-size: 10.0pt; mso-no-proof: yes;\"\u003EcheckCudaErrors   \u003Cspan style=\"color: green;\"\u003E(\u003C\/span\u003E cudaEventRecord\u003Cspan style=\"color: green;\"\u003E(\u003C\/span\u003E  stop\u003Cspan style=\"color: green;\"\u003E,\u003C\/span\u003E 0 \u003Cspan style=\"color: green;\"\u003E)\u003C\/span\u003E \u003Cspan style=\"color: green;\"\u003E);\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"font-family: \u0026quot;Courier New\u0026quot;; font-size: 10.0pt; mso-no-proof: yes;\"\u003EcheckCudaErrors   \u003Cspan style=\"color: green;\"\u003E(\u003C\/span\u003E cudaEventSynchronize\u003Cspan style=\"color: green;\"\u003E(\u003C\/span\u003E stop \u003Cspan style=\"color: green;\"\u003E)\u003C\/span\u003E \u003Cspan style=\"color: green;\"\u003E);\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"color: blue; font-family: \u0026quot;Courier New\u0026quot;; font-size: 10.0pt; mso-no-proof: yes;\"\u003Efloat\u003C\/span\u003E\u003Cspan style=\"font-family: \u0026quot;Courier New\u0026quot;; font-size: 10.0pt; mso-no-proof: yes;\"\u003E elapsedTime\u003Cspan style=\"color: green;\"\u003E;\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"font-family: \u0026quot;Courier New\u0026quot;; font-size: 10.0pt; mso-no-proof: yes;\"\u003EcheckCudaErrors   \u003Cspan style=\"color: green;\"\u003E(\u003C\/span\u003E cudaEventElapsedTime\u003Cspan style=\"color: green;\"\u003E(\u003C\/span\u003E \u003Cspan style=\"color: green;\"\u003E\u0026amp;\u003C\/span\u003EelapsedTime\u003Cspan style=\"color: green;\"\u003E,\u003C\/span\u003Estart\u003Cspan style=\"color: green;\"\u003E,\u003C\/span\u003E stop \u003Cspan style=\"color: green;\"\u003E)\u003C\/span\u003E \u003Cspan style=\"color: green;\"\u003E);\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"font-family: \u0026quot;Courier New\u0026quot;; font-size: 10.0pt; mso-no-proof: yes;\"\u003Eprintf\u003Cspan style=\"color: green;\"\u003E(\u003C\/span\u003E \u003Cspan style=\"color: #a31515;\"\u003E\"Time to   generate: %3.1f ms\\n\"\u003C\/span\u003E\u003Cspan style=\"color: green;\"\u003E,\u003C\/span\u003E  elapsedTime \u003Cspan style=\"color: green;\"\u003E);\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Ci\u003E\u003Cspan style=\"color: #5a5a5a; font-size: 12.0pt; mso-bidi-font-family: Calibri; mso-bidi-theme-font: minor-latin;\"\u003E\/\/ verify that we have the same counts via CPU\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/i\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"color: blue; font-family: \u0026quot;Courier New\u0026quot;; font-size: 10.0pt; mso-no-proof: yes;\"\u003Elong\u003C\/span\u003E\u003Cspan style=\"font-family: \u0026quot;Courier New\u0026quot;; font-size: 10.0pt; mso-no-proof: yes;\"\u003E histoCount \u003Cspan style=\"color: green;\"\u003E=\u003C\/span\u003E 0\u003Cspan style=\"color: green;\"\u003E;\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"color: blue; font-family: \u0026quot;Courier New\u0026quot;; font-size: 10.0pt; mso-no-proof: yes;\"\u003Efor\u003C\/span\u003E\u003Cspan style=\"font-family: \u0026quot;Courier New\u0026quot;; font-size: 10.0pt; mso-no-proof: yes;\"\u003E \u003Cspan style=\"color: green;\"\u003E(\u003C\/span\u003E\u003Cspan style=\"color: blue;\"\u003Eint\u003C\/span\u003E  i\u003Cspan style=\"color: green;\"\u003E=\u003C\/span\u003E0\u003Cspan style=\"color: green;\"\u003E;\u003C\/span\u003E i\u003Cspan style=\"color: green;\"\u003E\u0026lt;\u003C\/span\u003E256\u003Cspan style=\"color: green;\"\u003E;\u003C\/span\u003E i\u003Cspan style=\"color: green;\"\u003E++)\u003C\/span\u003E \u003Cspan style=\"color: green;\"\u003E{\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"font-family: \u0026quot;Courier New\u0026quot;; font-size: 10.0pt; mso-no-proof: yes;\"\u003E\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; histoCount \u003Cspan style=\"color: green;\"\u003E+=\u003C\/span\u003E histo\u003Cspan style=\"color: green;\"\u003E[\u003C\/span\u003Ei\u003Cspan style=\"color: green;\"\u003E];\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"color: green; font-family: \u0026quot;Courier New\u0026quot;; font-size: 10.0pt; mso-no-proof: yes;\"\u003E}\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"font-family: \u0026quot;Courier New\u0026quot;; font-size: 10.0pt; mso-no-proof: yes;\"\u003Eprintf\u003Cspan style=\"color: green;\"\u003E(\u003C\/span\u003E \u003Cspan style=\"color: #a31515;\"\u003E\"Histogram Sum:   %ld\\n\"\u003C\/span\u003E\u003Cspan style=\"color: green;\"\u003E,\u003C\/span\u003E histoCount \u003Cspan style=\"color: green;\"\u003E);\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"color: green; font-family: \u0026quot;Courier New\u0026quot;; font-size: 10.0pt; mso-no-proof: yes;\"\u003E\/\/ verify that we have the same counts via CPU\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"color: blue; font-family: \u0026quot;Courier New\u0026quot;; font-size: 10.0pt; mso-no-proof: yes;\"\u003Efor\u003C\/span\u003E\u003Cspan style=\"font-family: \u0026quot;Courier New\u0026quot;; font-size: 10.0pt; mso-no-proof: yes;\"\u003E \u003Cspan style=\"color: green;\"\u003E(\u003C\/span\u003E\u003Cspan style=\"color: blue;\"\u003Eint\u003C\/span\u003E  i\u003Cspan style=\"color: green;\"\u003E=\u003C\/span\u003E0\u003Cspan style=\"color: green;\"\u003E;\u003C\/span\u003E i\u003Cspan style=\"color: green;\"\u003E\u0026lt;\u003C\/span\u003ESIZE\u003Cspan style=\"color: green;\"\u003E;\u003C\/span\u003E i\u003Cspan style=\"color: green;\"\u003E++)\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"font-family: \u0026quot;Courier New\u0026quot;; font-size: 10.0pt; mso-no-proof: yes;\"\u003Ehisto\u003Cspan style=\"color: green;\"\u003E[\u003C\/span\u003Ebuffer\u003Cspan style=\"color: green;\"\u003E[\u003C\/span\u003Ei\u003Cspan style=\"color: green;\"\u003E]]--;\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"color: blue; font-family: \u0026quot;Courier New\u0026quot;; font-size: 10.0pt; mso-no-proof: yes;\"\u003Efor\u003C\/span\u003E\u003Cspan style=\"font-family: \u0026quot;Courier New\u0026quot;; font-size: 10.0pt; mso-no-proof: yes;\"\u003E \u003Cspan style=\"color: green;\"\u003E(\u003C\/span\u003E\u003Cspan style=\"color: blue;\"\u003Eint\u003C\/span\u003E  i\u003Cspan style=\"color: green;\"\u003E=\u003C\/span\u003E0\u003Cspan style=\"color: green;\"\u003E;\u003C\/span\u003E i\u003Cspan style=\"color: green;\"\u003E\u0026lt;\u003C\/span\u003E256\u003Cspan style=\"color: green;\"\u003E;\u003C\/span\u003E i\u003Cspan style=\"color: green;\"\u003E++)\u003C\/span\u003E \u003Cspan style=\"color: green;\"\u003E{\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"color: blue; font-family: \u0026quot;Courier New\u0026quot;; font-size: 10.0pt; mso-no-proof: yes;\"\u003Eif\u003C\/span\u003E\u003Cspan style=\"font-family: \u0026quot;Courier New\u0026quot;; font-size: 10.0pt; mso-no-proof: yes;\"\u003E \u003Cspan style=\"color: green;\"\u003E(\u003C\/span\u003Ehisto\u003Cspan style=\"color: green;\"\u003E[\u003C\/span\u003Ei\u003Cspan style=\"color: green;\"\u003E]\u003C\/span\u003E \u003Cspan style=\"color: green;\"\u003E!=\u003C\/span\u003E 0\u003Cspan style=\"color: green;\"\u003E)\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"font-family: \u0026quot;Courier New\u0026quot;; font-size: 10.0pt; mso-no-proof: yes;\"\u003Eprintf\u003Cspan style=\"color: green;\"\u003E(\u003C\/span\u003E \u003Cspan style=\"color: #a31515;\"\u003E\"Failure at   %d!\\n\"\u003C\/span\u003E\u003Cspan style=\"color: green;\"\u003E,\u003C\/span\u003E i \u003Cspan style=\"color: green;\"\u003E);\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"color: green; font-family: \u0026quot;Courier New\u0026quot;; font-size: 10.0pt; mso-no-proof: yes;\"\u003E}\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"font-family: \u0026quot;Courier New\u0026quot;; font-size: 10.0pt; mso-no-proof: yes;\"\u003EcheckCudaErrors   \u003Cspan style=\"color: green;\"\u003E(\u003C\/span\u003E cudaEventDestroy\u003Cspan style=\"color: green;\"\u003E(\u003C\/span\u003E  start \u003Cspan style=\"color: green;\"\u003E)\u003C\/span\u003E \u003Cspan style=\"color: green;\"\u003E);\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"font-family: \u0026quot;Courier New\u0026quot;; font-size: 10.0pt; mso-no-proof: yes;\"\u003EcheckCudaErrors   \u003Cspan style=\"color: green;\"\u003E(\u003C\/span\u003E cudaEventDestroy\u003Cspan style=\"color: green;\"\u003E(\u003C\/span\u003E  stop \u003Cspan style=\"color: green;\"\u003E)\u003C\/span\u003E \u003Cspan style=\"color: green;\"\u003E);\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"font-family: \u0026quot;Courier New\u0026quot;; font-size: 10.0pt; mso-no-proof: yes;\"\u003EcheckCudaErrors   \u003Cspan style=\"color: green;\"\u003E(\u003C\/span\u003E cudaFree\u003Cspan style=\"color: green;\"\u003E(\u003C\/span\u003E  dev_histo \u003Cspan style=\"color: green;\"\u003E)\u003C\/span\u003E \u003Cspan style=\"color: green;\"\u003E)\u003C\/span\u003E  \u003Cspan style=\"color: green;\"\u003E;\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"font-family: \u0026quot;Courier New\u0026quot;; font-size: 10.0pt; mso-no-proof: yes;\"\u003EcheckCudaErrors   \u003Cspan style=\"color: green;\"\u003E(\u003C\/span\u003E cudaFree\u003Cspan style=\"color: green;\"\u003E(\u003C\/span\u003E  dev_buffer \u003Cspan style=\"color: green;\"\u003E)\u003C\/span\u003E \u003Cspan style=\"color: green;\"\u003E)\u003C\/span\u003E  \u003Cspan style=\"color: green;\"\u003E;\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"font-family: \u0026quot;Courier New\u0026quot;; font-size: 10.0pt; mso-no-proof: yes;\"\u003Efree\u003Cspan style=\"color: green;\"\u003E(\u003C\/span\u003E buffer \u003Cspan style=\"color: green;\"\u003E);\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"color: blue; font-family: \u0026quot;Courier New\u0026quot;; font-size: 10.0pt; mso-no-proof: yes;\"\u003Ereturn\u003C\/span\u003E\u003Cspan style=\"font-family: \u0026quot;Courier New\u0026quot;; font-size: 10.0pt; mso-no-proof: yes;\"\u003E 0\u003Cspan style=\"color: green;\"\u003E;\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"color: green; font-family: \u0026quot;Courier New\u0026quot;; font-size: 10.0pt; mso-no-proof: yes;\"\u003E}\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003C\/td\u003E \u003C\/tr\u003E\u003C\/tbody\u003E\u003C\/table\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv align=\"center\" class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt; text-align: center;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv align=\"center\" class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt; text-align: center;\"\u003E\u003Cb\u003E\u003Ci\u003E\u003Cu\u003E\u003Cspan style=\"color: #92d050; font-size: 16.0pt; mso-bidi-font-family: Calibri; mso-bidi-theme-font: minor-latin;\"\u003EOptimization step 3 \u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/u\u003E\u003C\/i\u003E\u003C\/b\u003E\u003C\/div\u003E\u003Cdiv align=\"center\" class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt; text-align: center;\"\u003E\u003Cb\u003E\u003Ci\u003E\u003Cu\u003E\u003Cspan style=\"color: #92d050; font-size: 16.0pt; mso-bidi-font-family: Calibri; mso-bidi-theme-font: minor-latin;\"\u003EHISTOGRAM KERNEL USING GLOBAL MEMORY ATOMICS\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/u\u003E\u003C\/i\u003E\u003C\/b\u003E\u003C\/div\u003E\u003Cdiv align=\"center\" class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt; text-align: center;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"font-size: 12.0pt; mso-bidi-font-family: Calibri; mso-bidi-theme-font: minor-latin;\"\u003EAnd now for the fun part: the GPU code that computes the histogram! The kernel that computes the histogram itself needs to be given a pointer to the input data array, the length of the input array, and a pointer to the output histogram. The first thing our kernel needs to compute is a linearized offset into the input data array. Each thread will start with an offset between 0 and the number of threads minus 1. It will then stride by the total number of threads that have been launched. We hope you remember this technique; we used the same logic to \u003C\/span\u003E\u003Ca href=\"http:\/\/cuda-programming.blogspot.in\/2013\/01\/cuda-program-for-vector-addition-for.html\"\u003E\u003Cspan style=\"font-size: 12.0pt; mso-bidi-font-family: Calibri; mso-bidi-theme-font: minor-latin;\"\u003Eadd vectors\u003C\/span\u003E\u003C\/a\u003E\u003Cspan style=\"font-size: 12.0pt; mso-bidi-font-family: Calibri; mso-bidi-theme-font: minor-latin;\"\u003E of arbitrary length.\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Ctable border=\"1\" cellpadding=\"0\" cellspacing=\"0\" class=\"MsoTableGrid\" style=\"border-collapse: collapse; border: none; mso-border-alt: solid windowtext .5pt; mso-padding-alt: 0in 5.4pt 0in 5.4pt; mso-yfti-tbllook: 1184;\"\u003E \u003Ctbody\u003E\u003Ctr\u003E  \u003Ctd style=\"background: #92D050; border: solid windowtext 1.0pt; mso-border-alt: solid windowtext .5pt; padding: 0in 5.4pt 0in 5.4pt; width: 6.65in;\" valign=\"top\" width=\"638\"\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"font-family: \u0026quot;Courier New\u0026quot;; font-size: 10.0pt; mso-no-proof: yes;\"\u003E__global__   \u003Cspan style=\"color: blue;\"\u003Evoid\u003C\/span\u003E \u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"font-family: \u0026quot;Courier New\u0026quot;; font-size: 10.0pt; mso-no-proof: yes;\"\u003Ehisto_kernel_optimized4\u003Cspan style=\"color: green;\"\u003E(\u003C\/span\u003E \u003Cspan style=\"color: blue;\"\u003Eunsigned\u003C\/span\u003E \u003Cspan style=\"color: blue;\"\u003Echar\u003C\/span\u003E \u003Cspan style=\"color: green;\"\u003E*\u003C\/span\u003Ebuffer\u003Cspan style=\"color: green;\"\u003E,\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"color: blue; font-family: \u0026quot;Courier New\u0026quot;; font-size: 10.0pt; mso-no-proof: yes;\"\u003Elong\u003C\/span\u003E\u003Cspan style=\"font-family: \u0026quot;Courier New\u0026quot;; font-size: 10.0pt; mso-no-proof: yes;\"\u003E size\u003Cspan style=\"color: green;\"\u003E,\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"color: blue; font-family: \u0026quot;Courier New\u0026quot;; font-size: 10.0pt; mso-no-proof: yes;\"\u003Eunsigned\u003C\/span\u003E\u003Cspan style=\"font-family: \u0026quot;Courier New\u0026quot;; font-size: 10.0pt; mso-no-proof: yes;\"\u003E \u003Cspan style=\"color: blue;\"\u003Eint\u003C\/span\u003E \u003Cspan style=\"color: green;\"\u003E*\u003C\/span\u003Ehisto \u003Cspan style=\"color: green;\"\u003E)\u003C\/span\u003E \u003Cspan style=\"color: green;\"\u003E{\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"color: blue; font-family: \u0026quot;Courier New\u0026quot;; font-size: 10.0pt; mso-no-proof: yes;\"\u003Eint\u003C\/span\u003E\u003Cspan style=\"font-family: \u0026quot;Courier New\u0026quot;; font-size: 10.0pt; mso-no-proof: yes;\"\u003E i \u003Cspan style=\"color: green;\"\u003E=\u003C\/span\u003E threadIdx\u003Cspan style=\"color: green;\"\u003E.\u003C\/span\u003Ex \u003Cspan style=\"color: green;\"\u003E+\u003C\/span\u003E blockIdx\u003Cspan style=\"color: green;\"\u003E.\u003C\/span\u003Ex \u003Cspan style=\"color: green;\"\u003E*\u003C\/span\u003E blockDim\u003Cspan style=\"color: green;\"\u003E.\u003C\/span\u003Ex\u003Cspan style=\"color: green;\"\u003E;\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"color: blue; font-family: \u0026quot;Courier New\u0026quot;; font-size: 10.0pt; mso-no-proof: yes;\"\u003Eint\u003C\/span\u003E\u003Cspan style=\"font-family: \u0026quot;Courier New\u0026quot;; font-size: 10.0pt; mso-no-proof: yes;\"\u003E stride \u003Cspan style=\"color: green;\"\u003E=\u003C\/span\u003E blockDim\u003Cspan style=\"color: green;\"\u003E.\u003C\/span\u003Ex \u003Cspan style=\"color: green;\"\u003E*\u003C\/span\u003E gridDim\u003Cspan style=\"color: green;\"\u003E.\u003C\/span\u003Ex\u003Cspan style=\"color: green;\"\u003E;\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003C\/td\u003E \u003C\/tr\u003E\u003C\/tbody\u003E\u003C\/table\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"font-size: 12.0pt; mso-bidi-font-family: Calibri; mso-bidi-theme-font: minor-latin;\"\u003EOnce each thread knows its starting offset i and the stride it should use, the code walks through the input array incrementing the corresponding histogram bin.\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Ctable border=\"1\" cellpadding=\"0\" cellspacing=\"0\" class=\"MsoTableGrid\" style=\"border-collapse: collapse; border: none; mso-border-alt: solid windowtext .5pt; mso-padding-alt: 0in 5.4pt 0in 5.4pt; mso-yfti-tbllook: 1184;\"\u003E \u003Ctbody\u003E\u003Ctr\u003E  \u003Ctd style=\"background: #92D050; border: solid windowtext 1.0pt; mso-border-alt: solid windowtext .5pt; padding: 0in 5.4pt 0in 5.4pt; width: 6.65in;\" valign=\"top\" width=\"638\"\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"color: blue; font-family: \u0026quot;Courier New\u0026quot;; font-size: 10.0pt; mso-no-proof: yes;\"\u003Ewhile\u003C\/span\u003E\u003Cspan style=\"font-family: \u0026quot;Courier New\u0026quot;; font-size: 10.0pt; mso-no-proof: yes;\"\u003E \u003Cspan style=\"color: green;\"\u003E(\u003C\/span\u003Ei \u003Cspan style=\"color: green;\"\u003E\u0026lt;\u003C\/span\u003E size\u003Cspan style=\"color: green;\"\u003E)\u003C\/span\u003E \u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"color: green; font-family: \u0026quot;Courier New\u0026quot;; font-size: 10.0pt; mso-no-proof: yes;\"\u003E{\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"font-family: \u0026quot;Courier New\u0026quot;; font-size: 10.0pt; mso-no-proof: yes;\"\u003E\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; atomicAdd\u003Cspan style=\"color: green;\"\u003E(\u003C\/span\u003E  \u003Cspan style=\"color: green;\"\u003E\u0026amp;(\u003C\/span\u003Ehisto\u003Cspan style=\"color: green;\"\u003E[\u003C\/span\u003Ebuffer\u003Cspan style=\"color: green;\"\u003E[\u003C\/span\u003Ei\u003Cspan style=\"color: green;\"\u003E]]),\u003C\/span\u003E 1 \u003Cspan style=\"color: green;\"\u003E);\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"font-family: \u0026quot;Courier New\u0026quot;; font-size: 10.0pt; mso-no-proof: yes;\"\u003E\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; i \u003Cspan style=\"color: green;\"\u003E+=\u003C\/span\u003E  stride\u003Cspan style=\"color: green;\"\u003E;\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"color: green; font-family: \u0026quot;Courier New\u0026quot;; font-size: 10.0pt; mso-no-proof: yes;\"\u003E}\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"color: green; font-family: \u0026quot;Courier New\u0026quot;; font-size: 10.0pt; mso-no-proof: yes;\"\u003E}\u003C\/span\u003E\u003Cspan style=\"color: #92d050; font-size: 12.0pt; mso-bidi-font-family: Calibri; mso-bidi-theme-font: minor-latin;\"\u003E\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/div\u003E\u003C\/td\u003E \u003C\/tr\u003E\u003C\/tbody\u003E\u003C\/table\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"font-size: 12.0pt; mso-bidi-font-family: Calibri; mso-bidi-theme-font: minor-latin;\"\u003EThe highlighted line represents the way we use atomic operations in CUDA C. The call \u003Cb\u003EatomicAdd( addr, y );\u003C\/b\u003E generates an atomic sequence of operations that read the value at address addr, adds y to that value, and stores the result back to the memory address addr. The hardware guarantees us that no other thread can read or write the value at address addr while we perform these operations, thus ensuring predictable results. In our example, the address in\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"font-size: 12.0pt; mso-bidi-font-family: Calibri; mso-bidi-theme-font: minor-latin;\"\u003Equestion is the location of the histogram bin that corresponds to the current byte. If the current byte is \u003Cb\u003Ebuffer[i],\u003C\/b\u003E just like we saw in the CPU version, the corresponding histogram bin is \u003Cb\u003Ehisto[buffer[i]].\u003C\/b\u003E The atomic operation needs the address of this bin, so the first argument is therefore \u003Cb\u003E\u0026amp;(histo[buffer[i]]).\u003C\/b\u003E Since we simply want to increment the value in that bin by one, the second argument is 1. \u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"font-size: 12.0pt; mso-bidi-font-family: Calibri; mso-bidi-theme-font: minor-latin;\"\u003ESo after that entire hullabaloo, our GPU histogram computation is fairly similar to the corresponding CPU version.\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Ctable border=\"1\" cellpadding=\"0\" cellspacing=\"0\" class=\"MsoTableGrid\" style=\"border-collapse: collapse; border: none; mso-border-alt: solid windowtext .5pt; mso-padding-alt: 0in 5.4pt 0in 5.4pt; mso-yfti-tbllook: 1184;\"\u003E \u003Ctbody\u003E\u003Ctr\u003E  \u003Ctd style=\"background: #92D050; border: solid windowtext 1.0pt; mso-border-alt: solid windowtext .5pt; padding: 0in 5.4pt 0in 5.4pt; width: 6.65in;\" valign=\"top\" width=\"638\"\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"font-family: \u0026quot;Courier New\u0026quot;; font-size: 10.0pt; mso-no-proof: yes;\"\u003E__global__   \u003Cspan style=\"color: blue;\"\u003Evoid\u003C\/span\u003E \u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"font-family: \u0026quot;Courier New\u0026quot;; font-size: 10.0pt; mso-no-proof: yes;\"\u003Ehisto_kernel_optimized4\u003Cspan style=\"color: green;\"\u003E(\u003C\/span\u003E \u003Cspan style=\"color: blue;\"\u003Eunsigned\u003C\/span\u003E \u003Cspan style=\"color: blue;\"\u003Echar\u003C\/span\u003E \u003Cspan style=\"color: green;\"\u003E*\u003C\/span\u003Ebuffer\u003Cspan style=\"color: green;\"\u003E,\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"color: blue; font-family: \u0026quot;Courier New\u0026quot;; font-size: 10.0pt; mso-no-proof: yes;\"\u003Elong\u003C\/span\u003E\u003Cspan style=\"font-family: \u0026quot;Courier New\u0026quot;; font-size: 10.0pt; mso-no-proof: yes;\"\u003E size\u003Cspan style=\"color: green;\"\u003E,\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"color: blue; font-family: \u0026quot;Courier New\u0026quot;; font-size: 10.0pt; mso-no-proof: yes;\"\u003Eunsigned\u003C\/span\u003E\u003Cspan style=\"font-family: \u0026quot;Courier New\u0026quot;; font-size: 10.0pt; mso-no-proof: yes;\"\u003E \u003Cspan style=\"color: blue;\"\u003Eint\u003C\/span\u003E \u003Cspan style=\"color: green;\"\u003E*\u003C\/span\u003Ehisto \u003Cspan style=\"color: green;\"\u003E)\u003C\/span\u003E \u003Cspan style=\"color: green;\"\u003E{\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"color: blue; font-family: \u0026quot;Courier New\u0026quot;; font-size: 10.0pt; mso-no-proof: yes;\"\u003Eint\u003C\/span\u003E\u003Cspan style=\"font-family: \u0026quot;Courier New\u0026quot;; font-size: 10.0pt; mso-no-proof: yes;\"\u003E i \u003Cspan style=\"color: green;\"\u003E=\u003C\/span\u003E threadIdx\u003Cspan style=\"color: green;\"\u003E.\u003C\/span\u003Ex \u003Cspan style=\"color: green;\"\u003E+\u003C\/span\u003E blockIdx\u003Cspan style=\"color: green;\"\u003E.\u003C\/span\u003Ex \u003Cspan style=\"color: green;\"\u003E*\u003C\/span\u003E blockDim\u003Cspan style=\"color: green;\"\u003E.\u003C\/span\u003Ex\u003Cspan style=\"color: green;\"\u003E;\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"color: blue; font-family: \u0026quot;Courier New\u0026quot;; font-size: 10.0pt; mso-no-proof: yes;\"\u003Eint\u003C\/span\u003E\u003Cspan style=\"font-family: \u0026quot;Courier New\u0026quot;; font-size: 10.0pt; mso-no-proof: yes;\"\u003E stride \u003Cspan style=\"color: green;\"\u003E=\u003C\/span\u003E blockDim\u003Cspan style=\"color: green;\"\u003E.\u003C\/span\u003Ex \u003Cspan style=\"color: green;\"\u003E*\u003C\/span\u003E gridDim\u003Cspan style=\"color: green;\"\u003E.\u003C\/span\u003Ex\u003Cspan style=\"color: green;\"\u003E;\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"color: blue; font-family: \u0026quot;Courier New\u0026quot;; font-size: 10.0pt; mso-no-proof: yes;\"\u003E\u0026nbsp; while\u003C\/span\u003E\u003Cspan style=\"font-family: \u0026quot;Courier New\u0026quot;; font-size: 10.0pt; mso-no-proof: yes;\"\u003E \u003Cspan style=\"color: green;\"\u003E(\u003C\/span\u003Ei \u003Cspan style=\"color: green;\"\u003E\u0026lt;\u003C\/span\u003E size\u003Cspan style=\"color: green;\"\u003E)\u003C\/span\u003E \u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"color: green; font-family: \u0026quot;Courier New\u0026quot;; font-size: 10.0pt; mso-no-proof: yes;\"\u003E\u0026nbsp; {\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"font-family: \u0026quot;Courier New\u0026quot;; font-size: 10.0pt; mso-no-proof: yes;\"\u003E\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; atomicAdd\u003Cspan style=\"color: green;\"\u003E(\u003C\/span\u003E  \u003Cspan style=\"color: green;\"\u003E\u0026amp;(\u003C\/span\u003Ehisto\u003Cspan style=\"color: green;\"\u003E[\u003C\/span\u003Ebuffer\u003Cspan style=\"color: green;\"\u003E[\u003C\/span\u003Ei\u003Cspan style=\"color: green;\"\u003E]]),\u003C\/span\u003E 1 \u003Cspan style=\"color: green;\"\u003E);\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"font-family: \u0026quot;Courier New\u0026quot;; font-size: 10.0pt; mso-no-proof: yes;\"\u003E\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; i \u003Cspan style=\"color: green;\"\u003E+=\u003C\/span\u003E  stride\u003Cspan style=\"color: green;\"\u003E;\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"color: green; font-family: \u0026quot;Courier New\u0026quot;; font-size: 10.0pt; mso-no-proof: yes;\"\u003E\u0026nbsp; }\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"color: green; font-family: \u0026quot;Courier New\u0026quot;; font-size: 10.0pt; mso-no-proof: yes;\"\u003E}\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003C\/td\u003E \u003C\/tr\u003E\u003C\/tbody\u003E\u003C\/table\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"font-size: 12.0pt; mso-bidi-font-family: Calibri; mso-bidi-theme-font: minor-latin;\"\u003EHowever, we need to save the celebrations for later. After running this example, we discover that a GeForce GTX 285 can construct a histogram from 100MB of input data in 1.752 seconds. If you read the section on CPU-based histograms \u003Ci\u003E(Part1),\u003C\/i\u003E you will realize that this performance is terrible. In fact, this is more than four times slower than the CPU version! But this is why we always measure our baseline performance. It would be a shame to settle for such a low-performance implementation simply because it runs on the GPU.\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"color: #0070c0; font-size: 12.0pt; mso-bidi-font-family: Calibri; mso-bidi-theme-font: minor-latin;\"\u003ESince we do very little work in the kernel, it is quite likely that the atomic operation on global memory is causing the problem. Essentially, when thousands of threads are trying to access a handful of memory locations, a great deal of contention for our 256 histogram bins can occur. To ensure atomicity of the increment operations, the hardware needs to serialize operations to the same memory location. This can result in a long queue of pending operations, and any performance gain we might have had will vanish. \u003C\/span\u003E\u003Cspan style=\"color: red; font-size: 12.0pt; mso-bidi-font-family: Calibri; mso-bidi-theme-font: minor-latin;\"\u003EWe will need to improve the algorithm itself in order to recover this performance.\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"font-size: 12.0pt; mso-bidi-font-family: Calibri; mso-bidi-theme-font: minor-latin;\"\u003EHappy to read Further\u003Ca href=\"http:\/\/cuda-programming.blogspot.in\/2013\/03\/further-optimization-in-histogram-cuda.html\"\u003E \u003C\/a\u003E\u003C\/span\u003E\u003Cb\u003E\u003Ci\u003E\u003Cu\u003E\u003Cspan style=\"color: #92d050; font-size: 16.0pt; mso-bidi-font-family: Calibri; mso-bidi-theme-font: minor-latin;\"\u003E\u003Ca href=\"http:\/\/cuda-programming.blogspot.in\/2013\/03\/further-optimization-in-histogram-cuda.html\"\u003EPart3\u003C\/a\u003E\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/u\u003E\u003C\/i\u003E\u003C\/b\u003E\u003C\/div\u003E\u003C\/div\u003E"},"link":[{"rel":"replies","type":"application/atom+xml","href":"http:\/\/cuda-programming.blogspot.com\/feeds\/1672655400869719684\/comments\/default","title":"Post Comments"},{"rel":"replies","type":"text/html","href":"http:\/\/cuda-programming.blogspot.com\/2013\/03\/optimizing-histogram-cuda-code.html#comment-form","title":"1 Comments"},{"rel":"edit","type":"application/atom+xml","href":"http:\/\/www.blogger.com\/feeds\/4433261812355873863\/posts\/default\/1672655400869719684"},{"rel":"self","type":"application/atom+xml","href":"http:\/\/www.blogger.com\/feeds\/4433261812355873863\/posts\/default\/1672655400869719684"},{"rel":"alternate","type":"text/html","href":"http:\/\/cuda-programming.blogspot.com\/2013\/03\/optimizing-histogram-cuda-code.html","title":" Optimizing histogram CUDA code | Optimization in histogram in CUDA  "}],"author":[{"name":{"$t":"Nitin Gupta"},"uri":{"$t":"https:\/\/plus.google.com\/111983044603362831032"},"email":{"$t":"noreply@blogger.com"},"gd$image":{"rel":"http://schemas.google.com/g/2005#thumbnail","width":"32","height":"32","src":"\/\/lh5.googleusercontent.com\/-y8J34_QMdZA\/AAAAAAAAAAI\/AAAAAAAAACk\/yRljcINNhbw\/s512-c\/photo.jpg"}}],"media$thumbnail":{"xmlns$media":"http://search.yahoo.com/mrss/","url":"http:\/\/2.bp.blogspot.com\/-K2-3ak_KfOo\/UToKYZZtfrI\/AAAAAAAAAFg\/mucge7bISIA\/s72-c\/Histogram_TH_article_size_20060127.png","height":"72","width":"72"},"thr$total":{"$t":"1"}},{"id":{"$t":"tag:blogger.com,1999:blog-4433261812355873863.post-1356524564026474353"},"published":{"$t":"2013-01-16T08:07:00.000-08:00"},"updated":{"$t":"2013-01-16T08:50:22.138-08:00"},"category":[{"scheme":"http://www.blogger.com/atom/ns#","term":"CUDA Basics"},{"scheme":"http://www.blogger.com/atom/ns#","term":"CUDA programs Level 1.2"}],"title":{"type":"text","$t":"Vector Dot product in CUDA C; CUDA C Program for Vector Dot product"},"content":{"type":"html","$t":"\u003Cdiv dir=\"ltr\" style=\"text-align: left;\" trbidi=\"on\"\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"font-family: Arial, sans-serif; font-size: 13.5pt;\"\u003EWe divide this article in two part\u003Cb\u003E. Part1,\u003C\/b\u003E\u0026nbsp;will describe everything how we come to the code and\u0026nbsp;\u003Cb\u003EPart2\u003C\/b\u003E\u0026nbsp;will list code and more explanation regarding threads and blocks.\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003Cbr \/\u003E\u003Cspan style=\"font-family: Arial, sans-serif; font-size: 13.5pt;\"\u003E\u003Cbr \/\u003E\u003C\/span\u003E\u003Cspan style=\"font-family: Arial, sans-serif; font-size: 13.5pt;\"\u003E\u003Cbr \/\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003C\/div\u003E\u003Cdiv class=\"separator\" style=\"clear: both; text-align: center;\"\u003E\u003Ca href=\"http:\/\/1.bp.blogspot.com\/-X-4FUh3p58M\/UPbOqX7L00I\/AAAAAAAAAs0\/9V5d9CiAzjo\/s1600\/reduction+vector+dot+product.png\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"\u003E\u003Cimg border=\"0\" height=\"247\" src=\"http:\/\/1.bp.blogspot.com\/-X-4FUh3p58M\/UPbOqX7L00I\/AAAAAAAAAs0\/9V5d9CiAzjo\/s400\/reduction+vector+dot+product.png\" width=\"400\" \/\u003E\u003C\/a\u003E\u003C\/div\u003E\u003Cbr \/\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"font-family: Arial, sans-serif; font-size: 12pt;\"\u003EJump to\u0026nbsp;\u003Cb\u003E\u003Ca href=\"http:\/\/cuda-programming.blogspot.in\/2013\/01\/vector-dot-product-in-cuda-c.html\" target=\"_blank\"\u003EPart 1\u003C\/a\u003E\u003C\/b\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cb\u003E\u003Cu\u003E\u003Cspan style=\"font-family: \u0026quot;Arial\u0026quot;,\u0026quot;sans-serif\u0026quot;; font-size: 12.0pt;\"\u003E\u003Cbr \/\u003E\u003C\/span\u003E\u003C\/u\u003E\u003C\/b\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"font-family: Arial, sans-serif; font-size: 12pt;\"\u003ELets Continue our discussion\u0026nbsp;\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cb\u003E\u003Cu\u003E\u003Cspan style=\"font-family: \u0026quot;Arial\u0026quot;,\u0026quot;sans-serif\u0026quot;; font-size: 12.0pt;\"\u003E\u003Cbr \/\u003E\u003C\/span\u003E\u003C\/u\u003E\u003C\/b\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cb\u003E\u003Cu\u003E\u003Cspan style=\"font-family: \u0026quot;Arial\u0026quot;,\u0026quot;sans-serif\u0026quot;; font-size: 12.0pt;\"\u003EPart 2 \u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/u\u003E\u003C\/b\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"font-family: \u0026quot;Arial\u0026quot;,\u0026quot;sans-serif\u0026quot;; font-size: 12.0pt;\"\u003EIn this part we list all about threads and block heuristics. If you know basic about Thread and blocks heuristics, please go through \u003Cb\u003Ethis link\u003C\/b\u003E \u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cb\u003E\u003Cspan style=\"font-family: \u0026quot;Arial\u0026quot;,\u0026quot;sans-serif\u0026quot;; font-size: 12.0pt;\"\u003E\u0026nbsp;\u003C\/span\u003E\u003C\/b\u003E\u003Cb\u003E\u003Cspan style=\"font-family: \u0026quot;Arial\u0026quot;,\u0026quot;sans-serif\u0026quot;; font-size: 12.0pt;\"\u003E\u0026nbsp;\u003C\/span\u003E\u003C\/b\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"font-family: \u0026quot;Arial\u0026quot;,\u0026quot;sans-serif\u0026quot;; font-size: 12.0pt;\"\u003EAfter we have completed a step, we have the same restriction we did after computing all the pairwise products. Before we can read the values we just stored in \u003Cb\u003Ecache[],\u003C\/b\u003E we need to ensure that every thread that needs to write to \u003Cb\u003Ecache[]\u003C\/b\u003E has already done so. The \u003Cb\u003E__syncthreads()\u003C\/b\u003E after the assignment ensures this\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"font-family: \u0026quot;Arial\u0026quot;,\u0026quot;sans-serif\u0026quot;; font-size: 12.0pt;\"\u003Econdition is met.\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"font-family: \u0026quot;Arial\u0026quot;,\u0026quot;sans-serif\u0026quot;; font-size: 12.0pt;\"\u003EAfter termination of this while() loop, each block has but a single number remaining. This number is sitting in the first entry of cache[] and is the sum of every pairwise product the threads in that block computed. We then store this single value to global memory and end our kernel:\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Ctable border=\"1\" cellpadding=\"0\" cellspacing=\"0\" class=\"MsoTableGrid\" style=\"border-collapse: collapse; border: none; mso-border-alt: solid windowtext .5pt; mso-padding-alt: 0in 5.4pt 0in 5.4pt; mso-yfti-tbllook: 1184;\"\u003E \u003Ctbody\u003E\u003Ctr\u003E  \u003Ctd style=\"background: #F2F2F2; border: solid windowtext 1.0pt; mso-background-themecolor: background1; mso-background-themeshade: 242; mso-border-alt: solid windowtext .5pt; padding: 0in 5.4pt 0in 5.4pt; width: 6.65in;\" valign=\"top\" width=\"638\"\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cb\u003E\u003Cspan style=\"font-family: \u0026quot;Arial\u0026quot;,\u0026quot;sans-serif\u0026quot;; font-size: 12.0pt;\"\u003Eif \u003C\/span\u003E\u003C\/b\u003E\u003Cspan style=\"font-family: \u0026quot;Arial\u0026quot;,\u0026quot;sans-serif\u0026quot;; font-size: 12.0pt;\"\u003E(cacheIndex == 0)\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"font-family: \u0026quot;Arial\u0026quot;,\u0026quot;sans-serif\u0026quot;; font-size: 12.0pt;\"\u003E\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; c[blockIdx.x] = cache[0];\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"font-family: \u0026quot;Arial\u0026quot;,\u0026quot;sans-serif\u0026quot;; font-size: 12.0pt;\"\u003E}\u003Cb\u003E\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/b\u003E\u003C\/span\u003E\u003C\/div\u003E\u003C\/td\u003E \u003C\/tr\u003E\u003C\/tbody\u003E\u003C\/table\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"font-family: \u0026quot;Arial\u0026quot;,\u0026quot;sans-serif\u0026quot;; font-size: 12.0pt;\"\u003EWhy do we do this global store only for the thread with \u003Cb\u003EcacheIndex == 0?\u003C\/b\u003EWell, since there is only one number that needs writing to global memory, only a single thread needs to perform this operation.\u0026nbsp; Conceivably, every thread could perform this write and the program would still work, but doing so would create an unnecessarily large amount of memory traffic to write a single value. For simplicity, we chose the thread with index 0, though you could conceivably have chosen any \u003Cb\u003EcacheIndex\u003C\/b\u003E to write \u003Cb\u003Ecache[0]\u003C\/b\u003E to global memory. Finally, since each block will write exactly one value to the global array \u003Cb\u003Ec[],\u003C\/b\u003E we can simply index it by \u003Cb\u003EblockIdx.\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/b\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"font-family: \u0026quot;Arial\u0026quot;,\u0026quot;sans-serif\u0026quot;; font-size: 12.0pt;\"\u003EWe are left with an array c[], each entry of which contains the sum produced by one of the parallel blocks. The last step of the dot product is to sum the entries of c[]. Even though the dot product is not fully computed, we exit the kernel and return control to the host at this point. But why do we return to the host before the computation is complete?\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"font-family: \u0026quot;Arial\u0026quot;,\u0026quot;sans-serif\u0026quot;; font-size: 12.0pt;\"\u003EPreviously, we referred to an operation like a dot product as a \u003Ci\u003Ereduction\u003C\/i\u003E. Roughly speaking, this is because we produce fewer output data elements than we input. In the case of a dot product, we always produce exactly one output, regardless of the size of our input. It turns out that a massively parallel machine like a GPU tends to waste its resources when performing the last steps of a reduction, since\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"font-family: \u0026quot;Arial\u0026quot;,\u0026quot;sans-serif\u0026quot;; font-size: 12.0pt;\"\u003Ethe size of the data set is so small at that point; it is hard to utilize 480 arithmetic units to add 32 numbers!\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"font-family: \u0026quot;Arial\u0026quot;,\u0026quot;sans-serif\u0026quot;; font-size: 12.0pt;\"\u003EFor this reason, we return control to the host and let the CPU finish the final step of the addition, summing the array c[]. In a larger application, the GPU would now be free to start another dot product or work on another large computation.\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"font-family: \u0026quot;Arial\u0026quot;,\u0026quot;sans-serif\u0026quot;; font-size: 12.0pt;\"\u003EHowever, in this example, we are done with the GPU.\u0026nbsp; In explaining this example, we broke with tradition and jumped right into the actual kernel computation. We hope you will have no trouble understanding the\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"font-family: \u0026quot;Arial\u0026quot;,\u0026quot;sans-serif\u0026quot;; font-size: 12.0pt;\"\u003Ebody of main() up to the kernel call, since it is overwhelmingly similar to what we have shown before.\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cb\u003E\u003Cu\u003E\u003Cspan style=\"font-family: \u0026quot;Arial\u0026quot;,\u0026quot;sans-serif\u0026quot;; font-size: 12.0pt;\"\u003EFinal Words; How we calculate blocks for limited number of threadsperblock\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/u\u003E\u003C\/b\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"font-family: \u0026quot;Arial\u0026quot;,\u0026quot;sans-serif\u0026quot;; font-size: 12.0pt;\"\u003EBut what if we are given a very short list and 32 blocks of 256 threads apiece is too many? If we have N data elements, we need only N threads in order to compute our dot product. So in this case, we need the smallest multiple of threadsPerBlock that is greater than or equal to N. We have seen this once before when we were adding vectors. In this case, we get the smallest multiple of threadsPerBlock that is greater than or equal to N by computing (N+(threadsPerBlock-1)) \/ threadsPerBlock. As you may be able to tell, this is actually a fairly common trick in integer math, so it is worth digesting this even if you spend most of your time working outside the CUDA C realm.\u003Cb\u003E\u003Cu\u003E \u003Co:p\u003E\u003C\/o:p\u003E\u003C\/u\u003E\u003C\/b\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"font-family: \u0026quot;Arial\u0026quot;,\u0026quot;sans-serif\u0026quot;; font-size: 12.0pt;\"\u003ETherefore, the number of blocks we launch should be either 32 or (N+(threadsPerBlock-1)) \/ threadsPerBlock, whichever value is smaller.\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Ctable border=\"1\" cellpadding=\"0\" cellspacing=\"0\" class=\"MsoTableGrid\" style=\"border-collapse: collapse; border: none; mso-border-alt: solid windowtext .5pt; mso-padding-alt: 0in 5.4pt 0in 5.4pt; mso-yfti-tbllook: 1184;\"\u003E \u003Ctbody\u003E\u003Ctr\u003E  \u003Ctd style=\"background: #F2F2F2; border: solid windowtext 1.0pt; mso-background-themecolor: background1; mso-background-themeshade: 242; mso-border-alt: solid windowtext .5pt; padding: 0in 5.4pt 0in 5.4pt; width: 6.65in;\" valign=\"top\" width=\"638\"\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cb\u003E\u003Cspan style=\"font-family: \u0026quot;Arial\u0026quot;,\u0026quot;sans-serif\u0026quot;; font-size: 12.0pt;\"\u003Econst int \u003C\/span\u003E\u003C\/b\u003E\u003Cspan style=\"font-family: \u0026quot;Arial\u0026quot;,\u0026quot;sans-serif\u0026quot;; font-size: 12.0pt;\"\u003EblocksPerGrid =\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"font-family: \u0026quot;Arial\u0026quot;,\u0026quot;sans-serif\u0026quot;; font-size: 12.0pt;\"\u003Eimin( 32,   (N+threadsPerBlock-1) \/ threadsPerBlock );\u003Cb\u003E\u003Cu\u003E\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/u\u003E\u003C\/b\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003C\/td\u003E \u003C\/tr\u003E\u003C\/tbody\u003E\u003C\/table\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cb\u003E\u003Cspan style=\"font-family: \u0026quot;Arial\u0026quot;,\u0026quot;sans-serif\u0026quot;; font-size: 12.0pt;\"\u003EIf you found all our explanatory interruptions bothersome, here is the entire source listing, sans commentary:\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/b\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Ctable border=\"0\" cellpadding=\"0\" cellspacing=\"0\" class=\"MsoNormalTable\" style=\"border-collapse: collapse; mso-padding-alt: 0in 0in 0in 0in; mso-yfti-tbllook: 1184;\"\u003E \u003Ctbody\u003E\u003Ctr\u003E  \u003Ctd style=\"background: #F2F2F2; border: solid windowtext 1.0pt; padding: 0in 5.4pt 0in 5.4pt; width: 6.65in;\" valign=\"top\" width=\"638\"\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"color: blue; font-family: \u0026quot;Arial\u0026quot;,\u0026quot;sans-serif\u0026quot;; font-size: 12.0pt; mso-fareast-font-family: \u0026quot;Times New Roman\u0026quot;;\"\u003E#include\u003C\/span\u003E\u003Cspan style=\"font-family: \u0026quot;Arial\u0026quot;,\u0026quot;sans-serif\u0026quot;; font-size: 12.0pt; mso-fareast-font-family: \u0026quot;Times New Roman\u0026quot;;\"\u003E\u0026nbsp;\u003Cspan style=\"color: #a31515;\"\u003E\u0026lt;iostream\u0026gt;\u003C\/span\u003E\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"color: blue; font-family: \u0026quot;Arial\u0026quot;,\u0026quot;sans-serif\u0026quot;; font-size: 12.0pt; mso-fareast-font-family: \u0026quot;Times New Roman\u0026quot;;\"\u003Eusing\u003C\/span\u003E\u003Cspan style=\"font-family: \u0026quot;Arial\u0026quot;,\u0026quot;sans-serif\u0026quot;; font-size: 12.0pt; mso-fareast-font-family: \u0026quot;Times New Roman\u0026quot;;\"\u003E\u0026nbsp;\u003Cspan style=\"color: blue;\"\u003Enamespace\u003C\/span\u003E\u0026nbsp;std ;\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"color: blue; font-family: \u0026quot;Arial\u0026quot;,\u0026quot;sans-serif\u0026quot;; font-size: 12.0pt; mso-fareast-font-family: \u0026quot;Times New Roman\u0026quot;;\"\u003E#define\u003C\/span\u003E\u003Cspan style=\"font-family: \u0026quot;Arial\u0026quot;,\u0026quot;sans-serif\u0026quot;; font-size: 12.0pt; mso-fareast-font-family: \u0026quot;Times New Roman\u0026quot;;\"\u003E\u0026nbsp;min(x,y) (x\u0026gt;y?x:y)\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"color: blue; font-family: \u0026quot;Arial\u0026quot;,\u0026quot;sans-serif\u0026quot;; font-size: 12.0pt; mso-fareast-font-family: \u0026quot;Times New Roman\u0026quot;;\"\u003E#define\u003C\/span\u003E\u003Cspan style=\"font-family: \u0026quot;Arial\u0026quot;,\u0026quot;sans-serif\u0026quot;; font-size: 12.0pt; mso-fareast-font-family: \u0026quot;Times New Roman\u0026quot;;\"\u003E\u0026nbsp;N 33*1024\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"color: blue; font-family: \u0026quot;Arial\u0026quot;,\u0026quot;sans-serif\u0026quot;; font-size: 12.0pt; mso-fareast-font-family: \u0026quot;Times New Roman\u0026quot;;\"\u003E#define\u003C\/span\u003E\u003Cspan style=\"font-family: \u0026quot;Arial\u0026quot;,\u0026quot;sans-serif\u0026quot;; font-size: 12.0pt; mso-fareast-font-family: \u0026quot;Times New Roman\u0026quot;;\"\u003E\u0026nbsp;ThreadPerBlock 256\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"color: green; font-family: \u0026quot;Arial\u0026quot;,\u0026quot;sans-serif\u0026quot;; font-size: 12.0pt; mso-fareast-font-family: \u0026quot;Times New Roman\u0026quot;;\"\u003E\/\/smallest multiple of   threadsPerBlock that is greater than or equal to N\u003C\/span\u003E\u003Cspan style=\"font-family: \u0026quot;Arial\u0026quot;,\u0026quot;sans-serif\u0026quot;; font-size: 12.0pt; mso-fareast-font-family: \u0026quot;Times New Roman\u0026quot;;\"\u003E\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"color: blue; font-family: \u0026quot;Arial\u0026quot;,\u0026quot;sans-serif\u0026quot;; font-size: 12.0pt; mso-fareast-font-family: \u0026quot;Times New Roman\u0026quot;;\"\u003E#define\u003C\/span\u003E\u003Cspan style=\"font-family: \u0026quot;Arial\u0026quot;,\u0026quot;sans-serif\u0026quot;; font-size: 12.0pt; mso-fareast-font-family: \u0026quot;Times New Roman\u0026quot;;\"\u003E\u0026nbsp;blockPerGrid min(32 , (N+ThreadPerBlock-1) \/   ThreadPerBlock )\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"font-family: \u0026quot;Arial\u0026quot;,\u0026quot;sans-serif\u0026quot;; font-size: 12.0pt; mso-fareast-font-family: \u0026quot;Times New Roman\u0026quot;;\"\u003E__global__\u0026nbsp;\u003Cspan style=\"color: blue;\"\u003Evoid\u003C\/span\u003E\u0026nbsp;Vector_Dot_Product (\u0026nbsp;\u003Cspan style=\"color: blue;\"\u003Econst\u003C\/span\u003E\u0026nbsp;\u003Cspan style=\"color: blue;\"\u003Efloat\u003C\/span\u003E\u0026nbsp;*V1   ,\u0026nbsp;\u003Cspan style=\"color: blue;\"\u003Econst\u003C\/span\u003E\u0026nbsp;\u003Cspan style=\"color: blue;\"\u003Efloat\u003C\/span\u003E\u0026nbsp;*V2   , \u003Cspan style=\"color: blue;\"\u003Efloat\u003C\/span\u003E\u0026nbsp;*V3\u0026nbsp;\u0026nbsp; )\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"font-family: \u0026quot;Arial\u0026quot;,\u0026quot;sans-serif\u0026quot;; font-size: 12.0pt; mso-fareast-font-family: \u0026quot;Times New Roman\u0026quot;;\"\u003E{\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"font-family: \u0026quot;Arial\u0026quot;,\u0026quot;sans-serif\u0026quot;; font-size: 12.0pt; mso-fareast-font-family: \u0026quot;Times New Roman\u0026quot;;\"\u003E\u0026nbsp;__shared__\u0026nbsp;\u003Cspan style=\"color: blue;\"\u003Efloat\u003C\/span\u003E\u0026nbsp;chache[ThreadPerBlock] ;\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"font-family: \u0026quot;Arial\u0026quot;,\u0026quot;sans-serif\u0026quot;; font-size: 12.0pt; mso-fareast-font-family: \u0026quot;Times New Roman\u0026quot;;\"\u003E\u0026nbsp;\u0026nbsp;\u0026nbsp; \u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"font-family: \u0026quot;Arial\u0026quot;,\u0026quot;sans-serif\u0026quot;; font-size: 12.0pt; mso-fareast-font-family: \u0026quot;Times New Roman\u0026quot;;\"\u003E\u0026nbsp;\u0026nbsp;\u0026nbsp;   \u003Cspan style=\"color: blue;\"\u003Efloat\u003C\/span\u003E\u0026nbsp;temp ;\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"font-family: \u0026quot;Arial\u0026quot;,\u0026quot;sans-serif\u0026quot;; font-size: 12.0pt; mso-fareast-font-family: \u0026quot;Times New Roman\u0026quot;;\"\u003E\u0026nbsp;\u003Cspan style=\"color: blue;\"\u003Econst\u003C\/span\u003E\u0026nbsp;\u003Cspan style=\"color: blue;\"\u003Eunsigned\u003C\/span\u003E\u0026nbsp;\u003Cspan style=\"color: blue;\"\u003Eint\u003C\/span\u003E\u0026nbsp;tid   = blockDim.x * blockIdx.x + threadIdx.x ;\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"font-family: \u0026quot;Arial\u0026quot;,\u0026quot;sans-serif\u0026quot;; font-size: 12.0pt; mso-fareast-font-family: \u0026quot;Times New Roman\u0026quot;;\"\u003E\u0026nbsp;\u003Cspan style=\"color: blue;\"\u003Econst\u003C\/span\u003E\u0026nbsp;\u003Cspan style=\"color: blue;\"\u003Eunsigned\u003C\/span\u003E\u0026nbsp;\u003Cspan style=\"color: blue;\"\u003Eint\u003C\/span\u003E\u0026nbsp;chacheindex   = threadIdx.x ;\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"font-family: \u0026quot;Arial\u0026quot;,\u0026quot;sans-serif\u0026quot;; font-size: 12.0pt; mso-fareast-font-family: \u0026quot;Times New Roman\u0026quot;;\"\u003E\u0026nbsp;\u003Cspan style=\"color: blue;\"\u003Ewhile\u003C\/span\u003E\u0026nbsp;(   tid \u0026lt; N )\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"font-family: \u0026quot;Arial\u0026quot;,\u0026quot;sans-serif\u0026quot;; font-size: 12.0pt; mso-fareast-font-family: \u0026quot;Times New Roman\u0026quot;;\"\u003E\u0026nbsp;{\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"font-family: \u0026quot;Arial\u0026quot;,\u0026quot;sans-serif\u0026quot;; font-size: 12.0pt; mso-fareast-font-family: \u0026quot;Times New Roman\u0026quot;;\"\u003E\u0026nbsp; \u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;temp += V1[tid] * V2[tid] ;\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"font-family: \u0026quot;Arial\u0026quot;,\u0026quot;sans-serif\u0026quot;; font-size: 12.0pt; mso-fareast-font-family: \u0026quot;Times New Roman\u0026quot;;\"\u003E\u0026nbsp; \u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"font-family: \u0026quot;Arial\u0026quot;,\u0026quot;sans-serif\u0026quot;; font-size: 12.0pt; mso-fareast-font-family: \u0026quot;Times New Roman\u0026quot;;\"\u003E\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; tid += blockDim.x * gridDim.x ;\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"font-family: \u0026quot;Arial\u0026quot;,\u0026quot;sans-serif\u0026quot;; font-size: 12.0pt; mso-fareast-font-family: \u0026quot;Times New Roman\u0026quot;;\"\u003E\u0026nbsp;}\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"font-family: \u0026quot;Arial\u0026quot;,\u0026quot;sans-serif\u0026quot;; font-size: 12.0pt; mso-fareast-font-family: \u0026quot;Times New Roman\u0026quot;;\"\u003E\u0026nbsp; chache[chacheindex] = temp   ;\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"font-family: \u0026quot;Arial\u0026quot;,\u0026quot;sans-serif\u0026quot;; font-size: 12.0pt; mso-fareast-font-family: \u0026quot;Times New Roman\u0026quot;;\"\u003E\u0026nbsp;__synchthreads () ;\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"font-family: \u0026quot;Arial\u0026quot;,\u0026quot;sans-serif\u0026quot;; font-size: 12.0pt; mso-fareast-font-family: \u0026quot;Times New Roman\u0026quot;;\"\u003E\u0026nbsp;\u003Cspan style=\"color: blue;\"\u003Eint\u003C\/span\u003E\u0026nbsp;i\u0026nbsp;   = blockDim.x \/ 2 ;\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"color: blue; font-family: \u0026quot;Arial\u0026quot;,\u0026quot;sans-serif\u0026quot;; font-size: 12.0pt; mso-fareast-font-family: \u0026quot;Times New Roman\u0026quot;;\"\u003Ewhile\u003C\/span\u003E\u003Cspan style=\"font-family: \u0026quot;Arial\u0026quot;,\u0026quot;sans-serif\u0026quot;; font-size: 12.0pt; mso-fareast-font-family: \u0026quot;Times New Roman\u0026quot;;\"\u003E\u0026nbsp;( i!=0 )\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"font-family: \u0026quot;Arial\u0026quot;,\u0026quot;sans-serif\u0026quot;; font-size: 12.0pt; mso-fareast-font-family: \u0026quot;Times New Roman\u0026quot;;\"\u003E\u0026nbsp;{\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"font-family: \u0026quot;Arial\u0026quot;,\u0026quot;sans-serif\u0026quot;; font-size: 12.0pt; mso-fareast-font-family: \u0026quot;Times New Roman\u0026quot;;\"\u003E\u0026nbsp;\u0026nbsp;\u003Cspan style=\"color: blue;\"\u003Eif\u003C\/span\u003E\u0026nbsp;( chacheindex \u0026lt; i )\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"font-family: \u0026quot;Arial\u0026quot;,\u0026quot;sans-serif\u0026quot;; font-size: 12.0pt; mso-fareast-font-family: \u0026quot;Times New Roman\u0026quot;;\"\u003E\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; \u0026nbsp; chache[chacheindex] += chache   [chacheindex + i] ;\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"font-family: \u0026quot;Arial\u0026quot;,\u0026quot;sans-serif\u0026quot;; font-size: 12.0pt; mso-fareast-font-family: \u0026quot;Times New Roman\u0026quot;;\"\u003E\u0026nbsp; \u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"font-family: \u0026quot;Arial\u0026quot;,\u0026quot;sans-serif\u0026quot;; font-size: 12.0pt; mso-fareast-font-family: \u0026quot;Times New Roman\u0026quot;;\"\u003E__synchthreads () ;\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"font-family: \u0026quot;Arial\u0026quot;,\u0026quot;sans-serif\u0026quot;; font-size: 12.0pt; mso-fareast-font-family: \u0026quot;Times New Roman\u0026quot;;\"\u003E\u0026nbsp;\u0026nbsp; i\/=2 ;\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"font-family: \u0026quot;Arial\u0026quot;,\u0026quot;sans-serif\u0026quot;; font-size: 12.0pt; mso-fareast-font-family: \u0026quot;Times New Roman\u0026quot;;\"\u003E\u0026nbsp;}\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"font-family: \u0026quot;Arial\u0026quot;,\u0026quot;sans-serif\u0026quot;; font-size: 12.0pt; mso-fareast-font-family: \u0026quot;Times New Roman\u0026quot;;\"\u003E\u0026nbsp;\u0026nbsp;\u003Cspan style=\"color: blue;\"\u003Eif\u003C\/span\u003E\u0026nbsp;( chacheindex == 0 )\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"font-family: \u0026quot;Arial\u0026quot;,\u0026quot;sans-serif\u0026quot;; font-size: 12.0pt; mso-fareast-font-family: \u0026quot;Times New Roman\u0026quot;;\"\u003E\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; \u0026nbsp; V3[blockIdx.x] = chache [0] ;\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"font-family: \u0026quot;Arial\u0026quot;,\u0026quot;sans-serif\u0026quot;; font-size: 12.0pt; mso-fareast-font-family: \u0026quot;Times New Roman\u0026quot;;\"\u003E}\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"color: blue; font-family: \u0026quot;Arial\u0026quot;,\u0026quot;sans-serif\u0026quot;; font-size: 12.0pt; mso-fareast-font-family: \u0026quot;Times New Roman\u0026quot;;\"\u003Eint\u003C\/span\u003E\u003Cspan style=\"font-family: \u0026quot;Arial\u0026quot;,\u0026quot;sans-serif\u0026quot;; font-size: 12.0pt; mso-fareast-font-family: \u0026quot;Times New Roman\u0026quot;;\"\u003E\u0026nbsp;main (\u0026nbsp;\u003Cspan style=\"color: blue;\"\u003Eint\u003C\/span\u003E\u0026nbsp;argv   ,\u0026nbsp;\u003Cspan style=\"color: blue;\"\u003Echar\u003C\/span\u003E\u0026nbsp;*argc )\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"font-family: \u0026quot;Arial\u0026quot;,\u0026quot;sans-serif\u0026quot;; font-size: 12.0pt; mso-fareast-font-family: \u0026quot;Times New Roman\u0026quot;;\"\u003E{\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"font-family: \u0026quot;Arial\u0026quot;,\u0026quot;sans-serif\u0026quot;; font-size: 12.0pt; mso-fareast-font-family: \u0026quot;Times New Roman\u0026quot;;\"\u003E\u0026nbsp;\u0026nbsp;\u0026nbsp; \u003Cspan style=\"color: blue;\"\u003Efloat\u003C\/span\u003E\u0026nbsp;*V1_H   , *V2_H , *V3_H ;\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"font-family: \u0026quot;Arial\u0026quot;,\u0026quot;sans-serif\u0026quot;; font-size: 12.0pt; mso-fareast-font-family: \u0026quot;Times New Roman\u0026quot;;\"\u003E\u0026nbsp;\u0026nbsp;\u0026nbsp; \u003Cspan style=\"color: blue;\"\u003Efloat\u003C\/span\u003E\u0026nbsp;*V1_D   , *V2_D , *V3_D ;\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"font-family: \u0026quot;Arial\u0026quot;,\u0026quot;sans-serif\u0026quot;; font-size: 12.0pt; mso-fareast-font-family: \u0026quot;Times New Roman\u0026quot;;\"\u003E\u0026nbsp; V1_H =\u0026nbsp;\u003Cspan style=\"color: blue;\"\u003Enew\u003C\/span\u003E\u0026nbsp;\u003Cspan style=\"color: blue;\"\u003Efloat\u003C\/span\u003E\u0026nbsp;[N]\u0026nbsp;   ;\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"font-family: \u0026quot;Arial\u0026quot;,\u0026quot;sans-serif\u0026quot;; font-size: 12.0pt; mso-fareast-font-family: \u0026quot;Times New Roman\u0026quot;;\"\u003E\u0026nbsp; V2_H =\u0026nbsp;\u003Cspan style=\"color: blue;\"\u003Enew\u003C\/span\u003E\u0026nbsp;\u003Cspan style=\"color: blue;\"\u003Efloat\u003C\/span\u003E\u0026nbsp;[N]\u0026nbsp;   ;\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"font-family: \u0026quot;Arial\u0026quot;,\u0026quot;sans-serif\u0026quot;; font-size: 12.0pt; mso-fareast-font-family: \u0026quot;Times New Roman\u0026quot;;\"\u003E\u0026nbsp; V3_H =\u0026nbsp;\u003Cspan style=\"color: blue;\"\u003Enew\u003C\/span\u003E\u0026nbsp;\u003Cspan style=\"color: blue;\"\u003Efloat\u003C\/span\u003E\u0026nbsp;[blockPerGrid]\u0026nbsp;   ;\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"font-family: \u0026quot;Arial\u0026quot;,\u0026quot;sans-serif\u0026quot;; font-size: 12.0pt; mso-fareast-font-family: \u0026quot;Times New Roman\u0026quot;;\"\u003E\u0026nbsp; cudaMalloc ( (\u003Cspan style=\"color: blue;\"\u003Evoid\u003C\/span\u003E\u0026nbsp;**)\u0026amp;V1_D , N*\u003Cspan style=\"color: blue;\"\u003Esizeof\u003C\/span\u003E(\u003Cspan style=\"color: blue;\"\u003Efloat\u003C\/span\u003E)) ;\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"font-family: \u0026quot;Arial\u0026quot;,\u0026quot;sans-serif\u0026quot;; font-size: 12.0pt; mso-fareast-font-family: \u0026quot;Times New Roman\u0026quot;;\"\u003E\u0026nbsp; \u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"font-family: \u0026quot;Arial\u0026quot;,\u0026quot;sans-serif\u0026quot;; font-size: 12.0pt; mso-fareast-font-family: \u0026quot;Times New Roman\u0026quot;;\"\u003E\u0026nbsp;cudaMalloc ( (\u003Cspan style=\"color: blue;\"\u003Evoid\u003C\/span\u003E\u0026nbsp;**)\u0026amp;V2_D   , N*\u003Cspan style=\"color: blue;\"\u003Esizeof\u003C\/span\u003E(\u003Cspan style=\"color: blue;\"\u003Efloat\u003C\/span\u003E))   ;\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"font-family: \u0026quot;Arial\u0026quot;,\u0026quot;sans-serif\u0026quot;; font-size: 12.0pt; mso-fareast-font-family: \u0026quot;Times New Roman\u0026quot;;\"\u003E\u0026nbsp;cudaMalloc ( (\u003Cspan style=\"color: blue;\"\u003Evoid\u003C\/span\u003E\u0026nbsp;**)\u0026amp;V3_D   , blockPerGrid*\u003Cspan style=\"color: blue;\"\u003Esizeof\u003C\/span\u003E(\u003Cspan style=\"color: blue;\"\u003Efloat\u003C\/span\u003E)) ;\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"font-family: \u0026quot;Arial\u0026quot;,\u0026quot;sans-serif\u0026quot;; font-size: 12.0pt; mso-fareast-font-family: \u0026quot;Times New Roman\u0026quot;;\"\u003E\u0026nbsp;\u0026nbsp;\u003Cspan style=\"color: blue;\"\u003Efor\u003C\/span\u003E\u0026nbsp;(\u0026nbsp;\u003Cspan style=\"color: blue;\"\u003Eint\u003C\/span\u003E\u0026nbsp;i   = 0 ; i\u0026lt;N ; i++ )\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"font-family: \u0026quot;Arial\u0026quot;,\u0026quot;sans-serif\u0026quot;; font-size: 12.0pt; mso-fareast-font-family: \u0026quot;Times New Roman\u0026quot;;\"\u003E\u0026nbsp;{\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"font-family: \u0026quot;Arial\u0026quot;,\u0026quot;sans-serif\u0026quot;; font-size: 12.0pt; mso-fareast-font-family: \u0026quot;Times New Roman\u0026quot;;\"\u003E\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;   V1_H[i] = i ;\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"font-family: \u0026quot;Arial\u0026quot;,\u0026quot;sans-serif\u0026quot;; font-size: 12.0pt; mso-fareast-font-family: \u0026quot;Times New Roman\u0026quot;;\"\u003E\u0026nbsp; \u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;V2_H[i] = i*2 ;\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"font-family: \u0026quot;Arial\u0026quot;,\u0026quot;sans-serif\u0026quot;; font-size: 12.0pt; mso-fareast-font-family: \u0026quot;Times New Roman\u0026quot;;\"\u003E\u0026nbsp;}\u0026nbsp;\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"font-family: \u0026quot;Arial\u0026quot;,\u0026quot;sans-serif\u0026quot;; font-size: 12.0pt; mso-fareast-font-family: \u0026quot;Times New Roman\u0026quot;;\"\u003E\u0026nbsp;cudaMemcpy ( V1_D , V1_H ,   N*\u003Cspan style=\"color: blue;\"\u003Esizeof\u003C\/span\u003E(\u003Cspan style=\"color: blue;\"\u003Efloat\u003C\/span\u003E)   , cudaMemcpyHostToDevice ) ;\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"font-family: \u0026quot;Arial\u0026quot;,\u0026quot;sans-serif\u0026quot;; font-size: 12.0pt; mso-fareast-font-family: \u0026quot;Times New Roman\u0026quot;;\"\u003E\u0026nbsp;cudaMemcpy ( V2_D , V2_H , N*\u003Cspan style=\"color: blue;\"\u003Esizeof\u003C\/span\u003E(\u003Cspan style=\"color: blue;\"\u003Efloat\u003C\/span\u003E) ,   cudaMemcpyHostToDevice ) ;\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"font-family: \u0026quot;Arial\u0026quot;,\u0026quot;sans-serif\u0026quot;; font-size: 12.0pt; mso-fareast-font-family: \u0026quot;Times New Roman\u0026quot;;\"\u003E\u0026nbsp;Vector_Dot_Product   \u0026lt;\u0026lt;\u0026lt;blockPerGrid , ThreadPerBlock \u0026gt;\u0026gt;\u0026gt; (V1_D , V2_D , V3_D )   ;\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"font-family: \u0026quot;Arial\u0026quot;,\u0026quot;sans-serif\u0026quot;; font-size: 12.0pt; mso-fareast-font-family: \u0026quot;Times New Roman\u0026quot;;\"\u003E\u0026nbsp;cudaMemcpy ( V3_H , V3_D , N*\u003Cspan style=\"color: blue;\"\u003Esizeof\u003C\/span\u003E(\u003Cspan style=\"color: blue;\"\u003Efloat\u003C\/span\u003E) ,   cudaMemcpyDeviceToHost ) ;\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"font-family: \u0026quot;Arial\u0026quot;,\u0026quot;sans-serif\u0026quot;; font-size: 12.0pt; mso-fareast-font-family: \u0026quot;Times New Roman\u0026quot;;\"\u003E\u0026nbsp;cout \u0026lt;\u0026lt;\u003Cspan style=\"color: #a31515;\"\u003E\"\\n Vector Dot Prodcut is : \"\u003C\/span\u003E\u0026nbsp;;\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"color: blue; font-family: \u0026quot;Arial\u0026quot;,\u0026quot;sans-serif\u0026quot;; font-size: 12.0pt; mso-fareast-font-family: \u0026quot;Times New Roman\u0026quot;;\"\u003E\u0026nbsp;float\u003C\/span\u003E\u003Cspan style=\"font-family: \u0026quot;Arial\u0026quot;,\u0026quot;sans-serif\u0026quot;; font-size: 12.0pt; mso-fareast-font-family: \u0026quot;Times New Roman\u0026quot;;\"\u003E\u0026nbsp;sum   = 0 ;\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"font-family: \u0026quot;Arial\u0026quot;,\u0026quot;sans-serif\u0026quot;; font-size: 12.0pt; mso-fareast-font-family: \u0026quot;Times New Roman\u0026quot;;\"\u003E\u0026nbsp;\u003Cspan style=\"color: blue;\"\u003Efor\u003C\/span\u003E\u0026nbsp;(\u0026nbsp;\u003Cspan style=\"color: blue;\"\u003Eint\u003C\/span\u003E\u0026nbsp;i = 0 ; i\u0026lt;blockPerGrid ; i++ )\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"font-family: \u0026quot;Arial\u0026quot;,\u0026quot;sans-serif\u0026quot;; font-size: 12.0pt; mso-fareast-font-family: \u0026quot;Times New Roman\u0026quot;;\"\u003E\u0026nbsp;\u0026nbsp; \u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;sum+=V3_H[i] ;\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"font-family: \u0026quot;Arial\u0026quot;,\u0026quot;sans-serif\u0026quot;; font-size: 12.0pt; mso-fareast-font-family: \u0026quot;Times New Roman\u0026quot;;\"\u003E\u0026nbsp;\u0026nbsp; cout \u0026lt;\u0026lt; sum \u0026lt;\u0026lt; endl ;\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"font-family: \u0026quot;Arial\u0026quot;,\u0026quot;sans-serif\u0026quot;; font-size: 12.0pt; mso-fareast-font-family: \u0026quot;Times New Roman\u0026quot;;\"\u003E\u0026nbsp; cudaFree ( V1_D) ;\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"font-family: \u0026quot;Arial\u0026quot;,\u0026quot;sans-serif\u0026quot;; font-size: 12.0pt; mso-fareast-font-family: \u0026quot;Times New Roman\u0026quot;;\"\u003E\u0026nbsp; cudaFree ( V2_D) ;\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"font-family: \u0026quot;Arial\u0026quot;,\u0026quot;sans-serif\u0026quot;; font-size: 12.0pt; mso-fareast-font-family: \u0026quot;Times New Roman\u0026quot;;\"\u003E\u0026nbsp; cudaFree ( V3_D) ;\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"font-family: \u0026quot;Arial\u0026quot;,\u0026quot;sans-serif\u0026quot;; font-size: 12.0pt; mso-fareast-font-family: \u0026quot;Times New Roman\u0026quot;;\"\u003E\u0026nbsp;\u0026nbsp;\u003Cspan style=\"color: blue;\"\u003Edelete\u003C\/span\u003E\u0026nbsp;[] V1_H ;\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"font-family: \u0026quot;Arial\u0026quot;,\u0026quot;sans-serif\u0026quot;; font-size: 12.0pt; mso-fareast-font-family: \u0026quot;Times New Roman\u0026quot;;\"\u003E\u0026nbsp; \u003Cspan style=\"color: blue;\"\u003Edelete\u003C\/span\u003E\u0026nbsp;[]   V2_H ;\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"font-family: \u0026quot;Arial\u0026quot;,\u0026quot;sans-serif\u0026quot;; font-size: 12.0pt; mso-fareast-font-family: \u0026quot;Times New Roman\u0026quot;;\"\u003E\u0026nbsp; \u003Cspan style=\"color: blue;\"\u003Edelete\u003C\/span\u003E\u0026nbsp;[]   V3_H ;\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"font-family: \u0026quot;Arial\u0026quot;,\u0026quot;sans-serif\u0026quot;; font-size: 12.0pt; mso-fareast-font-family: \u0026quot;Times New Roman\u0026quot;;\"\u003E}\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/div\u003E\u003C\/td\u003E \u003C\/tr\u003E\u003C\/tbody\u003E\u003C\/table\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"font-family: Arial, sans-serif; font-size: 13.5pt;\"\u003EGot Questions?\u0026nbsp;\u003C\/span\u003E\u003Cspan style=\"font-family: 'Times New Roman', serif; font-size: 13.5pt;\"\u003E\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"font-family: Arial, sans-serif; font-size: 13.5pt;\"\u003EFeel free to ask me any question because I'd be happy to walk you through step by step!\u0026nbsp;\u003C\/span\u003E\u003Cspan style=\"font-family: 'Times New Roman', serif; font-size: 13.5pt;\"\u003E\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"font-family: Arial, sans-serif; font-size: 13.5pt;\"\u003E\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cbr \/\u003EReferences\u0026nbsp;\u003C\/span\u003E\u003Cspan style=\"font-family: 'Times New Roman', serif; font-size: 13.5pt;\"\u003E\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Ca href=\"http:\/\/en.wikipedia.org\/wiki\/Dot_product\"\u003E\u003Cspan style=\"color: blue; font-family: \u0026quot;Arial\u0026quot;,\u0026quot;sans-serif\u0026quot;; font-size: 12.0pt; mso-fareast-font-family: \u0026quot;Times New Roman\u0026quot;;\"\u003EWikipedia\u003C\/span\u003E\u003C\/a\u003E\u003Cspan style=\"font-family: Arial, sans-serif; font-size: 12pt;\"\u003E\u0026nbsp; \u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Ca href=\"http:\/\/hyperphysics.phy-astr.gsu.edu\/hbase\/vsca.html\"\u003E\u003Cspan style=\"color: blue; font-family: \u0026quot;Arial\u0026quot;,\u0026quot;sans-serif\u0026quot;; font-size: 12.0pt; mso-fareast-font-family: \u0026quot;Times New Roman\u0026quot;;\"\u003Ehyperphysic\u003C\/span\u003E\u003C\/a\u003E\u003Ca href=\"http:\/\/hyperphysics.phy-astr.gsu.edu\/hbase\/vsca.html\"\u003E\u003Cspan style=\"color: blue; font-family: \u0026quot;Arial\u0026quot;,\u0026quot;sans-serif\u0026quot;; font-size: 12.0pt; mso-fareast-font-family: \u0026quot;Times New Roman\u0026quot;;\"\u003E\u0026nbsp;\u003C\/span\u003E\u003C\/a\u003E\u003Cu\u003E\u003Cspan style=\"color: blue; font-family: \u0026quot;Arial\u0026quot;,\u0026quot;sans-serif\u0026quot;; font-size: 12.0pt; mso-fareast-font-family: \u0026quot;Times New Roman\u0026quot;;\"\u003E\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/u\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Ca href=\"http:\/\/www.algebralab.org\/lessons\/lesson.aspx?file=Trigonometry_TrigVectorDotProd.xml\"\u003E\u003Cspan style=\"color: blue; font-family: \u0026quot;Arial\u0026quot;,\u0026quot;sans-serif\u0026quot;; font-size: 12.0pt; mso-fareast-font-family: \u0026quot;Times New Roman\u0026quot;;\"\u003Ealgebralab\u003C\/span\u003E\u003C\/a\u003E\u003Cspan style=\"font-family: 'Times New Roman', serif; font-size: 12pt;\"\u003E\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Ca href=\"http:\/\/cuda-programming.blogspot.in\/2012\/12\/cuda-c-programming-guide.html\"\u003E\u003Cspan style=\"background: white; border: none windowtext 1.0pt; color: #f43a40; font-family: \u0026quot;Arial\u0026quot;,\u0026quot;sans-serif\u0026quot;; font-size: 12.0pt; mso-border-alt: none windowtext 0in; mso-fareast-font-family: \u0026quot;Times New Roman\u0026quot;; padding: 0in;\"\u003ECUDA C Programming Guide\u003C\/span\u003E\u003C\/a\u003E\u003Cspan style=\"font-family: 'Times New Roman', serif; font-size: 12pt;\"\u003E\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Ca href=\"http:\/\/docs.nvidia.com\/cuda\/index.html\"\u003E\u003Cspan style=\"background: white; border: none windowtext 1.0pt; color: #d71a21; font-family: \u0026quot;Arial\u0026quot;,\u0026quot;sans-serif\u0026quot;; font-size: 12.0pt; mso-border-alt: none windowtext 0in; mso-fareast-font-family: \u0026quot;Times New Roman\u0026quot;; padding: 0in;\"\u003ECUDA; Nvidia\u003C\/span\u003E\u003C\/a\u003E\u003Cspan style=\"font-family: 'Times New Roman', serif; font-size: 12pt;\"\u003E\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"font-family: Arial, sans-serif; font-size: 13.5pt;\"\u003E\u003Cbr \/\u003E\u003Cbr \/\u003EFor Contact us….. Click on Contact us Tab\u003C\/span\u003E\u003Cspan style=\"font-family: 'Times New Roman', serif; font-size: 13.5pt;\"\u003E\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/div\u003E\u003C\/div\u003E"},"link":[{"rel":"replies","type":"application/atom+xml","href":"http:\/\/cuda-programming.blogspot.com\/feeds\/1356524564026474353\/comments\/default","title":"Post Comments"},{"rel":"replies","type":"text/html","href":"http:\/\/cuda-programming.blogspot.com\/2013\/01\/vector-dot-product-in-cuda-c-cuda-c.html#comment-form","title":"3 Comments"},{"rel":"edit","type":"application/atom+xml","href":"http:\/\/www.blogger.com\/feeds\/4433261812355873863\/posts\/default\/1356524564026474353"},{"rel":"self","type":"application/atom+xml","href":"http:\/\/www.blogger.com\/feeds\/4433261812355873863\/posts\/default\/1356524564026474353"},{"rel":"alternate","type":"text/html","href":"http:\/\/cuda-programming.blogspot.com\/2013\/01\/vector-dot-product-in-cuda-c-cuda-c.html","title":"Vector Dot product in CUDA C; CUDA C Program for Vector Dot product"}],"author":[{"name":{"$t":"Nitin Gupta"},"uri":{"$t":"https:\/\/plus.google.com\/118135070601300565447"},"email":{"$t":"noreply@blogger.com"},"gd$image":{"rel":"http://schemas.google.com/g/2005#thumbnail","width":"16","height":"16","src":"http:\/\/img2.blogblog.com\/img\/b16-rounded.gif"}}],"media$thumbnail":{"xmlns$media":"http://search.yahoo.com/mrss/","url":"http:\/\/1.bp.blogspot.com\/-X-4FUh3p58M\/UPbOqX7L00I\/AAAAAAAAAs0\/9V5d9CiAzjo\/s72-c\/reduction+vector+dot+product.png","height":"72","width":"72"},"thr$total":{"$t":"3"}},{"id":{"$t":"tag:blogger.com,1999:blog-4433261812355873863.post-5248587424313715106"},"published":{"$t":"2013-01-11T07:25:00.000-08:00"},"updated":{"$t":"2013-01-16T08:23:33.685-08:00"},"category":[{"scheme":"http://www.blogger.com/atom/ns#","term":"CUDA Basics"},{"scheme":"http://www.blogger.com/atom/ns#","term":"CUDA programs Level 1.2"}],"title":{"type":"text","$t":"Vector Dot product in CUDA C; CUDA C Program for Vector Dot product"},"content":{"type":"html","$t":"\u003Cdiv dir=\"ltr\" style=\"text-align: left;\" trbidi=\"on\"\u003E\u003Cbr \/\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"font-family: Arial, sans-serif; font-size: 13.5pt;\"\u003EBefore start reading, one should know everything about Vector Dot Product. So, I Prefer you guys please go through any of the link so you better understands code\u0026nbsp;\u003C\/span\u003E\u003Cspan style=\"font-family: 'Times New Roman', serif; font-size: 13.5pt;\"\u003E\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"font-family: Arial, sans-serif; font-size: 13.5pt;\"\u003EReference:\u0026nbsp;\u003C\/span\u003E\u003Cspan style=\"font-family: 'Times New Roman', serif; font-size: 13.5pt;\"\u003E\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Ca href=\"http:\/\/en.wikipedia.org\/wiki\/Dot_product\"\u003E\u003Cspan style=\"color: blue; font-family: \u0026quot;Arial\u0026quot;,\u0026quot;sans-serif\u0026quot;; font-size: 13.5pt; mso-fareast-font-family: \u0026quot;Times New Roman\u0026quot;;\"\u003EWikipedia\u003C\/span\u003E\u003C\/a\u003E\u003Cspan style=\"font-family: Arial, sans-serif; font-size: 13.5pt;\"\u003E\u0026nbsp; Or\u0026nbsp;\u003Ca href=\"http:\/\/hyperphysics.phy-astr.gsu.edu\/hbase\/vsca.html\"\u003E\u003Cspan style=\"color: blue;\"\u003Ehyperphysic\u003C\/span\u003E\u003C\/a\u003E\u003C\/span\u003E\u003Ca href=\"http:\/\/hyperphysics.phy-astr.gsu.edu\/hbase\/vsca.html\"\u003E\u003Cspan style=\"color: blue; font-family: \u0026quot;Arial\u0026quot;,\u0026quot;sans-serif\u0026quot;; font-size: 13.5pt; mso-fareast-font-family: \u0026quot;Times New Roman\u0026quot;;\"\u003E\u0026nbsp;\u003C\/span\u003E\u003C\/a\u003E\u003Cspan style=\"font-family: Arial, sans-serif; font-size: 13.5pt;\"\u003EOr\u0026nbsp;\u003Ca href=\"http:\/\/www.algebralab.org\/lessons\/lesson.aspx?file=Trigonometry_TrigVectorDotProd.xml\"\u003E\u003Cspan style=\"color: blue;\"\u003Ealgebralab\u003C\/span\u003E\u003C\/a\u003E\u003C\/span\u003E\u003Cspan style=\"font-family: 'Times New Roman', serif; font-size: 13.5pt;\"\u003E\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cb\u003E\u003Cspan style=\"font-family: Arial, sans-serif; font-size: 13.5pt;\"\u003EBefore reading further, I advise u to go through\u0026nbsp;\u003C\/span\u003E\u003C\/b\u003E\u003Ca href=\"http:\/\/cuda-programming.blogspot.in\/2013\/01\/cuda-program-for-vector-addition-for.html\"\u003E\u003Cb\u003E\u003Cspan style=\"color: blue; font-family: \u0026quot;Arial\u0026quot;,\u0026quot;sans-serif\u0026quot;; font-size: 13.5pt; mso-fareast-font-family: \u0026quot;Times New Roman\u0026quot;;\"\u003Ethis\u0026nbsp;article\u003C\/span\u003E\u003C\/b\u003E\u003C\/a\u003E\u003Cb\u003E\u003Cspan style=\"font-family: Arial, sans-serif; font-size: 13.5pt;\"\u003E\u0026nbsp;so you more\u0026nbsp;familiar\u0026nbsp;with coding style. Please go through the explanation and come back to\u003Ca href=\"http:\/\/cuda-programming.blogspot.in\/2013\/01\/thread-and-block-heuristics-in-cuda.html\" target=\"_blank\"\u003E this\u0026nbsp;article.\u003C\/a\u003E\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/b\u003E\u003Cbr \/\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"font-family: Arial, sans-serif; font-size: 13.5pt;\"\u003EWe divide this article in two part\u003Cb\u003E. Part1\u003C\/b\u003E will describe everything how we come to the code and \u003Cb\u003EPart2\u003C\/b\u003E will list code and more explanation regarding threads and blocks.\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"font-family: Arial, sans-serif; font-size: 13.5pt;\"\u003ELet’s start discussion on Dot Product.\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cb\u003E\u003Cu\u003E\u003Cspan style=\"font-family: Arial, sans-serif; font-size: 13.5pt;\"\u003EPart 1\u003C\/span\u003E\u003C\/u\u003E\u003C\/b\u003E\u003Cb\u003E\u003Cspan style=\"font-family: Arial, sans-serif; font-size: 13.5pt;\"\u003E\u0026nbsp;\u0026nbsp; \u003C\/span\u003E\u003C\/b\u003E\u003Cspan style=\"font-family: Arial, sans-serif; font-size: 13.5pt;\"\u003E(click here to jump to\u0026nbsp;\u003C\/span\u003E\u003Ca href=\"http:\/\/cuda-programming.blogspot.in\/2013\/01\/vector-dot-product-in-cuda-c-cuda-c.html\" style=\"font-size: x-large; text-align: center;\" target=\"_blank\"\u003EPart 2\u003C\/a\u003E\u003Cspan style=\"font-family: Arial, sans-serif; font-size: 13.5pt;\"\u003E)\u003Cb\u003E\u003Cu\u003E\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/u\u003E\u003C\/b\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"font-family: Arial, sans-serif; font-size: 13.5pt;\"\u003E\u003Cbr \/\u003EUnlike vector addition, dot product is a reduction from vectors to a scalar.\u003C\/span\u003E\u003Cspan style=\"font-family: 'Times New Roman', serif; font-size: 13.5pt;\"\u003E\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cb\u003E\u003Cspan style=\"color: blue; font-family: \u0026quot;Arial\u0026quot;,\u0026quot;sans-serif\u0026quot;; font-size: 13.5pt; mso-fareast-font-family: \u0026quot;Times New Roman\u0026quot;;\"\u003Ec = a ∙ b\u003C\/span\u003E\u003C\/b\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt; text-align: left;\"\u003E\u003Cb\u003E\u003Cspan style=\"color: blue; font-family: \u0026quot;Arial\u0026quot;,\u0026quot;sans-serif\u0026quot;; font-size: 13.5pt; mso-fareast-font-family: \u0026quot;Times New Roman\u0026quot;;\"\u003Ec = (a0, a1, a2, a3) ∙ (b0, b1, b2, b3)\u003C\/span\u003E\u003C\/b\u003E\u003Cspan style=\"font-family: 'Times New Roman', serif; font-size: 13.5pt;\"\u003E\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt; text-align: left;\"\u003E\u003Cb\u003E\u003Cspan style=\"color: blue; font-family: \u0026quot;Arial\u0026quot;,\u0026quot;sans-serif\u0026quot;; font-size: 13.5pt; mso-fareast-font-family: \u0026quot;Times New Roman\u0026quot;;\"\u003Ec = a0 b0 + a1 b1 + a2 b2 + a3 b3\u003C\/span\u003E\u003C\/b\u003E\u003Cspan style=\"font-family: 'Times New Roman', serif; font-size: 13.5pt;\"\u003E\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"font-family: \u0026quot;Arial\u0026quot;,\u0026quot;sans-serif\u0026quot;; font-size: 12.0pt;\"\u003EFor example, if we take the dot product of two four-element vectors, we would get\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"font-family: \u0026quot;Arial\u0026quot;,\u0026quot;sans-serif\u0026quot;; font-size: 12.0pt;\"\u003EEquation 1.\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Ctable border=\"1\" cellpadding=\"0\" cellspacing=\"0\" class=\"MsoTableGrid\" style=\"border-collapse: collapse; border: none; mso-border-alt: solid windowtext .5pt; mso-padding-alt: 0in 5.4pt 0in 5.4pt; mso-yfti-tbllook: 1184;\"\u003E \u003Ctbody\u003E\u003Ctr\u003E  \u003Ctd style=\"background: #F2F2F2; border: solid windowtext 1.0pt; mso-background-themecolor: background1; mso-background-themeshade: 242; mso-border-alt: solid windowtext .5pt; padding: 0in 5.4pt 0in 5.4pt; width: 6.65in;\" valign=\"top\" width=\"638\"\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cb\u003E\u003Ci\u003E\u003Cspan style=\"font-family: \u0026quot;Arial\u0026quot;,\u0026quot;sans-serif\u0026quot;; font-size: 12.0pt;\"\u003EEquation   1\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/i\u003E\u003C\/b\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cb\u003E\u003Ci\u003E\u003Cspan style=\"font-family: \u0026quot;Arial\u0026quot;,\u0026quot;sans-serif\u0026quot;; font-size: 12.0pt;\"\u003E(x1,   x2, x3, x4). (y1, y2, y3, y4) = x1y1 + x2y2 +\u0026nbsp;   x3y3 + x4y4\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/i\u003E\u003C\/b\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003C\/td\u003E \u003C\/tr\u003E\u003C\/tbody\u003E\u003C\/table\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"font-family: \u0026quot;Arial\u0026quot;,\u0026quot;sans-serif\u0026quot;; font-size: 12.0pt;\"\u003EPerhaps the algorithm we tend to use is becoming obvious. We can do the first step exactly how we did vector addition. Each thread multiplies a pair of corresponding entries, and then every thread moves on to its next pair. Because the result needs to be the sum of all these pairwise products, each thread keeps\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"font-family: \u0026quot;Arial\u0026quot;,\u0026quot;sans-serif\u0026quot;; font-size: 12.0pt;\"\u003Ea running sum of the pairs it has added. Just like in the addition example, the threads increment their indices by the total number of threads to ensure we don’t miss any elements and don’t multiply a pair twice. Here is the first step of the dot product routine:\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"font-family: \u0026quot;Arial\u0026quot;,\u0026quot;sans-serif\u0026quot;; font-size: 12.0pt;\"\u003EAs you can see, we have declared a buffer of shared memory named cache. This\u0026nbsp; buffer will be used to store each thread’s running sum. Soon we will see \u003Ci\u003Ewhy \u003C\/i\u003Ewe do this, but for now we will simply examine the mechanics by which we accomplish it. It is trivial to declare a variable to reside in shared memory, and it is identical to the means by which you declare a variable as static or volatile in standard C:\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Ctable border=\"1\" cellpadding=\"0\" cellspacing=\"0\" class=\"MsoTableGrid\" style=\"border-collapse: collapse; border: none; mso-border-alt: solid windowtext .5pt; mso-padding-alt: 0in 5.4pt 0in 5.4pt; mso-yfti-tbllook: 1184;\"\u003E \u003Ctbody\u003E\u003Ctr\u003E  \u003Ctd style=\"background: #F2F2F2; border: solid windowtext 1.0pt; mso-background-themecolor: background1; mso-background-themeshade: 242; mso-border-alt: solid windowtext .5pt; padding: 0in 5.4pt 0in 5.4pt; width: 6.65in;\" valign=\"top\" width=\"638\"\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cb\u003E\u003Cspan style=\"font-family: \u0026quot;Arial\u0026quot;,\u0026quot;sans-serif\u0026quot;; font-size: 12.0pt;\"\u003E__shared__ float \u003C\/span\u003E\u003C\/b\u003E\u003Cb\u003E\u003Cspan style=\"font-family: \u0026quot;Arial\u0026quot;,\u0026quot;sans-serif\u0026quot;; font-size: 12.0pt;\"\u003Ecache[threadsPerBlock];\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/b\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003C\/td\u003E \u003C\/tr\u003E\u003C\/tbody\u003E\u003C\/table\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"font-family: \u0026quot;Arial\u0026quot;,\u0026quot;sans-serif\u0026quot;; font-size: 12.0pt;\"\u003EWe declare the array of size threadsPerBlock so each thread in the block has a place to store its temporary result. Recall that when we have allocated memory globally, we allocated enough for every thread that runs the kernel, or threadsPerBlock times the total number of blocks. But since the compiler will create a copy of the shared variables for each block, we need to allocate only enough memory such that each thread in the block has an entry. After allocating the shared memory, we compute our data indices much like we have in the past:\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Ctable border=\"1\" cellpadding=\"0\" cellspacing=\"0\" class=\"MsoTableGrid\" style=\"border-collapse: collapse; border: none; mso-border-alt: solid windowtext .5pt; mso-padding-alt: 0in 5.4pt 0in 5.4pt; mso-yfti-tbllook: 1184;\"\u003E \u003Ctbody\u003E\u003Ctr\u003E  \u003Ctd style=\"background: #F2F2F2; border: solid windowtext 1.0pt; mso-background-themecolor: background1; mso-background-themeshade: 242; mso-border-alt: solid windowtext .5pt; padding: 0in 5.4pt 0in 5.4pt; width: 6.65in;\" valign=\"top\" width=\"638\"\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"font-family: \u0026quot;Arial\u0026quot;,\u0026quot;sans-serif\u0026quot;; font-size: 12.0pt; mso-bidi-font-weight: bold;\"\u003Eint \u003C\/span\u003E\u003Cspan style=\"font-family: \u0026quot;Arial\u0026quot;,\u0026quot;sans-serif\u0026quot;; font-size: 12.0pt;\"\u003Etid   = threadIdx.x + blockIdx.x * blockDim.x;\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"font-family: \u0026quot;Arial\u0026quot;,\u0026quot;sans-serif\u0026quot;; font-size: 12.0pt; mso-bidi-font-weight: bold;\"\u003Eint \u003C\/span\u003E\u003Cspan style=\"font-family: \u0026quot;Arial\u0026quot;,\u0026quot;sans-serif\u0026quot;; font-size: 12.0pt;\"\u003EcacheIndex   = threadIdx.x;\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003C\/td\u003E \u003C\/tr\u003E\u003C\/tbody\u003E\u003C\/table\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"font-family: \u0026quot;Arial\u0026quot;,\u0026quot;sans-serif\u0026quot;; font-size: 12.0pt;\"\u003EThe computation for the variable tid should look familiar by now; we are just combining the block and thread indices to get a global offset into our input arrays. The offset into our shared memory cache is simply our thread index. Again, we don’t need to incorporate our block index into this offset because each block has its own private copy of this shared memory.\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"font-family: \u0026quot;Arial\u0026quot;,\u0026quot;sans-serif\u0026quot;; font-size: 12.0pt;\"\u003EFinally, we clear our shared memory buffer so that later we will be able to blindly sum the entire array without worrying whether a particular entry has valid data stored there:\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Ctable border=\"1\" cellpadding=\"0\" cellspacing=\"0\" class=\"MsoTableGrid\" style=\"border-collapse: collapse; border: none; mso-border-alt: solid windowtext .5pt; mso-padding-alt: 0in 5.4pt 0in 5.4pt; mso-yfti-tbllook: 1184;\"\u003E \u003Ctbody\u003E\u003Ctr\u003E  \u003Ctd style=\"background: #F2F2F2; border: solid windowtext 1.0pt; mso-background-themecolor: background1; mso-background-themeshade: 242; mso-border-alt: solid windowtext .5pt; padding: 0in 5.4pt 0in 5.4pt; width: 6.65in;\" valign=\"top\" width=\"638\"\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Ci\u003E\u003Cspan style=\"color: #5a5a5a; font-family: \u0026quot;Arial\u0026quot;,\u0026quot;sans-serif\u0026quot;; font-size: 12.0pt;\"\u003E\u003Cbr \/\u003E\u003C\/span\u003E\u003C\/i\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Ci\u003E\u003Cspan style=\"color: #5a5a5a; font-family: \u0026quot;Arial\u0026quot;,\u0026quot;sans-serif\u0026quot;; font-size: 12.0pt;\"\u003E\/\/   set the cache values\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/i\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"font-family: Arial, sans-serif; font-size: 12pt;\"\u003E\u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp;cache[cacheIndex]   = temp;\u003C\/span\u003E\u003Cspan style=\"font-family: \u0026quot;Arial\u0026quot;,\u0026quot;sans-serif\u0026quot;; font-size: 12.0pt;\"\u003E\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"font-family: Arial, sans-serif; font-size: 12pt;\"\u003E\u003Cbr \/\u003E\u003C\/span\u003E\u003C\/div\u003E\u003C\/td\u003E \u003C\/tr\u003E\u003C\/tbody\u003E\u003C\/table\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"font-family: \u0026quot;Arial\u0026quot;,\u0026quot;sans-serif\u0026quot;; font-size: 12.0pt;\"\u003EIt will be possible that not every entry will be used if the size of the input vectors is not a multiple of the number of threads per block. In this case, the last block will have some threads that do nothing and therefore do not write values. Each thread computes a running sum of the product of corresponding entries in a and b. After reaching the end of the array, each thread stores its temporary sum into the shared buffer.\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Ctable border=\"1\" cellpadding=\"0\" cellspacing=\"0\" class=\"MsoTableGrid\" style=\"border-collapse: collapse; border: none; mso-border-alt: solid windowtext .5pt; mso-padding-alt: 0in 5.4pt 0in 5.4pt; mso-yfti-tbllook: 1184;\"\u003E \u003Ctbody\u003E\u003Ctr\u003E  \u003Ctd style=\"background: #F2F2F2; border: solid windowtext 1.0pt; mso-background-themecolor: background1; mso-background-themeshade: 242; mso-border-alt: solid windowtext .5pt; padding: 0in 5.4pt 0in 5.4pt; width: 6.65in;\" valign=\"top\" width=\"638\"\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"color: blue; font-family: \u0026quot;Arial\u0026quot;,\u0026quot;sans-serif\u0026quot;; font-size: 12.0pt; mso-no-proof: yes;\"\u003Efloat\u003C\/span\u003E\u003Cspan style=\"font-family: \u0026quot;Arial\u0026quot;,\u0026quot;sans-serif\u0026quot;; font-size: 12.0pt; mso-no-proof: yes;\"\u003E temp = 0;\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"color: blue; font-family: \u0026quot;Arial\u0026quot;,\u0026quot;sans-serif\u0026quot;; font-size: 12.0pt; mso-no-proof: yes;\"\u003Ewhile\u003C\/span\u003E\u003Cspan style=\"font-family: \u0026quot;Arial\u0026quot;,\u0026quot;sans-serif\u0026quot;; font-size: 12.0pt; mso-no-proof: yes;\"\u003E (tid \u0026lt; N) \u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"font-family: \u0026quot;Arial\u0026quot;,\u0026quot;sans-serif\u0026quot;; font-size: 12.0pt; mso-no-proof: yes;\"\u003E{\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"font-family: \u0026quot;Arial\u0026quot;,\u0026quot;sans-serif\u0026quot;; font-size: 12.0pt; mso-no-proof: yes;\"\u003E\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; temp += a[tid] * b[tid];\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"font-family: \u0026quot;Arial\u0026quot;,\u0026quot;sans-serif\u0026quot;; font-size: 12.0pt; mso-no-proof: yes;\"\u003E\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; tid += blockDim.x * gridDim.x;\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"font-family: \u0026quot;Arial\u0026quot;,\u0026quot;sans-serif\u0026quot;; font-size: 12.0pt; mso-no-proof: yes;\"\u003E}\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"color: green; font-family: \u0026quot;Arial\u0026quot;,\u0026quot;sans-serif\u0026quot;; font-size: 12.0pt; mso-no-proof: yes;\"\u003E\/\/ set the cache values\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"font-family: \u0026quot;Arial\u0026quot;,\u0026quot;sans-serif\u0026quot;; font-size: 12.0pt; mso-no-proof: yes;\"\u003E\u0026nbsp; cache[cacheIndex] = temp;\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003C\/td\u003E \u003C\/tr\u003E\u003C\/tbody\u003E\u003C\/table\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"font-family: \u0026quot;Arial\u0026quot;,\u0026quot;sans-serif\u0026quot;; font-size: 12.0pt;\"\u003EAt this point in the algorithm, we need to sum all the temporary values we’ve placed in the cache. To do this, we will need some of the threads to read the values that have been stored there. However, as we mentioned, this is a potentially dangerous operation. We need a method to guarantee that all of these\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"font-family: \u0026quot;Arial\u0026quot;,\u0026quot;sans-serif\u0026quot;; font-size: 12.0pt;\"\u003EWrite’s to the shared array \u003Cb\u003Ecache[]\u003C\/b\u003E complete before anyone tries to read from this buffer. Fortunately, such a method exists:\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Ctable border=\"1\" cellpadding=\"0\" cellspacing=\"0\" class=\"MsoTableGrid\" style=\"border-collapse: collapse; border: none; mso-border-alt: solid windowtext .5pt; mso-padding-alt: 0in 5.4pt 0in 5.4pt; mso-yfti-tbllook: 1184;\"\u003E \u003Ctbody\u003E\u003Ctr\u003E  \u003Ctd style=\"background: #F2F2F2; border: solid windowtext 1.0pt; mso-background-themecolor: background1; mso-background-themeshade: 242; mso-border-alt: solid windowtext .5pt; padding: 0in 5.4pt 0in 5.4pt; width: 6.65in;\" valign=\"top\" width=\"638\"\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Ci\u003E\u003Cspan style=\"color: #5a5a5a; font-family: \u0026quot;Arial\u0026quot;,\u0026quot;sans-serif\u0026quot;; font-size: 12.0pt;\"\u003E\/\/   synchronize threads in this block\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/i\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"font-family: Arial, sans-serif; font-size: 12pt;\"\u003E__syncthreads();\u003C\/span\u003E\u003Cspan style=\"font-family: \u0026quot;Arial\u0026quot;,\u0026quot;sans-serif\u0026quot;; font-size: 12.0pt;\"\u003E\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003C\/td\u003E \u003C\/tr\u003E\u003C\/tbody\u003E\u003C\/table\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"font-family: \u0026quot;Arial\u0026quot;,\u0026quot;sans-serif\u0026quot;; font-size: 12.0pt;\"\u003EThis call guarantees that every thread in the block has completed instructions prior to the \u003Cb\u003E__syncthreads()\u003C\/b\u003E before the hardware will execute the next instruction on any thread. This is exactly what we need! We now know that when the first thread executes the first instruction after our \u003Cb\u003E__syncthreads(),\u003C\/b\u003E every other thread in the block has also finished executing up to the \u003Cb\u003E__syncthreads().\u003C\/b\u003ENow that we have guaranteed that our temporary cache has been filled, we can sum the values in it. We call the general process of taking an input array and performing some computations that produce a smaller array of results a \u003Ci\u003Ereduction\u003C\/i\u003E. Reductions arise often in parallel computing, which leads to the desire to give them a name.\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"font-family: \u0026quot;Arial\u0026quot;,\u0026quot;sans-serif\u0026quot;; font-size: 12.0pt;\"\u003EThe naïve way to accomplish this reduction would be having one thread iterate over the shared memory and calculate a running sum. This will take us time proportional to the length of the array. However, since we have hundreds of threads available to do our work, we can do this reduction in parallel and take time that is proportional to the logarithm of the length of the array. At first, the following code will look convoluted; we’ll break it down in a moment.\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"font-family: \u0026quot;Arial\u0026quot;,\u0026quot;sans-serif\u0026quot;; font-size: 12.0pt;\"\u003EFirst, the following code will look convoluted; we’ll break it down in a moment. The general idea is that each thread will add two of the values in \u003Cb\u003Ecache[]\u003C\/b\u003Eand store the result back to cache[]. Since each thread combines two entries into one, we complete this step with half as many entries as we started with. In the next step, we do the same thing on the remaining half. We continue in this fashion for \u003Cb\u003Elog2(threadsPerBlock)\u003C\/b\u003Esteps until we have the sum of every entry in cache[]. For our example, we’re using 256 threads per block, so it takes 8 iterations of this process to reduce the 256 entries in \u003Cb\u003Ecache[]\u003C\/b\u003E to a single sum.\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Ctable border=\"1\" cellpadding=\"0\" cellspacing=\"0\" class=\"MsoTableGrid\" style=\"border-collapse: collapse; border: none; mso-border-alt: solid windowtext .5pt; mso-padding-alt: 0in 5.4pt 0in 5.4pt; mso-yfti-tbllook: 1184;\"\u003E \u003Ctbody\u003E\u003Ctr\u003E  \u003Ctd style=\"background: #F2F2F2; border: solid windowtext 1.0pt; mso-background-themecolor: background1; mso-background-themeshade: 242; mso-border-alt: solid windowtext .5pt; padding: 0in 5.4pt 0in 5.4pt; width: 6.65in;\" valign=\"top\" width=\"638\"\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"font-family: \u0026quot;Arial\u0026quot;,\u0026quot;sans-serif\u0026quot;; font-size: 12.0pt; mso-no-proof: yes;\"\u003EThe   code \u003Cspan style=\"color: blue;\"\u003Efor\u003C\/span\u003E \u003Cspan style=\"color: blue;\"\u003Ethis\u003C\/span\u003E  follows:\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"color: green; font-family: \u0026quot;Arial\u0026quot;,\u0026quot;sans-serif\u0026quot;; font-size: 12.0pt; mso-no-proof: yes;\"\u003E\/\/ for reductions, threadsPerBlock must be a power of 2\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"color: green; font-family: \u0026quot;Arial\u0026quot;,\u0026quot;sans-serif\u0026quot;; font-size: 12.0pt; mso-no-proof: yes;\"\u003E\/\/ because of the following code\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"color: blue; font-family: \u0026quot;Arial\u0026quot;,\u0026quot;sans-serif\u0026quot;; font-size: 12.0pt; mso-no-proof: yes;\"\u003Eint\u003C\/span\u003E\u003Cspan style=\"font-family: \u0026quot;Arial\u0026quot;,\u0026quot;sans-serif\u0026quot;; font-size: 12.0pt; mso-no-proof: yes;\"\u003E i = blockDim.x\/2;\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"color: blue; font-family: \u0026quot;Arial\u0026quot;,\u0026quot;sans-serif\u0026quot;; font-size: 12.0pt; mso-no-proof: yes;\"\u003Ewhile\u003C\/span\u003E\u003Cspan style=\"font-family: \u0026quot;Arial\u0026quot;,\u0026quot;sans-serif\u0026quot;; font-size: 12.0pt; mso-no-proof: yes;\"\u003E (i != 0) \u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"font-family: \u0026quot;Arial\u0026quot;,\u0026quot;sans-serif\u0026quot;; font-size: 12.0pt; mso-no-proof: yes;\"\u003E{\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"color: blue; font-family: \u0026quot;Arial\u0026quot;,\u0026quot;sans-serif\u0026quot;; font-size: 12.0pt; mso-no-proof: yes;\"\u003E\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; if\u003C\/span\u003E\u003Cspan style=\"font-family: \u0026quot;Arial\u0026quot;,\u0026quot;sans-serif\u0026quot;; font-size: 12.0pt; mso-no-proof: yes;\"\u003E  (cacheIndex \u0026lt; i)\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"font-family: \u0026quot;Arial\u0026quot;,\u0026quot;sans-serif\u0026quot;; font-size: 12.0pt; mso-no-proof: yes;\"\u003E\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; \u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"font-family: \u0026quot;Arial\u0026quot;,\u0026quot;sans-serif\u0026quot;; font-size: 12.0pt; mso-no-proof: yes;\"\u003E\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; cache[cacheIndex] +=   cache[cacheIndex + i];\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"font-family: \u0026quot;Arial\u0026quot;,\u0026quot;sans-serif\u0026quot;; font-size: 12.0pt; mso-no-proof: yes;\"\u003E\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; \u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"font-family: \u0026quot;Arial\u0026quot;,\u0026quot;sans-serif\u0026quot;; font-size: 12.0pt; mso-no-proof: yes;\"\u003E\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; __syncthreads();\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"font-family: \u0026quot;Arial\u0026quot;,\u0026quot;sans-serif\u0026quot;; font-size: 12.0pt; mso-no-proof: yes;\"\u003E\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; \u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"font-family: \u0026quot;Arial\u0026quot;,\u0026quot;sans-serif\u0026quot;; font-size: 12.0pt; mso-no-proof: yes;\"\u003E\u0026nbsp;i \/= 2;\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"font-family: \u0026quot;Arial\u0026quot;,\u0026quot;sans-serif\u0026quot;; font-size: 12.0pt; mso-no-proof: yes;\"\u003E}\u003C\/span\u003E\u003Cb\u003E\u003Cspan style=\"font-family: \u0026quot;Arial\u0026quot;,\u0026quot;sans-serif\u0026quot;; font-size: 12.0pt;\"\u003E\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/b\u003E\u003C\/div\u003E\u003C\/td\u003E \u003C\/tr\u003E\u003C\/tbody\u003E\u003C\/table\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"font-family: \u0026quot;Arial\u0026quot;,\u0026quot;sans-serif\u0026quot;; font-size: 12.0pt;\"\u003EFor the first step, we start with i as half the number of \u003Cb\u003EthreadsPerBlock\u003C\/b\u003E. We only want the threads with indices less than this value to do any work, so we conditionally add two entries of \u003Cb\u003Ecache[]\u003C\/b\u003Eif the thread’s index is less than i. We protect our addition within \u003Cb\u003Ean if(cacheIndex \u0026lt; i)\u003C\/b\u003E block. Each thread will take the entry at its index in \u003Cb\u003Ecache[],\u003C\/b\u003Eadd it to the entry at its index offset by i, and store this sum back to \u003Cb\u003Ecache[].\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/b\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"font-family: \u0026quot;Arial\u0026quot;,\u0026quot;sans-serif\u0026quot;; font-size: 12.0pt;\"\u003ESuppose there were eight entries in cache[] and, as a result, i had the value 4. Shows by Fig. below;\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"separator\" style=\"clear: both; text-align: center;\"\u003E\u003Ca href=\"http:\/\/1.bp.blogspot.com\/-X-4FUh3p58M\/UPbOqX7L00I\/AAAAAAAAAs0\/9V5d9CiAzjo\/s1600\/reduction+vector+dot+product.png\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"\u003E\u003Cimg border=\"0\" height=\"247\" src=\"http:\/\/1.bp.blogspot.com\/-X-4FUh3p58M\/UPbOqX7L00I\/AAAAAAAAAs0\/9V5d9CiAzjo\/s400\/reduction+vector+dot+product.png\" width=\"400\" \/\u003E\u003C\/a\u003E\u003C\/div\u003E\u003Cdiv class=\"separator\" style=\"clear: both; text-align: center;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv class=\"separator\" style=\"clear: both; text-align: center;\"\u003E\u003Cspan style=\"font-size: large;\"\u003EContinue with \u003Ca href=\"http:\/\/cuda-programming.blogspot.in\/2013\/01\/vector-dot-product-in-cuda-c-cuda-c.html\" target=\"_blank\"\u003EPart 2\u003C\/a\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"separator\" style=\"clear: both; text-align: center;\"\u003E\u003Cbr \/\u003E\u003C\/div\u003E\u003Cdiv class=\"separator\" style=\"clear: both; text-align: left;\"\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"font-family: Arial, sans-serif; font-size: 13.5pt;\"\u003EGot Questions?\u0026nbsp;\u003C\/span\u003E\u003Cspan style=\"font-family: 'Times New Roman', serif; font-size: 13.5pt;\"\u003E\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"font-family: Arial, sans-serif; font-size: 13.5pt;\"\u003EFeel free to ask me any question because I'd be happy to walk you through step by step!\u0026nbsp;\u003C\/span\u003E\u003Cspan style=\"font-family: 'Times New Roman', serif; font-size: 13.5pt;\"\u003E\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"font-family: Arial, sans-serif; font-size: 13.5pt;\"\u003E\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cbr \/\u003E\u003Cbr \/\u003EReferences\u0026nbsp;\u003C\/span\u003E\u003Cspan style=\"font-family: 'Times New Roman', serif; font-size: 13.5pt;\"\u003E\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Ca href=\"http:\/\/en.wikipedia.org\/wiki\/Dot_product\"\u003E\u003Cspan style=\"color: blue; font-family: Arial, sans-serif; font-size: 12pt;\"\u003EWikipedia\u003C\/span\u003E\u003C\/a\u003E\u003Cspan style=\"font-family: Arial, sans-serif; font-size: 12pt;\"\u003E\u0026nbsp;\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Ca href=\"http:\/\/hyperphysics.phy-astr.gsu.edu\/hbase\/vsca.html\"\u003E\u003Cspan style=\"color: blue; font-family: Arial, sans-serif; font-size: 12pt;\"\u003Ehyperphysic\u003C\/span\u003E\u003C\/a\u003E\u003Ca href=\"http:\/\/hyperphysics.phy-astr.gsu.edu\/hbase\/vsca.html\"\u003E\u003Cspan style=\"color: blue; font-family: Arial, sans-serif; font-size: 12pt;\"\u003E\u0026nbsp;\u003C\/span\u003E\u003C\/a\u003E\u003Cu\u003E\u003Cspan style=\"color: blue; font-family: Arial, sans-serif; font-size: 12pt;\"\u003E\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/u\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Ca href=\"http:\/\/www.algebralab.org\/lessons\/lesson.aspx?file=Trigonometry_TrigVectorDotProd.xml\"\u003E\u003Cspan style=\"color: blue; font-family: Arial, sans-serif; font-size: 12pt;\"\u003Ealgebralab\u003C\/span\u003E\u003C\/a\u003E\u003Cspan style=\"font-family: 'Times New Roman', serif; font-size: 12pt;\"\u003E\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Ca href=\"http:\/\/cuda-programming.blogspot.in\/2012\/12\/cuda-c-programming-guide.html\"\u003E\u003Cspan style=\"background-color: white; background-position: initial initial; background-repeat: initial initial; border: 1pt none windowtext; color: #f43a40; font-family: Arial, sans-serif; font-size: 12pt; padding: 0in;\"\u003ECUDA C Programming Guide\u003C\/span\u003E\u003C\/a\u003E\u003Cspan style=\"font-family: 'Times New Roman', serif; font-size: 12pt;\"\u003E\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Ca href=\"http:\/\/docs.nvidia.com\/cuda\/index.html\"\u003E\u003Cspan style=\"background-color: white; background-position: initial initial; background-repeat: initial initial; border: 1pt none windowtext; color: #d71a21; font-family: Arial, sans-serif; font-size: 12pt; padding: 0in;\"\u003ECUDA; Nvidia\u003C\/span\u003E\u003C\/a\u003E\u003Cspan style=\"font-family: 'Times New Roman', serif; font-size: 12pt;\"\u003E\u003Co:p\u003E\u003C\/o:p\u003E\u003C\/span\u003E\u003C\/div\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"font-family: Arial, sans-serif; font-size: 13.5pt;\"\u003E\u003Cbr \/\u003E\u003Cbr \/\u003EFor Contact us….. Click on Contact us Tab\u003C\/span\u003E\u003C\/div\u003E\u003Cbr \/\u003E\u003Cdiv class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt;\"\u003E\u003Cspan style=\"font-family: \u0026quot;Arial\u0026quot;,\u0026quot;sans-serif\u0026quot;; font-size: 12.0pt;\"\u003E\u003Cbr \/\u003E\u003C\/span\u003E\u003C\/div\u003E\u003C\/div\u003E"},"link":[{"rel":"replies","type":"application/atom+xml","href":"http:\/\/cuda-programming.blogspot.com\/feeds\/5248587424313715106\/comments\/default","title":"Post Comments"},{"rel":"replies","type":"text/html","href":"http:\/\/cuda-programming.blogspot.com\/2013\/01\/vector-dot-product-in-cuda-c.html#comment-form","title":"1 Comments"},{"rel":"edit","type":"application/atom+xml","href":"http:\/\/www.blogger.com\/feeds\/4433261812355873863\/posts\/default\/5248587424313715106"},{"rel":"self","type":"application/atom+xml","href":"http:\/\/www.blogger.com\/feeds\/4433261812355873863\/posts\/default\/5248587424313715106"},{"rel":"alternate","type":"text/html","href":"http:\/\/cuda-programming.blogspot.com\/2013\/01\/vector-dot-product-in-cuda-c.html","title":"Vector Dot product in CUDA C; CUDA C Program for Vector Dot product"}],"author":[{"name":{"$t":"Nitin Gupta"},"uri":{"$t":"https:\/\/plus.google.com\/118135070601300565447"},"email":{"$t":"noreply@blogger.com"},"gd$image":{"rel":"http://schemas.google.com/g/2005#thumbnail","width":"16","height":"16","src":"http:\/\/img2.blogblog.com\/img\/b16-rounded.gif"}}],"media$thumbnail":{"xmlns$media":"http://search.yahoo.com/mrss/","url":"http:\/\/1.bp.blogspot.com\/-X-4FUh3p58M\/UPbOqX7L00I\/AAAAAAAAAs0\/9V5d9CiAzjo\/s72-c\/reduction+vector+dot+product.png","height":"72","width":"72"},"thr$total":{"$t":"1"}}]}});